#ifndef HEAL_H
#define HEAL_H

#define BANDAGE_HEALING_TIME	( 5 )

const uint[] damages				= { DAMAGE_EYE, DAMAGE_RIGHT_ARM, DAMAGE_LEFT_ARM, DAMAGE_RIGHT_LEG, DAMAGE_LEFT_LEG };
const uint[] damage_states			= { STR_HEAL_MENU_DAMAGE_EYE_WOUND, STR_HEAL_MENU_DAMAGE_RIGHT_ARM, STR_HEAL_MENU_DAMAGE_LEFT_ARM, STR_HEAL_MENU_DAMAGE_RIGHT_LEG, STR_HEAL_MENU_DAMAGE_LEFT_LEG };
const uint16[] heal_items           = { PID_TRAUMATIN, PID_STIMPAK, PID_SUPER_STIMPAK, PID_HEALING_POWDER, PID_ANTIDOTE };
const uint16[] bandage_items		= { PID_BANDAGE, PID_CLOTH };
const uint16[] heatSources			= { PID_FIREPLACE_TOKEN, PID_LIGHTER };
const uint16[] makeshift_splints	= { PID_SHARPENED_POLE, PID_CLUB, PID_LOGS, PID_BOARD };

	#ifndef HEAL
		import bool UseBestHealingItemAvailable( Critter& npc ) from "heal";
		import bool AttemptBandaging( Critter& cr ) from "heal";
		import bool ProccessDoctorSkill( Critter& cr, Critter& targetCr, bool alreadyAllowed ) from "heal";
		import void UseHealingItem( Critter& cr, Critter& targetCr, Item& item ) from "heal";
		import void UseBandageItem( Critter& cr, Critter& targetCr, Item& item ) from "heal";
		import bool AskFirstAid( Critter& cr, Critter& targetCr, bool alreadyAllowed ) from "heal";
		import bool AskHealingItem( Critter& cr, Critter& targetCr, Item& item, bool alreadyAllowed ) from "heal";
	#endif // HEAL

#endif // HEAL_H