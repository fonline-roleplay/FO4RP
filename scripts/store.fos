#include "_macros.fos"

import void FullHeal( Critter& cr ) from "gm";
import void GM_SPAWN( Critter& player, Map& map, int type, int weapon, int AI_type, uint16 hexX, uint16 hexY, int bonus_hp, int bonus_dmg, int bonus_skill ) from "gm";
import void DIALOG_MENU( Critter& cr, string[] data ) from "gm";

//import void StoreMenu( Critter& cr ) from "store";
void StoreMenu( Critter& cr ) //exported
{
	string[] data = { "store@answer_openStore", "Выберите категорию:", 
		"МУСОРКА", "Холодное", "Стрелковое", "Аммуниция + Метательное", "Инструменты", "Броня", "Вещества + Пища", "Ценности", "Расходники", "Хлам",
			 "Недораб Холодное", "Недораб Кулачное", "Недораб Лег Ор", "Недораб Тяж Ор", "Недораб Энерг Ор", "Робы и Одеяния", "Недораб броня", "Пригоршня 7"
	};
	DIALOG_MENU( cr, data );
}

void answer_openStore( Critter& player, uint answerI, string& answerS )
{
	OpenCrate( player, answerI );
}

//import void OpenCrate( Critter& player, uint type ) from "store";
void OpenCrate( Critter& player, uint type ) //exported
{
	if( type >= itemlist.length() ) return;
	
    Map@   map = GetMapByPid( MAP_UTILITY_START, 0 );
    uint16 x = 0, y = 0;
	map.GetEntireCoords( type + 1, 0, x, y );
    Item@ Cont = map.GetItem( x, y, 245 );
    if( !valid( Cont ) ) @Cont = map.AddItem( x, y, 245, 1 );
	if( !valid( Cont ) )
	{
		player.Say( SAY_NETMSG, "Что-то пошло не так." );
		return;
	}
	
	CheckItems( Cont, type );
    
	uint[] data = { player.Id, Cont.Id };
	CreateTimeEvent( __FullSecond + 1, "e_delayed_ShowContainer", data, false );
}

uint e_delayed_ShowContainer( uint[] @ values )
{
	if( !valid(values) || values.length() != 2 ) return 0;
	Critter@ player = GetCritter( values[0] );
	if( !valid(player) ) return 0;
	Item@ cont = GetItem( values[1] );
	if( !valid(cont) ) return 0;
	player.ParamBase[ ST_LAST_CONT_ID ] = cont.Id;
	player.ShowContainer( null, cont, TRANSFER_FAR_CONT );
	return 0;
}

//import void GetRandomPidFromCategory( Critter& cr, uint cat ) from "store";
void GetRandomPidFromCategory( Critter& cr, uint cat ) //exported
{
	uint amount = 0;
	uint itype = ITEM_TYPE_DRUG;
	uint type = 0, count = 0, i = 0;
	switch( cat )
	{ //"Холодное", "Стрелковое", "Аммуниция", "Метательное", "Инструменты", "Броня", "Вещества", "Пища", "Ценности", "Расходники", "Хлам", "Пожертвовать всё", "Исцеление", "Моб"
		case( 0  ): amount = 1; type = 1; itype = ITEM_TYPE_NONE; break; //"Холодное"
		case( 1  ): amount = 1; type = 2; itype = ITEM_TYPE_NONE;  break; //"Стрелковое"
		case( 2  ): amount = 30; type = 3; itype = ITEM_TYPE_AMMO;  break; //"Аммуниция"
		case( 3  ): amount = 10; type = 3; itype = ITEM_TYPE_WEAPON;  break; //"Метательное"
		case( 4  ): amount = 1; type = 4; itype = ITEM_TYPE_NONE;  break; //"Инструменты"
		case( 5  ): amount = 1; type = 5; itype = ITEM_TYPE_NONE;  break; //"Броня"
		case( 6  ): amount = 3; type = 6; itype = ITEM_TYPE_DRUG;  break; //"Вещества"
		case( 7  ): amount = 5; type = 6; itype = ITEM_TYPE_FOOD;  break; //"Пища"
		case( 8  ): amount = 1; type = 7; itype = ITEM_TYPE_NONE;  break; //"Ценности"
		case( 9  ): amount = 10; type = 8; itype = ITEM_TYPE_NONE;  break; //"Расходники"
		case( 10 ): amount = 1; type = 9; itype = ITEM_TYPE_NONE; break; //"Хлам"
		case( 11 ): { //"Пожертвовать"
			cr.StatBase[ ST_KARMA ] += Random( 50, 300 );

			Item@[] items;
			uint count = cr.GetItems( -1, items );
			for( uint i = 0; i < count; i++ ) {
				if( cr.Param[ QST_GAMEMODE ] == GAME_TEST )
					cr.Say( SAY_NETMSG, cr.StatBase[ ST_KARMA ] + " :: cost = " + items[i].Proto.Cost );
				cr.StatBase[ ST_KARMA ] += 75 * ( items[i].Proto.Cost * items[i].GetCount() ) / 100;
				
				if( items[i].GetType() == ITEM_TYPE_WEAPON && items[i].AmmoPid != 0 )
				cr.StatBase[ ST_KARMA ] += 75 * ( GetProtoItem( items[i].AmmoPid ).Cost * items[i].AmmoCount ) / 100;
				DeleteItem( items[i] );
			}
			return; }
		case( 12 ): { //"Исцеление"
			//FullHeal( cr );
			
			//cr.StatBase[ ST_KARMA ] -= Random( 0, 1000 );
			
			cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ? true : false ) ), 120, cr.HexX, cr.HexY );
			cr.Say( SAY_NETMSG, "Боги разочаровались в вас. Они жаждут боли." );
			return; }
		case( 13 ): { //"Искупление"
			if( cr.StatBase[ ST_KARMA ] >= -2000 ) 
			{
				cr.Say( SAY_NETMSG, "Дальнейшее искупление возможно лишь через жертвование." );
				return;
			}
			
			GM_SPAWN( cr, cr.GetMap(), Random( 0, 2150 ), 0, 2, cr.HexX, cr.HexY, 0, 0, 300 );

			Critter@ mob = GetCritter( cr.ParamBase[ MERC_MASTER_ID ] );
			if( valid(mob) )
			{
				cr.Say( SAY_EMOTE, "Вызвает кару господню" );
				cr.StatBase[ ST_KARMA ] += Random( 500, 1000 );
				cr.ParamBase[ MERC_MASTER_ID ] = 0;
			}
			else
			{
				string[] ans = { "Боги безответны.", "Молитесь старательней.", "Искупление близится.", "Кара господня ждёт вас." };
				cr.Say( SAY_NETMSG, ans[ Random( 0, ans.length() - 1 ) ] );
			}
			return; }
		default: break;
	}
	uint result = 0, x = 0, len = itemlist[type].length() - 1;
	while( x < 100 )
	{
		x++;
		result = itemlist[type][ Random( 0, len )];
		
		if( itype != ITEM_TYPE_NONE )
		{
			if( itype == GetProtoItem( result ).Type )
				break;
		}
		else
			break;
	}
	
	if( result > 0 )
	{
		if( false && cr.StatBase[ ST_KARMA ] < 0 ) //Временно отключено.
			cr.Say( SAY_NETMSG, "Вам не хватает веры. Принестие в жертву что-либо." );
		else
		{
			Item@ item = cr.AddItem( result, amount );
			cr.StatBase[ ST_KARMA ] -= GetProtoItem( result ).Cost * amount;
			if( item.GetType() == ITEM_TYPE_WEAPON ) 
			{
				cr.AddItem( item.AmmoPid, item.AmmoCount * 5 );
				cr.StatBase[ ST_KARMA ] -= GetProtoItem( item.AmmoPid ).Cost * item.AmmoCount * 6;
			}
		}
	}
}

//"МУСОРКА", "Холодное", "Стрелковое", "Аммуниция + Метательное", "Инструменты", "Броня", "Вещества + Пища", "Ценности", "Расходники", "Хлам", Недораб Холодное, Недораб Лег Ор, Недораб Тяж Ор, Недораб Энерг Ор, Робы и Одеяния, Недораб броня,  + "Пригоршня 7"
const uint[][] itemlist = {
	{	//МУСОРКА
	},
	{	//Холодное
		PID_REVFIST1,
		PID_REVKNIFE1,
		PID_REVKNIFE2,
	    PID_SHIV,
		PID_SCISSORS,
		PID_CUTTHROAT,
		PID_KNIFE,
		PID_COMBAT_KNIFE,
		PID_WAKIZASHI_BLADE,
		PID_BRASS_KNUCKLES,
		PID_SPIKED_KNUCKLES,
		PID_LIL_JESUS_WEAPON,
		PID_RIPPER,
		PID_SWITCHBLADE,
		PID_CLUB,
		PID_CROWBAR,
		PID_WRENCH,
		PID_REVCLUB1,
		PID_SLEDGEHAMMER,
		PID_SPEAR,
		PID_SHARP_SPEAR,
		PID_SPEAK_P,
		PID_CKNIFE_P,
		PID_KNIFE_P,
		PID_SHARPENED_POLE,
		PID_IRON_PROD,
		PID_GOLF_CLUB,
		PID_WOOD_PLANK,
		PID_WATER_TUBE,
		PID_LOUISVILLE_SLUGGER,
		PID_SUPER_SLEDGE,
		PID_CATTLE_PROD,
		PID_SUPER_CATTLE_PROD,
		PID_CHAIN,
		PID_BOXING_GLOVES,
		PID_PLATED_BOXING_GLOVES,
		PID_RING_BOXING_GLOVES,
		PID_RING_PLATED_BOXING_GLOVES,
		PID_hndglove,
		PID_POWER_FIST,
		PID_MEGA_POWER_FIST
	}, 
	{	//Стрелковое
		PID_REV_RIFLE_LOW,
		PID_SPEARTHROWER1,
		PID_SPRINGER_RIFLE,
		PID_SNIPER_GUN_LOW,
		PID_BIGGUN_LOW,
		PID_GECKO_LOW,
		PID_REVOLVER_LOW,
		PID_SMOKE_GUN_LOW,
		PID_PISTOL_LOW,
		PID_SHOTPISTOL_LOW,
	    PID_ZIP_GUN,
		PID_DRUM_GUN_LOW,
		PID_AUTOGUN_LOW,
		PID_SHOTGUN,
		PID_SAWED_OFF_SHOTGUN,
		PID_QUADRO_SHOTGUN,
		PID_SPEARTHROWER2,
		PID_SAWGUN_LOW,
		PID_14mm_BIGGUN2_LOW,
		PID_ONEHAND_ROCKET_LAUNCHER,
		PID_10MM_PISTOL,
		PID_14MM_PISTOL,
		PID_223_PISTOL,
		PID_44_MAGNUM_REVOLVER,
		PID_9MM_MAUSER,
		PID_DESERT_EAGLE,
		PID_DESERT_EAGLE_EXT_MAG,
		PID_44_MAGNUM_SPEEDLOADER,
		PID_NEEDLER_PISTOL,
		PID_ANACONDA,
		PID_COLT,
		PID_LOW_SNIPER2,
		PID_LOW_SNIPER3,
		PID_DOUBLE_RIFLE,
		PID_HUNTING_RIFLE,
		PID_SCOPED_HUNTING_RIFLE,
		PID_ASSAULT_RIFLE,
		PID_ASSAULT_RIFLE_EXT_MAG,
		PID_ASSAULT_RIFLE_EXT_XXL_MAG,
		PID_ASSAULT_RIFLE_OPT,
		PID_ASSAULT_RIFLE_EXT_MAG_OPT,
		PID_ASSAULT_RIFLE_EXT_XXL_MAG_OPT,
		PID_SNIPER_RIFLE,
		PID_FN_FAL,
		PID_FN_FAL_NIGHT_SCOPE,
		PID_FN_FAL_HPFA,
		PID_RED_RYDER_BB_GUN,
		PID_RED_RYDER_LE_BB_GUN,
		PID_JONNY_BB_GUN,
		PID_INDEPENDENT,
		PID_M72_GAUSS_RIFLE,
		PID_COMBAT_SHOTGUN,
		PID_HK_CAWS,
		PID_PANCOR_JACKHAMMER,
		PID_REMINGTON,
		PID_10MM_SMG,
		PID_HK_P90C,
		PID_TOMMY_GUN,
		PID_HK_G11,
		PID_HK_G11E,
		PID_GREASE_GUN,
		PID_MAUSER_SMG,
		PID_3GUN_LOW,
		PID_GATLING_LOW,
		PID_FLAMER,
		PID_IMPROVED_FLAMETHROWER,
		PID_ROCKET_LAUNCHER,
		PID_MINIGUN,
		PID_AVENGER_MINIGUN,
		PID_VINDICATOR_MINIGUN,
		PID_BOZAR,
		PID_LIGHT_SUPPORT_WEAPON,
		PID_M60,
		PID_IMPROVED_BAZOOKA,
		PID_OLD_MINIGUN,
		PID_PK12_GAUSS_PISTOL,
		PID_FLARE_GUN,
		PID_SOUND_BLASTER,
		PID_GRENADELAUNCHER,
		PID_LASER_PISTOL_LOW,
		PID_LASER_PISTOL_LOW2,
		PID_LASER_PISTOL,
		PID_MAGNETO_LASER_PISTOL,
		PID_SOLAR_SCORCHER,
		PID_LASER_RIFLE,
		PID_LASER_RIFLE_EXT_CAP,
		PID_GATLING_LASER,
		PID_GATLING_LASER,
		PID_ALIEN_LASER_PISTOL,
		PID_LASER_RIFLE_LOW,
		PID_PLASMA_SMG_LOW,
		PID_PLASMA_SMG_LOW2,
		PID_PLASMA_PISTOL,
		PID_PLASMA_PISTOL_EXT_CART,
		PID_TURBO_PLASMA_RIFLE,
		PID_PLASMA_PISTOL_LOW,
		PID_YK32_PULSE_PISTOL,
		PID_YK42B_PULSE_RIFLE,
		PID_SUN,
		PID_SUN2,
		PID_SUN3,
		PID_KIRE,
		PID_M41A,
		PID_RPGUN1,
		PID_RPGUN2,
		PID_RPGUN3
	},
	{	//Аммуниция + Метательное
		PID_BOOMERANG_LOW,
		PID_THROWING_KNIFE,
		PID_MKNIFE_P,
		PID_REV_BALL1,
		PID_REV_BALL2,
		PID_MOLOTOV_COCKTAIL,
		PID_FRAG_GRENADE,
		PID_PLASMA_GRENADE,
		PID_DARTS_LOW,
		PID_10mm_LOW,
		PID_10MM_AP,
		PID_10MM_AP,
		PID_10MM_JHP,
		PID_044mag_LOW,
		PID_44_MAGNUM_JHP,
		PID_44_FMJ_MAGNUM,
		PID_45_CALIBER_AMMO,
		PID_223_LOW,
		PID_223_FMJ,
		PID_12g_LOW,
		PID_SHOTGUN_SHELLS,
		PID_5MM_JHP,
		PID_5MM_AP,
		PID_14mm_LOW,
		PID_14MM_AP,
		PID_7_62MM_AMMO,
		PID_BBS,
		PID_9MM_AMMO,
		PID_9MM_AMMO,
		PID_9MM_BALL,
		PID_FLAMETHROWER_FUEL,
		PID_FLAMETHROWER_FUEL_MK_II,
		PID_GRENADELAUNCHER_AMMO,
		PID_EXPLOSIVE_ROCKET,
		PID_ROCKET_AP,
		PID_CUENCELL_LOW,
		PID_SMALL_ENERGY_CELL,
		PID_MICRO_FUSION_CELL,
		PID_4_7MM_CASELESS,
		PID_HN_NEEDLER_CARTRIDGE,
		PID_HN_AP_NEEDLER_CARTRIDGE,
		PID_NEED_CART_POISON,
		PID_NEED_CART_NT,
		PID_2MM_EC_AMMO,
		PID_FLARE_GUN_AMMO,
		PID_HOWITZER_SHELL,
		PID_HOLY_HAND_GRENADE,
		PID_PULSE_GRENADE,
		PID_FLASH_GRENADE,
		PID_MINE,
		PID_DYNAMITE,
		PID_PLASTIC_EXPLOSIVES,
		PID_FLARE,
		PID_ACTIVE_FLARE,
		PID_ROCK,
		PID_PLANT_SPIKE,
		PID_GUNPOWDER_GRENADE,
		PID_FARGRAF,
		PID_DYNAMITE2,
		PID_FM67,
		PID_grnemi,
		PID_grnfire,
		PID_grnhome,
		PID_grnmltr1,
		PID_grnmltr2,
		PID_grnmltv,
		PID_metgremi,
		PID_metgrnd3,
		PID_metgrnd4,
		PID_methndgr,
		PID_metnozh1,
		PID_metnozh2,
		PID_metfreza,
		PID_metrock,
		PID_metshar1,
		PID_FARTEFCT
	},
	{	//Инструменты
		PID_ROPE,
		PID_LIGHTER,
		PID_FLARE,
		PID_LAMPA,
		PID_MULTI_TOOL,
		PID_WELDING,
		PID_SUPER_TOOL_KIT,
		PID_RESPIRATOR,
		PID_RADIO,
		PID_DEFIB,
		PID_LOCKER_LOW,
		PID_LOCKER_MED,
		PID_LOCKER_HARD,
		PID_ROCK,
		PID_FLINT,
		PID_REVFIST1,
		PID_SHIV,
		PID_KNIFE,
		PID_SCISSORS,
		PID_CUTTHROAT,
		PID_AXE,
		PID_SHOVEL,
		PID_PICKAXE,
		PID_SLEDGEHAMMER,
		PID_COMBAT_KNIFE,
		PID_WRENCH,
		PID_CROWBAR,
		PID_OIL_CAN,
		PID_DRILL,
		PID_SUPER_SLEDGE,
		PID_ROD,
		PID_HOOK,
		PID_STRING,
		PID_LOCKPICKS,
		PID_EXP_LOCKPICK_SET,
		PID_ELECTRONIC_LOCKPICKS,
		PID_ELEC_LOCKPICK_MKII,
		PID_GEIGER_COUNTER,
		PID_STEALTH_BOY,
		PID_MOTION_SENSOR,
		PID_BIG_BOOK_OF_SCIENCE,
		PID_DEANS_ELECTRONICS,
		PID_FIRST_AID_BOOK,
		PID_SCOUT_HANDBOOK,
		PID_GUNS_AND_BULLETS,
		PID_TECHNICAL_MANUAL,
		PID_CHEMISTRY_MANUAL,
		PID_CATS_PAW_ISSUE_5,
		PID_FIRST_AID_KIT,
		PID_FIRST_AID_BAG,
		PID_BLOODY_FIRST_AID_BAG,
		PID_FIELD_MEDIC_KIT,
		PID_DOCTORS_BAG,
		PID_PARAMEDICS_BAG,
		PID_MEDICAL_SUPPLIES,
		PID_STUFF_SUPPLIES,
		PID_TRAVEL_BAG,
		PID_Svarka,
		PID_FSCALPL,
		PID_itscrew1,
		PID_ittool02,
		PID_plkclef1,
		PID_plkmltk1,
		PID_itmina, //горелка
		PID_Scaner, //датчик движения
		PID_VTB, //строительная дрель
		PID_capcan, //это ступка, идиоты
		PID_FONMINE, //швейный набор мк2
		PID_medrout,
		PID_HYPO04,
		PID_repkit1i,
		PID_repkit2i,
		PID_repkit3i,
		PID_plkclef2,
		PID_knflaser,
		PID_itnitki1
	},
	{	//Броня
		PID_FIRE_ARMOR,
	    PID_MUTARMOR_LEATHER,
		PID_MUTARMOR_METAL,
		PID_MUTARMOR_METAL_MK2,
		PID_LEATHER_JACKET,
		PID_CURED_LEATHER_ARMOR,
		PID_CURED_LEATHER_ARMOR_MK_II,
		PID_MANTIS_ARMOUR,
		PID_LEATHER_ARMOR,
		PID_LEATHER_ARMOR_MK_II,
		PID_LEATHER_ARMOR_MK_III,
		PID_FIRERESIST_LEATHER_ARMOR,
		PID_LEATHER_ARMOR_CAMMO,
		PID_LEATHER_ARMOR_RED,
		PID_LEATHER_CHAIN_ARM,
		PID_LEATHER_ARMOR_TRIBE,
		PID_DECORATED_LEATHER_ARMOR_TRIBE,
		PID_METAL_ARMOR,
		PID_METAL_ARMOR_MK_II,
		PID_MIRELURK_ARMOR,
		PID_POLICE_ARMOR,
		PID_COMBAT_ARMOR,
		PID_VEST_MK1,
		PID_glad1,
		PID_ArmorGaz,
		PID_arlthr1,
		PID_arlthr2,
		PID_FZZZ1,
		PID_FZZZ2,
		PID_aras2k1,
		PID_aras2k2,
		PID_arbattl1,
		PID_ardfnder,
		PID_arekzo,
		PID_POLICE_ARMOR,
		PID_BIKER_JACKET,
		PID_OLD_JACKET,
		PID_copinv1,
		PID_CARAVAN_MASTER_JACKET,
		PID_ANTIRAD_COSTUME,
		PID_IMPROVED_JACKET,
		PID_PERSONAL_JACKET,
		PID_LEATHER_ARMOR_MK_III,
		PID_POKRISHKA_ARMOR,
		PID_VEST_MK2,
		PID_POWERED_ARMOR_NEVADA,
		PID_KEEPBRIGE_ROBE,
		PID_TESLA_ARMOR,
		PID_COMBAT_ARMOR_MK_II,
		PID_BROTHERHOOD_COMBAT_ARMOR,
		PID_COMBAT_ARMOR_ENCLAVE,
		PID_BLACK_COMBAT_ARMOR,
		PID_COMBAT_ARMOR_CLAW,
		PID_COMBAT_ARMOR_DESERT_MK1,
		PID_COMBAT_ARMOR_DESERT_MK2,
		PID_COMBAT_ARMOR_DESERT_MK3,
		PID_COMBAT_ARMOR_RNEGATE_MK1,
		PID_COMBAT_ARMOR_RNEGATE_MK2,
		PID_CASER,
		PID_CADES,
		PID_CARED,
		PID_EKZO,
		PID_EKZO_2,
		PID_EKZO_3,
		PID_POWERED_ARMOR,
		PID_OXIDENED_POWER_ARMOR,
		PID_HARDENED_POWER_ARMOR,
		PID_ADVANCED_POWER_ARMOR,
		PID_ADVANCED_POWER_ARMOR_MK2
	},
	{	//Вещества + Пища
		PID_JET_ANTIDOTE,
		PID_ANTIDOTE,
		PID_SUPER_STIMPAK,
		PID_STIMPAK,
		PID_HEALING_POWDER,
		PID_RADAWAY,
		PID_RAD_X,
		PID_MENTATS,          
		PID_BUFFOUT,  	
		PID_PSYCHO,                            	
		PID_JET,                           
		PID_BOOZE,                             	
		PID_ROT_GUT,
		PID_BEER,
		PID_NUKA_COLA,  
		PID_BOTTLE_FULL,
		PID_GLASS_BOTTLE_FULL, 
		PID_BROC_FLOWER,
		PID_XANDER_ROOT,		
		PID_MEAT,                              		
		PID_MUSH_LOW,                          		
		PID_MOLERAT_STOMATCH,                  		
		PID_RAT_MEAT,       		              	
		PID_GECKO_MEAT,          	          		
		PID_COOKED_MEAT,      		          		
		PID_COOKED_RAT_MEAT,    		          	
		PID_COOKED_GECKO_MEAT,                 		
		PID_COOKED_FISH,                       		
		PID_FLAPJACK,                          
		PID_FLOUR,
		PID_ALGAE,		
		PID_COOKED_MOLERAT_STOMATCH,           		
		PID_SALAD,                             		
		PID_CABBAGE,                           	
		PID_CORN,                              		
		PID_RAGOUT,                            		
		PID_MUSH_GREEN,                       		
		PID_PIROG,                             	
		PID_SEEDLING_TONGUE_GECKO,					
		PID_RISING_TONGUE_GECKO,				
		PID_TONGUE_GECKO,							
		PID_SEEDLING_MURAVNIKTAR,					
		PID_RISING_MURAVNIKTAR,					
		PID_MURAVNIKTAR,						
		PID_SEEDLING_BLACK_MUSHROOMS,			
		PID_RISING_BLACK_MUSHROOMS,			
		PID_BLACK_MUSHROOMS,						
		PID_SEEDLING_PALE_MUSHROOM,				
		PID_RISING_PALE_MUSHROOM,					
		PID_PALE_MUSHROOM,					
		PID_SEEDLING_CURL_FLYER,					
		PID_PID_RISING_CURL_FLYER,				
		PID_CURL_FLYER,								
		PID_MANTIS_MEAT,                       		
		PID_VOKAS,                             		
		PID_MANTIS_FOOD,                       		
		PID_lavshtin,                          		
		PID_BURGER,	                     			
		PID_FORSAGE_GUM,                       		
		PID_PIZZA,                             		
		PID_PASLEN,                            		
		PID_POTROHA_SPICED,                    		
		PID_BURRITO,
		PID_GAMMA_GULP_BEER,
		PID_ROENTGEN_RUM,
		PID_BEER_DARK,
		PID_SUPER_ENERGY_DRINK, 	
		PID_WHISKEY,
		PID_WHISKEY_PREWAR,  
		PID_ROOTBEER,    
		PID_ATOM_COLA,             
		PID_BLOODMARRY,                
		PID_TURBO_COLA,                     
		PID_LIQUER,             
		PID_ATOM_COLA_CHERRY,                   
		PID_ATOM_COLA_CRAFT,            
		PID_ATOM_COLA_SEA,                      
		PID_BEER_LIGHT,               
		PID_ATOMIC_COCTAIL,             
		PID_GROG,	
		PID_ULTRA_ANTIDOTE,         
		PID_ANTISMOKE,                        
		PID_UHOD,                     
		PID_BEER2,                           
		PID_medrdot,             
		PID_COMBAT_STIMPACK,                   	
		PID_CLEAN_WATER2,                 
		PID_PRAH,                             
		PID_CARAMEL2,          
		PID_CONOVAL,                           	
		PID_MENTATS_FRUIT,              
		PID_PAINKILLERS2,                    
		PID_AMTH_CORPSE,    
		PID_COOKIE
	},
	{	//Ценности
		PID_RUIN_MAP,
		PID_HOLODISK,
		PID_PIP_BOY_ANALIZATOR,
		PID_BLUE_PASS_KEY,
		PID_HANDCUFFS,
		PID_SKIN_CHANGER,
		PID_BOTTLE_CAPS,
		PID_REAL_BOTTLE_CAPS,
		PID_GOLD_NUGGET,
		PID_GOLDEN_BAR,
		PID_GOLDEN_JEWELRY,
		PID_GOLDEN_COIN,
		PID_MORNING_STAR_MINE,
		PID_KOKOWEEF_MINE_SCRIP,
		PID_FPSHL6,
		PID_itsoap01,
		PID_DOLL,
		PID_RANGER_MAP,
		PID_RAIDERS_MAP,
		PID_MAP,
		PID_SPECTACLES,
		PID_MIRROR_SHADES,
		PID_MOTOGLES,
		PID_BRIEFCASE,
		PID_MOORE_BAD_BRIEFCASE,
		PID_MOORE_GOOD_BRIEFCASE,
		PID_RAMIREZ_BOX_CLOSED,
		PID_RANGERS_TAG,
		PID_NCR_TAG,
		PID_BS_TAG,
		PID_ENCLAVE_TAG,
		PID_SOLDER_TAG,
		PID_FAKE_GECK,
		PID_BAROMETR,
		PID_COMPAS,
		PID_DOSIMETR,
		PID_VIC_RADIO,
		PID_RADIO,
		PID_PACKAGE,
		PID_PACKAGE_CHEK,
		PID_KLESH,
		PID_GUARD_BADGE,
		PID_HUNT,
		PID_SHER_BADGE,
		PID_SHERIFF_BADGE,
		PID_KHAN_BADGE,
		PID_MERCS_SIGN,
		PID_MERCS_SIGN2,
		PID_RANGER_PIN,
		PID_FUZZY_PAINTING,
		PID_PHOTO,
		PID_INFOPAD,
		PID_GOLD_LOCKET,
		PID_ANNA_GOLD_LOCKET,
		PID_CORNELIUS_GOLD_WATCH,
		PID_NECKLACE,
		PID_OZHER,
		PID_TALISMAN,
		PID_OCTOGLOBE,
		PID_TAPE_RECORDER,
		PID_VIC_WATER_FLASK,
		PID_WATER_FLASK,
		PID_DANTON_POISON,
		PID_OXYGEN_TANK,
		PID_POISON_TANK,
		PID_SMALL_STATUETTE,
		PID_URN,
		PID_TROPHY_OF_RECOGNITION,
		PID_MAGIC_8_BALL,
		PID_DAISIES,
		PID_RUBBER_BOOTS,
		PID_INACTIVECOLLAR,
		PID_BALL_GAG,
		PID_BLUE_CONDOM,
		PID_GREEN_CONDOM,
		PID_RED_CONDOM,
		PID_COSMETIC_CASE,
		PID_DICE,
		PID_LOADED_DICE,
		PID_DECK_OF_CARDS,
		PID_MARKED_DECK_OF_CARDS,
		PID_DECK_OF_TRAGIC_CARDS,
		PID_CATS_PAW,
		PID_ACCOUNT_BOOK,
		PID_BECKY_BOOK,
		PID_HUBOLOGIST_BOOK,
		PID_SAMURAI_MAG,
		PID_SCIENCE_MAG,
		PID_BOOK1,
		PID_RPSTUFF1,
		PID_RPSTUFF2,
		PID_RPSTUFF3,
		PID_RPSTUFF4,
		PID_DOG_TAGS,
		PID_BLACK_COC_BADGE,
		PID_RED_COC_BADGE,
		PID_MODOC_DOCUMENTS,
		//PID_MODOC_PASS, //Такого объекта нет!
		// PID_MODOC_DAY_PASS, //Такого объекта нет!
		PID_DAY_PASS,
		PID_FAKE_CITIZENSHIP,
		PID_PRESIDENTIAL_PASS,
		PID_STABLES_ID_BADGE,
		PID_SLAG_MESSAGE,
		PID_PART_REQUISITION_FORM,
		PID_CLIPBOARD,
		PID_ELRON_FIELD_REP,
		PID_ENLIGHTENED_ONE_LETTER,
		PID_MEMO,
		PID_POSTMAN_LETTER,
		PID_FLUTE,
		PID_MAG_LENTA,
		PID_ELECTRONIC_BUG,
		PID_ENERGY_BARIER_ACCESS_CARD,
		PID_ACCESS_CARD,
		PID_SECURITY_CARD,
		PID_YELLOW_REACTOR_KEYCARD,
		PID_RED_REACTOR_KEYCARD,
		PID_V15_KEYCARD,
		PID_VAULT_13_SHACK_KEY,
		PID_PRES_ACCESS_KEY,
		PID_TANKER_FOB,
		PID_RED_PASS_KEY,
		PID_NUKE_KEY,
		PID_YELLOW_PASS_KEY,
		PID_TEMPLE_KEY,
		PID_SUNC,
		PID_PSYCHIC_NULLIFIER,
		PID_MICROCHIP,
		PID_MEM_CHIP_BLUE,
		PID_MEM_CHIP_GREEN,
		PID_MEM_CHIP_RED,
		PID_MEM_CHIP_YELLOW,
		PID_DERMAL_PIP_BOY_DISK,
		PID_PIP_BOY_MEDICAL_ENHANCER,
		PID_CYBERNETIC_BRAIN,
		PID_TANGLERS_HAND,
		PID_GOLD_TOOTH,
		PID_DIXON_EYE,
		PID_CLIFTON_EYE,
		PID_PLAYERS_EAR,
		PID_MASTICATORS_EAR,
		PID_DR_HENRY_PAPERS,
		PID_VERTIBIRD_PLANS,
		PID_CAT,
		PID_porno,
		PID_ColaFish,
		PID_COMICS,
		PID_DlznsChk,
		PID_DARTS,
		PID_ENCODER,
		PID_engmovm,
		PID_FELKEY,
		PID_FILTR,
		PID_FINGER,
		PID_fishkaA,
		PID_fishkaB,
		PID_fishkaC,
		PID_fishkaD,
		PID_fishkaE,
		PID_FLASKB,
		PID_FLIST08,
		PID_FLIST09,
		PID_FLocks,
		PID_fotoBnd,
		PID_fotogrf,
		PID_FSLVShk,
		PID_GLASS,
		PID_HYPO02,
		PID_itmoney,
		PID_itstopka,
		PID_ittmpon1,
		PID_KEIS,
		PID_KEY2,
		PID_key6,
		PID_KeyDumba,
		PID_KeyWind,
		PID_LETTER,
		PID_LPASS,
		PID_MANYVOR,
		PID_MapSolt,
		PID_MEMORY,
		PID_mgzn01,
		PID_MilkBrhm,
		PID_pelt3,
		PID_PIPBOY,
		PID_plkligt1,
		PID_PorpSigr,
		PID_PORTMONE,
		PID_PRES_KEY,
		PID_strbox,
		PID_KILLING_STRING,
		PID_StrpBlt,
		PID_tross,
		PID_DANTOS,
		PID_TRUBA
	},
	{	//Расходники
		PID_BOTTLE_EMPTY,
		PID_BOTTLE_GLASS,
		PID_HYPODERMIC_NEEDLE,
		PID_EMPTY_JET,
		PID_WOOD_PLANK,
		PID_WOOD_PLANK2,
		PID_IRON_PROD,
		PID_WATER_TUBE,
		PID_PLANK,
		PID_CHAIN,
		PID_FLARE,
		PID_CHEMICALS,
		PID_GUNPOWDER,
		PID_TNT,
		PID_TUBE,
		PID_SHORT_TUBE,
		PID_CRAFT_E_LAMP,
		PID_CRAFT_E_PART,
		PID_CRAFT_E_CHIP,
		PID_CRAFT_M_JUNK,
		PID_CRAFT_M_BARS,
		PID_CRAFT_M_STEL,
		PID_RAD_LOW,
		PID_IRON_PLATE,
		PID_IRON_DETALS,
		PID_IRON_BAR,
		PID_COPPER_BAR,
		PID_PB_PLATE,
		PID_PB_FOR_AMMO,
		PID_WOOD_PART,
		PID_PERED_MEH,
		PID_SOED_MEH,
		PID_OHLAD_MEH,
		PID_DETAL_MEH,
		PID_EMKOCT_MEH,
		PID_HLAM_MEH,
		PID_HLAM2_MEH,
		PID_BANKA_MEH,
		PID_SPIKE_MEH,
		PID_ELECTO_MEH,
		PID_DVIGAT_MEH,
		PID_METAL_LIST_MEH,
		PID_REVOLVER_PART,
		PID_NITROGLYCERIN,
		PID_HEXOGEN,
		PID_PLASTIC_EXPLOSIVES_DULL,
		PID_KLK,
		PID_itextrdr, //травяной сбор
		PID_PLANT_SPIKE,
		PID_PART_OF_ROPE,
		PID_ROPE,
		PID_SANDBAG_EMPTY,
		PID_FLOWER,
		PID_BROC_FLOWER,
		PID_XANDER_ROOT,
		PID_FIREWOOD,
		PID_MANTIS_SHELL,
		PID_MIRELUK_SHELL,
		PID_MUTATED_GLAND,
		PID_RADSCORPION_PARTS,
		PID_SCORPION_TAIL,
		PID_CRAFT_L_LINT,
		PID_CRAFT_L_RAGS,
		PID_CRAFT_L_HIDE,
		PID_MOUSE_SKIN,
		PID_WOLF_FUR,
		PID_GECKO_PELT,
		PID_GOLDEN_GECKO_PELT,
		PID_FIRE_GECKO_PELT,
		PID_TOXIC_GECKO_PELT,
		PID_BRAHMIN_SKIN,
		PID_DEATHCLAW_HIDE,
		PID_ROCK,
		PID_FLINT,
		PID_METAL_ORE,
		PID_COPPER_ORE,
		PID_LEAD_ORE,
		PID_head01, //это вольфрамовая руда
		PID_MINERAL,
		PID_GOLD_NUGGET,
		PID_URANIUM_ORE,
		PID_REFINED_ORE,
		PID_ROCK_BLOCK,
		PID_BRICK,
		PID_SAND,
		PID_COAL,
		PID_GOLD_NUGGET,
		PID_URANIUM_ORE,
		PID_REFINED_ORE,
		PID_GLASS_BAR,
		PID_GLASS,
		PID_LINZA,
		PID_MIRROR,	
		PID_prdhrntl,
		PID_itrvlvbr,
		PID_itgall01,
		PID_FSHMPN,
		PID_drova,
		PID_Bankes,
		PID_WELDING_USED,
		PID_head02, //аккумулятор
		PID_iteltrdr, //материнская плата
		PID_MOTOR,
		PID_MOTIVATOR,
		PID_PLASMA_TRANSFORMER,
		PID_MINE_PART,
		PID_EXPLOSIVE_SWITCH,
		PID_EXCAVATOR_CHIP,
		PID_NAVCOM_PARTS,
		PID_ROBOT_PARTS,
		PID_HY_MAG_PART,
		PID_CAR_FUEL_CELL_CONTROLLER,
		PID_CAR_FUEL_INJECTION,
		PID_ROBOT_MOTIVATOR,
		PID_K9_MOTIVATOR,
		PID_blstrBM,
		PID_medbrin,
		PID_medlarm,
		PID_medrest,
		PID_medstrn,
		PID_svirus,
		PID_FZZZ4,
		PID_VTE,
		PID_VTD,
		PID_VTC,
		PID_VTA,
		PID_vodzapch,
		PID_voddet3,
		PID_voddet2,
		PID_voddet1,
		PID_termit,
		PID_setC,
		PID_setB,
		PID_servoeng,
		PID_plkpipe1,
		PID_motorok,
		PID_motorbr,
		PID_MOTOR,
		PID_jckldrum,
		PID_itlckrl1,
		PID_itbltnut,
		PID_itbarrei,
		PID_gilza,
		PID_FVOKAS2,
		PID_FPRESS,
		PID_FPASLNC,
		PID_FPASLNB,
		PID_Emulgat,
		PID_DAMAG,
		PID_COMPUTER,
		PID_CENTRF,
		PID_CARTNT,
		PID_CARSLR,
		PID_CABEL
	},
	{	//Хлам
		PID_BALL,
		PID_H_CLAW,
		PID_marijuanna,
		PID_marijuana_bag_dry,
		PID_kazan,
		PID_batch_AFR,
		PID_Breaking_batch_AFR,
		PID_MTOUTH,
		PID_Pershat,
		PID_nozzle,
		PID_DTONATOR,
		PID_ttube,
		PID_ttube2,
		PID_chemical_flask,
		PID_MpipeOff,
		PID_Helba_Grass,
		PID_gear,
		PID_skull,
		//PID_MUTARIJUANA, //Нету травки, увы. Нас наебали.
		PID_DECOMPOSING_BODY,
		PID_SHIT_BIG,
		PID_SHIT_SMALL,
		PID_MR_NIXON_DOLL,
		PID_BLOW_UP_DOLL,
		PID_POPPED_BLOW_UP_DOLL,
		PID_itplate3,
		PID_itplate2,
		PID_GAME,
		PID_SANDBAG_1,
		PID_MSTONE,
		PID_MSUOMIG,
		PID_empty_paint_can,
	    PID_blue_paint_can,
		PID_red_paint_can,
		PID_yellow_paint_can,
		PID_Builder_helmet,
		PID_red_beret,
		PID_Civil_gas_mask,
		PID_Military_cap,
		PID_officer_Enclave_cap,
		PID_Newsboy_cap,
		PID_younga,
		PID_Western_hat1,
		PID_Western_hat2,
		PID_Western_hat3,
		PID_ranger_hat,
		PID_poshta_hat,
		PID_Fedora_Black,
		PID_Fedora_White,
		PID_Felt_Hat_White
		
	},
	{	//Недораб Холодное
		PID_HUNTING_KNIFE,
		PID_TACTICAL_KNIFE,
		PID_COYOT_KNIFE,
		PID_GONZO,
		PID_BIKER_KNIFE,
		PID_knfcmbt1,
		PID_knfkuhn2,
		PID_MACHETE,
		PID_SCALPEL,
		PID_PRUTOK,
		PID_RAZOR,
		PID_TESAK,
		PID_knftesk1,
		PID_tesak2,
		PID_BLIND_FURY,
		PID_KATANA,
		PID_RUST_KATANA,
		PID_knfpilka,
		PID_SLEDGE,
		PID_SLEDGEHAMMER2,
		PID_mltelctr,
		PID_mlthmmr1,
		PID_mltmlot2,
		PID_plkpalka,
		PID_plkratsl,
		PID_CLUB2,
		PID_BITA,
		PID_plkcue01,
		PID_plkplic1,
		PID_plkfomka,
		PID_COYOT_CLUB,
		PID_CUBOTAN,
		PID_polprod,
		PID_plkscck2,
		PID_BO,
		PID_HEAVY_SPEAR,
		PID_sprwood2,
		PID_spriron1,
		PID_sprelctr,
		PID_ELECTRO_SPEAR,
		PID_CEP,
		PID_SHORT_SHARP_SPEAR, // Пригоршнево оружие
		PID_SHARP_PIKE,
		PID_WEIGHTED_SHARP_SPEAR,
		PID_METAL_SPEAR,
		PID_shove3,
		PID_sickle
	},
	{	//Недораб кулачное
		PID_hndkstt1,
		PID_hndkstt2,
		PID_hndkstt3,
		PID_MIKKI,
		PID_SHOCK_CASTET,
		PID_hndglove,
		PID_hndcrclr,
		PID_IMP_CASTET,
		PID_FIRE_CASTET,
		PID_hndpstl1
	},
	{	//Недораб Лег Ор
		PID_smghlmut,
		PID_smghkmgz,
		PID_smghkscp,
		PID_pstglok1,
		PID_pstglok2,
		PID_pstrepar,
		PID_pstscope,
		PID_pstrpair,
		PID_pstdtctv,
		PID_pstair1,
		PID_pstair2,
		PID_pstlugr,
		PID_pstslugr,
		PID_pstsignl,
		PID_pstosa,
		PID_smgsl1,
		PID_pstsl9,
		PID_REZX,
		PID_GAUSS_PPK5,
		PID_rflfobos,
		PID_rfl40mm1,
		PID_rfl40mm2,
		PID_psttrnkv,
		PID_pstjackl,
		PID_10MM_PISTOL_80,
		PID_10MM_GIFT,
		PID_10MM_PISTOL_FONARIK,
		PID_10MM_PISTOL_MAGAZIN,
		PID_OLD_REVOLVER,
		PID_COLT2,
		PID_pstcolt1,
		PID_FMINAA,
		PID_DEAGLE_SCOPE,
		PID_DEAGLE_GOLD,
		PID_Detectiv,
		PID_MAUSER02,
		PID_MAUSER01,
		PID_IPOLICE,
		PID_wpbrtta,
		PID_smgvndt1,
		PID_smgkrikt,
		PID_smgfilip,
		PID_9MM_PP,
		PID_VINT_PP,
		PID_krisssmg,
		PID_rflshort, // дробовики
		PID_STRIKER,
		PID_SAVAGE,
		PID_IMPROVED_SAVAGE,
		PID_POMPA,
		PID_STARIY_OBREZ,
		PID_rflshot4,
		PID_rflpoket,
		PID_rflshotr,
		PID_rflwild,
		PID_GENRIS_RIFLE, // винтовки
		PID_HUNTING_RIFLE2,
		PID_VARMINT,
		PID_GRANDM1,
		PID_rflscop,
		PID_rflscop3, 
		PID_rflnail,
		PID_rflpnev1,
		PID_rflpnev2,
		PID_rflhunt1,
		PID_rflhunt2,
		PID_rflrprd2,
		PID_rfllilit,
		PID_smggetto, //автоматы
		PID_rflcivil,
		PID_rfldrum,
		PID_rfljackl,
		PID_rflklh,
		PID_rfln17a1,
		PID_rflnscop,
		PID_rflrain,
		PID_rflrpair,
		PID_UDM42,
		PID_M16K,
		PID_FMINAB, //гранатометы
		PID_rflhrdnr
	},
	{	//Недораб Тяж Ор
		PID_bgflame1,
		PID_bgflame2,
		PID_bgflame3,
		PID_BACKPACK_FLAMER,
		PID_mngheat,
		PID_mngturet,
		PID_mnghevy,
		PID_dminigun,
		PID_bgbaraka,
		PID_bgturrfl,
		PID_bzkzip,
		PID_bzksnr,
		PID_M2041,
		PID_MACHINGU_N_223,
		PID_bzkemi,
		PID_bzkarmy,
		PID_bglaw,
		PID_bgsupprt,
		PID_ZIPFLAMR,
		PID_sawgun,
		PID_mngurgan,
		PID_Gauss_Gat
	},
	{	//Недораб Энерг Ор
		PID_GATLING_PLASMA,
		PID_DUTEN,
		PID_LASER_POLICE,
		PID_lasergnCold,
		PID_solargun,,
		PID_PHOTON_PISTOL,
		PID_LUCKY_PISTOL,
		PID_raygun,
		PID_smgplsma,
		PID_plasmar,
		PID_WINCHESTER_PISTOL,
		PID_plsmprot,
		PID_bgplasma,
		PID_bgslr3,
		PID_bgslr4,
		PID_laserApo,
		PID_sniperps,
		PID_OLD_LASER,
		PID_lightsupold,
		PID_plasmac,
		PID_vibrator
	},
	{	//Робы
		PID_FAKE_JUMPSUIT,
		PID_JUMPSUIT,
		PID_KEEPBRIGE_ROBE,
		PID_PURPLE_ROBE,
		PID_SANDROBE,
		PID_BROWN_ROBE,
		PID_DARK_BROWN_ROBE ,
		PID_RED_ROBE,
		PID_RED_RITUAL_ROBE,
		PID_DARK_RED_ROBE,
		PID_BLUE_ROBE,
		PID_DARK_BLUE_ROBE,
		PID_DARK_GREEN_ROBE,
		PID_ATOM_CHILD_ROBE,
		PID_BLACK_ROBE,
		PID_BLACK_RITUAL_ROBE,
		PID_DARK_BLACK_ROBE 	
	},
	{	//Недораб броня
		PID_parade_uniform,
		PID_Laboratory_coat,
		PID_ARMFIRE,
		PID_arbsbl1,
		PID_arbsbl2,
		PID_armltfuk,
		PID_armltsct,
		PID_armltr,
		PID_arhokkey,
		PID_armltcmb,
		PID_armetal,
		PID_IMPROVED_METAL_ARMOR_MK_II,
		PID_ZERKALO_METAL_ARMOR_MK_II,
		PID_METAL_ARMOR_MK_III,
		PID_mtlarmr3,
		PID_militia_armor_MK1,
		PID_militia_armor_MK2,
		PID_militia_armor_MK3,
		PID_California_Ranger_armor,
		PID_arkirasa,
		PID_CMBT_DESERT,
		PID_tesla21
	}
};

//~run store RefreshAllContainers 0 0 0
void RefreshAllContainers( Critter& cr, int, int, int )
{
	Map@ map = GetMapByPid( MAP_UTILITY_START, 0 );
	if( !valid(map) ) return;
	
	uint type = 0;
	for( type = 0; type < itemlist.length(); type++ )
	{
		uint16 x = 0, y = 0;
		map.GetEntireCoords( type + 1, 0, x, y );
		Item@ Cont = map.GetItem( x, y, 245 );
		if( !valid( Cont ) ) @Cont = map.AddItem( x, y, 245, 1 );
		if( !valid( Cont ) )
		{
			cr.Say( SAY_NETMSG, "Что-то пошло не так с типом №" + type + "." );
			return;
		}
		
		Item@[] allitems;
		Cont.GetItems( -1, allitems );
		DeleteItems( allitems );
		
		CheckItems( Cont, type );
	}
	cr.Say( SAY_NETMSG, "Обновлено " + type + " категорий." );
}

//import void CheckItems( Item& cont, uint type ) from "store";
void CheckItems( Item& cont, uint type ) //exported
{
	if( type >= itemlist.length() || !valid(cont) ) return;
	
	Item@[] allitems;
	cont.GetItems( -1, allitems );
	for( uint i = 0; i < allitems.length(); i++ )
		if( valid(allitems[i]) && itemlist[type].find( allitems[i].GetProtoId() ) == -1 ) DeleteItem( allitems[i] );

	for( int i = itemlist[type].length() - 1; i >= 0; i-- )
	{
		uint proto = itemlist[type][i];
		if( proto == 0 ) continue;
		Item@ myitem = cont.GetItem( proto, 0 );
		if( !valid( myitem ) )
			@ myitem = cont.AddItem( proto, 1, 0 );
		if( valid(myitem) && myitem.IsStackable() && myitem.GetCount() < 500 ) 
			cont.AddItem( proto, 500 - myitem.GetCount(), 0 );
		if( !valid(myitem) ) Log( "Proto [" + proto + "] does not exists." );
	}
}