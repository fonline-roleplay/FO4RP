#define SKINS_MODULE

#include "_macros.fos"
#include "skins_h.fos"
#include "speed_h.fos"
#include "_starter.fos"

import bool isGM( Critter& player ) from "gm";

START( "skins", "start" );

void start()
{
    skins_setup_load( 0 );
}

bool[] skins_toggled;

void skins_setup_start( Critter& player, int param0, int param1, int param2 )
{
    skins_toggled.resize( 1 );
    skins_toggled[ 0 ] = false;
    player.ParamBase[ ST_VAR0 ] = 1;
    ask_next_setup( player );
}

void skins_setup_continue( Critter& player, int param0, int param1, int param2 )
{
    if( player.ParamBase[ ST_VAR0 ] < 1 )
        return;
    ask_next_setup( player );
}

void skins_setup_save( Critter& player, int fileIndex, int param1, int param2 )
{
    string result = "";
    for( uint i = 0; i < skins_toggled.length(); i++ )
    {
        result += ( ( skins_toggled[ i ] ) ? "1" : "0" );
    }
    if( result.length() < 1 )
        return;

    file skins_file;
    skins_file.open( "skins_cfg_" + fileIndex + ".txt", "w" );

    skins_file.setPos( 0 );

    skins_file.writeString( result );

    skins_file.close();
}

void skins_setup_load( Critter& player, int fileIndex, int param1, int param2 )
{
    skins_setup_load( uint( fileIndex ) );
}

void skins_setup_load( uint fileIndex )  // import
{
    file skins_file;
    skins_file.open( "skins_cfg_" + fileIndex + ".txt", "r" );

    skins_file.setPos( 0 );

    string result = "";

    skins_file.readLine( result );

    if( result.length() < 1 )
        return;

    skins_toggled.resize( 0 );

    for( uint i = 0; i < result.length(); i++ )
    {
        bool bb = ( ( result[ i ] == '1' ) ? true : false );
        // push_back(skins_toggled,bb);
        skins_toggled.insertLast( bb );
    }

	Log( skins_toggled.length() + " Character skins loaded." );
	
    skins_file.close();
}

void skins_setup_list( Critter& player, int fileIndex, int param1, int param2 )
{
    for( uint i = 0; i < skins_toggled.length(); i++ )
    {
        if( !skins_toggled[ i ] )
            continue;
        player.Say( SAY_NETMSG, "Skin #" + i + " enabled." );
    }
}

void skins_setup_getn( Critter& player, int ni, int param1, int param2 )
{
    uint n = ni;
    uint oldlen = skins_toggled.length();
    if( n >= oldlen )
    {
        if( n >= MAX_SKINS_COUNT )
        {
            player.Say( SAY_NETMSG, "Skin number can't exceed the maximum number!" );
            return;
        }

        skins_toggled.resize( n + 1 );
        for( uint i = oldlen; i < n + 1; i++ )
        {
            skins_toggled[ i ] = false;
        }
    }

    player.Say( SAY_NETMSG, "Skin #" + n + ( ( skins_toggled[ n ] ) ? " enabled." : " disabled." ) );
}

void skins_setup_setn( Critter& player, int ni, int val, int param2 )
{
    uint n = ni;
    uint oldlen = skins_toggled.length();
    if( n >= oldlen )
    {
        if( n >= MAX_SKINS_COUNT )
        {
            player.Say( SAY_NETMSG, "The skin number is higher than allowed." );
            return;
        }

        skins_toggled.resize( n + 1 );
        for( uint i = oldlen; i < n + 1; i++ )
        {
            skins_toggled[ i ] = false;
        }
    }

    skins_toggled[ n ] = ( ( val == 0 ) ? false : true );

    player.Say( SAY_NETMSG, "Skin #" + n + ( ( skins_toggled[ n ] ) ? " enabled." : " disabled." ) );
}

void ask_next_setup( Critter@ player )
{
    if( !valid( player ) || !player.IsLife() || player.Param[ ST_VAR0 ] < 1 || player.Param[ ST_VAR0 ] >= MAX_SKINS_COUNT )
        return;
    player.ChangeCrType( player.Param[ ST_VAR0 ] );
    // player.ShowScreen(SCREEN_CLOSE,0,"");
    player.ShowScreen( SCREEN_DIALOGBOX, 2, "answer_next_setup" );
    player.Say( SAY_DIALOGBOX_TEXT, "Позволить skin #" + player.Param[ ST_VAR0 ] + "?" );
    player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Включить" );
    player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Отключить" );

}

void answer_next_setup( Critter& player, uint answerI, string& answerS )
{
    bool bb = ( ( answerI == 0 ) ? true : false );
    // push_back(skins_toggled,bb);
    skins_toggled.insertLast( bb );

    player.ParamBase[ ST_VAR0 ] += 1;
    ask_next_setup( player );
}

uint skins_viewer_find_next( uint n )
{
    uint m = n;
    for( uint i = n + 1; i <= skins_toggled.length(); i++ )
    {
        if( i == skins_toggled.length() )
            return n;
        if( skins_toggled[ i ] )
        {
            m = i;
            break;
        }
    }
    return m;
}

uint skins_viewer_find_prev( uint n )
{
    uint m = n;
    for( uint i = n - 1; i >= 0; i-- )
    {
        if( i == 0 )
            return n;
        if( skins_toggled[ i ] )
        {
            m = i;
            break;
        }
    }
    return m;
}

void _CrIdleClearSkin( Critter& cr )
{
	if( Random( 0, 3 ) != 0 ) return;
    Item@ armor = cr.GetItem( 0, SLOT_ARMOR );

    if( valid( armor ) )
        _CritMoveItem( cr, armor, SLOT_INV );

    uint type = cr.Stat[ ST_BASE_CRTYPE ];
    if( type == 0 )
        type = ( cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
    cr.ChangeCrType( type );

    cr.SetEvent( CRITTER_EVENT_IDLE, "" );
}

void ask_next_viewer( Critter@ player )
{
    if( !valid( player ) || !player.IsLife() )
        return;

    uint n = player.Param[ ST_VAR0 ];

    if( n < 1 || n >= skins_toggled.length() )
        return;

    if( !skins_toggled[ n ] )
        return;

    player.ChangeCrType( n );

    player.SetEvent( CRITTER_EVENT_IDLE, "_CrIdleClearSkin" );

    // player.ShowScreen(SCREEN_CLOSE,0,"");
    player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_next_viewer" );
    player.Say( SAY_DIALOGBOX_TEXT, "Skin #" + n );
    player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Следующий" );
    player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Предыдущий" );
    player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Выбрать" );
    player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Пижама ЛЫСЫЙ" );
    player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Пижама НОРМАЛ" );
    player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Пижама ПАТЛАЧ" );
    player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Голый" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Перейти к скину #" );
}

void answer_next_viewer( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ParamBase[ ST_VAR0 ] = skins_viewer_find_next( player.Param[ ST_VAR0 ] );
        ask_next_viewer( player );
		return;
    }
    else if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR0 ] = skins_viewer_find_prev( player.Param[ ST_VAR0 ] );
        ask_next_viewer( player );
		return;
    }
    else if( answerI == 2 )
    {
        uint result = player.Param[ ST_VAR0 ];

        if( !skins_toggled[ result ] )
            return;

        if( !canUseCloth( player ) )
            return;

        player.ChangeCrType( result );

        player.StatBase[ ST_BASE_CRTYPE ] = result;

        ChangeCritterSpeed( player );
    }
    else if( answerI == 3 )
    {
        if( !canUseCloth( player ) )
            return;

        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_BLD_JUMPSUIT : CRTYPE_DEFAULT_F );
        player.StatBase[ ST_BASE_CRTYPE ] = 116;
        ChangeCritterSpeed( player );
    }
    else if( answerI == 4 )
    {
        if( !canUseCloth( player ) )
            return;

        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DW_JUMPSUIT_M : CRTYPE_DEFAULT_F );
        player.StatBase[ ST_BASE_CRTYPE ] = ( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DW_JUMPSUIT_M : CRTYPE_DEFAULT_F );
        ChangeCritterSpeed( player );
    }
    else if( answerI == 5 )
    {
        if( !canUseCloth( player ) )
            return;

        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_LHD_JUMPSUIT : CRTYPE_DEFAULT_F );
        player.StatBase[ ST_BASE_CRTYPE ] = 106;
        ChangeCritterSpeed( player );
    }
	if( answerI == 6 )
	{
		player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? 62 : 61 );
		player.StatBase[ ST_BASE_CRTYPE ] = player.Stat[ ST_GENDER ] == GENDER_MALE ? 62 : 61;
		ChangeCritterSpeed( player );
	}
	if( answerI == 7 )
	{
		player.ParamBase[ ST_VAR0 ] = player.Stat[ ST_BASE_CRTYPE ];
        player.ShowScreen( SCREEN_SAY,1,"answer_jump_to_number");
        player.Say( SAY_SAY_TITLE, "Введите номер:");
		return;
	}
/*
    else if( answerI == 6 )
    {
        if( !canUseCloth( player ) )
            return;

        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? NIG_JUMPSUIT : CRTYPE_DEFAULT_F );
        player.StatBase[ ST_BASE_CRTYPE ] = 149;
        ChangeCritterSpeed( player );
    }
*/
	player.SetEvent( CRITTER_EVENT_IDLE, "" );
	player.DeleteItem( PID_SKIN_CHANGER, 1 );
}

void answer_jump_to_number( Critter& player, uint answerI, string& answerS )
{
	int number = 0;
	int max = skins_toggled.length();

    if( !StrToInt( answerS, number ) || number < 1 || number >= max ) {
		player.Say( SAY_NETMSG, "Введите положительный номер от 1 до " + ( max - 1 ) + "." );
        return;
	}
	
	if( !skins_toggled[number] )
		player.Say( SAY_NETMSG, "Данный скин недоступен!" );
	else
		player.ParamBase[ ST_VAR0 ] = number;
		
    ask_next_viewer( player );
}

bool canUseCloth( Critter& player )
{
    uint defbody = player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F;
    if( !player.IsLife() )
        return false;

    if( player.CountItem( PID_SKIN_CHANGER ) < 1 )
        return false;

    uint cur_skin = player.Stat[ ST_BASE_CRTYPE ];

    //if( cur_skin != defbody && ( cur_skin >= skins_toggled.length() ||  !skins_toggled[ cur_skin ] ) )
	if( false )
    {
        player.Say( SAY_NETMSG, "Вы не можете сменить обличие." );
        return false;
    }

    return true;
}

bool _cloth_use( Item& item, Critter& player, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{

    if( valid( onCritter ) || valid( onItem ) || valid( onScenery ) )
        return true;

    if( !canUseCloth( player ) )
        return true;

    player.ParamBase[ ST_VAR0 ] = skins_viewer_find_next( 0 );
    ask_next_viewer( player );


/*	player.ShowScreen(SCREEN_CLOSE,0,"");
        player.ShowScreen(SCREEN_DIALOGBOX,1,"answer_cloth_main");
        player.Say(SAY_DIALOGBOX_TEXT,"Что сделать?");
        player.Say(SAY_DIALOGBOX_BUTTON(0),"Сменить облик");
        player.Say(SAY_DIALOGBOX_BUTTON(1),"Примерить");
 */
/*
        player.ShowScreen(SCREEN_CLOSE,0,"");
        player.ShowScreen(SCREEN_SAY,1,"answer_cloth_get");
        player.Say(SAY_SAY_TITLE,"Какой облик получить?");
        player.Say(SAY_SAY_TEXT,"0");
 */
    return true;

}
/*
   void answer_cloth_main(Critter& player, uint answerI, string& answerS)
   {
        if(answerI==0){
                //player.ShowScreen(SCREEN_CLOSE,0,"");
                player.ShowScreen(SCREEN_SAY,1,"answer_cloth_get");
                player.Say(SAY_SAY_TITLE,"Какой облик получить?");
                player.Say(SAY_SAY_TEXT,"0");
        }

   }
 */
void answer_cloth_get( Critter& player, uint answerI, string& answerS )
{
    int result = 0;

    if( !StrToInt( answerS, result ) )
        return;

    if( result == 0 )
    {
        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
        player.StatBase[ ST_BASE_CRTYPE ] = player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F;
        return;
    }

    if( result < 1 || result >= MAX_SKINS_COUNT || uint( result ) >= skins_toggled.length() )
        return;

    if( !skins_toggled[ result ] )
        return;

    if( player.CountItem( PID_SKIN_CHANGER ) < 1 )
        return;

    player.ChangeCrType( result );

    player.StatBase[ ST_BASE_CRTYPE ] = result;

    player.DeleteItem( PID_SKIN_CHANGER, 1 );

}



void _InitCloth( Item& item, bool firstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "_cloth_use" );
}

void unsafe_GM_skin( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_skin( player, param0, param1, param2, param3, param4 );
}

void GM_skin( Critter& player, int playerId, int param1, int random, string@ param3, int[] @ param4 )
{
    skin( player, playerId, param1, random );
}

void skin( Critter& player, int playerId, int crType, int random )
{
    Critter@ cr;
    if( playerId != 0 )
        @cr = GetCritter( playerId );
    else
        @cr = @player;

    if( !valid( cr ) )
        return;

    crType = random < 0 ? Random( 1, 479 ) : crType + Random( 0, random );
	skin( cr, crType );

}

void skin( Critter& cr, int crType )
{
    int lastBody = cr.CrType;
    if( lastBody == 51 || lastBody == 60 || lastBody == 100 || lastBody == 81 )
    {
        Item@ spec = cr.GetItem( 0, SLOT_HAND1 );
        if( valid( spec ) )
        {
            if( spec.GetProtoId() == PID_FIRE_GECKO_FLAME_WEAPON )
                DeleteItem( spec );
        }
        else
        {
            @spec = cr.GetItem( 0, SLOT_HAND2 );
            if( valid( spec ) )
            {
                if( spec.GetProtoId() == PID_FIRE_GECKO_FLAME_WEAPON )
                    DeleteItem( spec );
            }
        }
    }

    Item@ armor = cr.GetItem( 0, SLOT_ARMOR );

    if( valid( armor ) )
        _CritMoveItem( cr, armor, SLOT_INV );

    int result = crType;

    if( crType == 0 )
        result = ( cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
// /////////////////////////////////////////Возвращение характеристик к дефолтным//////////////////////////////////////////////
    cr.StatBase[ ST_KILL_EXPERIENCE ] = 0;
    cr.StatBase[ ST_NORMAL_RESIST ] = 0;
    cr.StatBase[ ST_LASER_RESIST ] = 0;
    cr.StatBase[ ST_FIRE_RESIST ] = 0;
    cr.StatBase[ ST_PLASMA_RESIST ] = 0;
    cr.StatBase[ ST_ELECTRO_RESIST ] = 0;
    cr.StatBase[ ST_EXPLODE_RESIST ] = 0;
    cr.StatBase[ ST_NORMAL_ABSORB ] = 0;
    cr.StatBase[ ST_LASER_ABSORB ] = 0;
    cr.StatBase[ ST_FIRE_ABSORB ] = 0;
    cr.StatBase[ ST_PLASMA_ABSORB ] = 0;
    cr.StatBase[ ST_ELECTRO_ABSORB ] = 0;
    cr.StatBase[ ST_EXPLODE_ABSORB ] = 0;
    cr.ChangeCrType( result );
// //////////////////////////////////////////////Присвоение статов и бодитайпа//////////////////////////////////////////////////////////////////////////
    if( crType == 20 || crType == 21 || crType == 114 || crType == 427 || crType == 428 )
        cr.StatBase[ ST_BODY_TYPE ] = BT_SUPER_MUTANT;
    else if( crType == 25 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 650; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=20;
                                                    cr.StatBase[ST_LASER_RESIST]+=20;
                                                    cr.StatBase[ST_FIRE_RESIST]+=20;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=10;
                                                    cr.StatBase[ST_NORMAL_ABSORB]+=4;
                                                    cr.StatBase[ST_LASER_ABSORB]+=4;
                                                    cr.StatBase[ST_FIRE_ABSORB]+=4;
                                                    cr.StatBase[ST_PLASMA_ABSORB]+=4;
                                                    cr.StatBase[ST_ELECTRO_ABSORB]+=4;
                                                    cr.StatBase[ST_EXPLODE_ABSORB]+=4;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=14;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=5;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=24;
                                                    cr.StatBase[ST_MAX_LIFE]+=40;
                                                    cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_CENTAUR;
    }
    else if( crType == 15 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 150; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=25;
                                                    cr.StatBase[ST_LASER_RESIST]+=20;
                                                    cr.StatBase[ST_FIRE_RESIST]+=15;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                    cr.StatBase[ST_NORMAL_ABSORB]+=2;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=18;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=45;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=5;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=5;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_BRAHMIN;
    }
    else if( crType == 28 || crType == 29 || crType == 79 )
        cr.StatBase[ ST_BODY_TYPE ] = BT_GHOUL;
    else if( crType == 16 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 80; /*
                                                   cr.StatBase[ST_NORMAL_RESIST]+=20;
                                                   cr.StatBase[ST_LASER_RESIST]+=20;
                                                   cr.StatBase[ST_FIRE_RESIST]+=20;
                                                   cr.StatBase[ST_PLASMA_RESIST]+=20;
                                                   cr.StatBase[ST_ELECTRO_RESIST]+=25;
                                                   cr.StatBase[ST_EXPLODE_RESIST]+=15;
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=30;
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=12;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=4;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=14;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_DOG;
    }
    else if( crType == 19 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 120; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=20;
                                                    cr.StatBase[ST_LASER_RESIST]+=25;
                                                    cr.StatBase[ST_FIRE_RESIST]+=10;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=40;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=15;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=6;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=4;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=15;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RAT;
    }
    else if( crType == 24 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 80; /*
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=5;
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=2;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=1;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=4;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RAT;
    }
    else if( crType == 76 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 250; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=25;
                                                    cr.StatBase[ST_LASER_RESIST]+=20;
                                                    cr.StatBase[ST_FIRE_RESIST]+=20;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                    cr.StatBase[ST_NORMAL_ABSORB]+=2;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=25;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=10;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=22;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RAT;
    }
    else if( crType == 55 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 80; /*
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=10;
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=4;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=5;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RAT;
    }
    else if( crType == 22 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 60; /*
                                                   cr.StatBase[ST_LASER_RESIST]+=30;
                                                   cr.StatBase[ST_FIRE_RESIST]+=10;
                                                   cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                   cr.StatBase[ST_ELECTRO_RESIST]+=15;
                                                   cr.StatBase[ST_EXPLODE_RESIST]+=10;
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=12;
                                                   cr.StatBase[ST_LASER_ABSORB]+=2;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=3;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RADSCORPION;
    }
    else if( crType == 59 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 110; /*
                                                    cr.StatBase[ST_LASER_RESIST]+=50;
                                                    cr.StatBase[ST_FIRE_RESIST]+=10;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=30;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=12;
                                                    cr.StatBase[ST_NORMAL_ABSORB]+=2;
                                                    cr.StatBase[ST_LASER_ABSORB]+=4;
                                                    cr.StatBase[ST_FIRE_ABSORB]+=2;
                                                    cr.StatBase[ST_EXPLODE_ABSORB]+=2;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=3;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=5;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_RADSCORPION;
    }
    else if( crType == 60 )
    {
        Item@[] items;
        uint itemscount = cr.GetItems( SLOT_HAND1, items );
        if( itemscount > 0 )
        {
            cr.MoveItem( items[ 0 ].Id, itemscount, SLOT_INV );
            items[ 0 ].Update();
        }

        cr.StatBase[ ST_KILL_EXPERIENCE ] = 250; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=15;
                                                    cr.StatBase[ST_LASER_RESIST]+=15;
                                                    cr.StatBase[ST_FIRE_RESIST]+=15;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=15;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=15;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=15;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=30;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=12;
                                                    cr.StatBase[ST_NORMAL_ABSORB]+=2;
                                                    cr.StatBase[ST_LASER_ABSORB]+=2;
                                                    cr.StatBase[ST_FIRE_ABSORB]+=2;
                                                    cr.StatBase[ST_EXPLODE_ABSORB]+=2;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=4;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=14;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_DEATHCLAW;
    }
    else if( crType == 51 )
    {
        Item@[] items;
        uint itemscount = cr.GetItems( SLOT_HAND1, items );
        if( itemscount > 0 )
        {
            cr.MoveItem( items[ 0 ].Id, itemscount, SLOT_INV );
            items[ 0 ].Update();
        }

        cr.StatBase[ ST_KILL_EXPERIENCE ] = 1000; /*
                                                     cr.StatBase[ST_NORMAL_RESIST]+=25;
                                                     cr.StatBase[ST_LASER_RESIST]+=10;
                                                     cr.StatBase[ST_FIRE_RESIST]+=20;
                                                     cr.StatBase[ST_PLASMA_RESIST]+=20;
                                                     cr.StatBase[ST_ELECTRO_RESIST]+=20;
                                                     cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                     cr.StatBase[ST_POISON_RESISTANCE]+=50;
                                                     cr.StatBase[ST_RADIATION_RESISTANCE]+=20;
                                                     cr.StatBase[ST_NORMAL_ABSORB]+=6;
                                                     cr.StatBase[ST_LASER_ABSORB]+=4;
                                                     cr.StatBase[ST_PLASMA_ABSORB]+=4;
                                                     cr.StatBase[ST_ELECTRO_ABSORB]+=4;
                                                     cr.StatBase[ST_FIRE_ABSORB]+=4;
                                                     cr.StatBase[ST_EXPLODE_ABSORB]+=6;
                                                     cr.StatBase[ST_MELEE_DAMAGE]+=10;
                                                     cr.StatBase[ST_ARMOR_CLASS]+=10;
                                                     cr.StatBase[ST_HEALING_RATE]+=10;
                                                     cr.StatBase[ST_MAX_LIFE]+=120;
                                                     cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_DEATHCLAW;
    }
    else if( crType == 100 )
    {
        Item@[] items;
        uint itemscount = cr.GetItems( SLOT_HAND1, items );
        if( itemscount > 0 )
        {
            cr.MoveItem( items[ 0 ].Id, itemscount, SLOT_INV );
            items[ 0 ].Update();
        }

        cr.StatBase[ ST_KILL_EXPERIENCE ] = 1250; /*
                                                     cr.StatBase[ST_NORMAL_RESIST]+=35;
                                                     cr.StatBase[ST_LASER_RESIST]+=20;
                                                     cr.StatBase[ST_FIRE_RESIST]+=25;
                                                     cr.StatBase[ST_PLASMA_RESIST]+=25;
                                                     cr.StatBase[ST_ELECTRO_RESIST]+=25;
                                                     cr.StatBase[ST_EXPLODE_RESIST]+=25;
                                                     cr.StatBase[ST_POISON_RESISTANCE]+=50;
                                                     cr.StatBase[ST_RADIATION_RESISTANCE]+=20;
                                                     cr.StatBase[ST_NORMAL_ABSORB]+=6;
                                                     cr.StatBase[ST_LASER_ABSORB]+=4;
                                                     cr.StatBase[ST_PLASMA_ABSORB]+=4;
                                                     cr.StatBase[ST_ELECTRO_ABSORB]+=4;
                                                     cr.StatBase[ST_FIRE_ABSORB]+=4;
                                                     cr.StatBase[ST_EXPLODE_ABSORB]+=6;
                                                     cr.StatBase[ST_MELEE_DAMAGE]+=10;
                                                     cr.StatBase[ST_ARMOR_CLASS]+=10;
                                                     cr.StatBase[ST_HEALING_RATE]+=10;
                                                     cr.StatBase[ST_MAX_LIFE]+=120;
                                                     cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_DEATHCLAW;
    }
    else if( crType == 81 )
    {
        Item@[] items;
        uint itemscount = cr.GetItems( SLOT_HAND1, items );
        if( itemscount > 0 )
        {
            cr.MoveItem( items[ 0 ].Id, itemscount, SLOT_INV );
            items[ 0 ].Update();
        }

        cr.StatBase[ ST_KILL_EXPERIENCE ] = 1000; /*
                                                     cr.StatBase[ST_NORMAL_RESIST]+=40;
                                                     cr.StatBase[ST_LASER_RESIST]+=60;
                                                     cr.StatBase[ST_FIRE_RESIST]+=500;
                                                     cr.StatBase[ST_PLASMA_RESIST]+=50;
                                                     cr.StatBase[ST_ELECTRO_RESIST]+=50;
                                                     cr.StatBase[ST_EXPLODE_RESIST]+=40;
                                                     cr.StatBase[ST_POISON_RESISTANCE]+=20;
                                                     cr.StatBase[ST_RADIATION_RESISTANCE]+=8;
                                                     cr.StatBase[ST_NORMAL_ABSORB]+=5;
                                                     cr.StatBase[ST_LASER_ABSORB]+=8;
                                                     cr.StatBase[ST_FIRE_ABSORB]+=20;
                                                     cr.StatBase[ST_PLASMA_ABSORB]+=4;
                                                     cr.StatBase[ST_ELECTRO_ABSORB]+=2;
                                                     cr.StatBase[ST_EXPLODE_ABSORB]+=6;
                                                     cr.StatBase[ST_MELEE_DAMAGE]+=6;
                                                     cr.StatBase[ST_ARMOR_CLASS]+=28;
                                                     cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_GECKO;
    }
    else if( crType == 80 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 500;
        cr.StatBase[ ST_NORMAL_RESIST ] += 40; /*
                                                  cr.StatBase[ST_LASER_RESIST]+=40;
                                                  cr.StatBase[ST_FIRE_RESIST]+=5;
                                                  cr.StatBase[ST_PLASMA_RESIST]+=50;
                                                  cr.StatBase[ST_ELECTRO_RESIST]+=55;
                                                  cr.StatBase[ST_EXPLODE_RESIST]+=45;
                                                  cr.StatBase[ST_POISON_RESISTANCE]+=35;
                                                  cr.StatBase[ST_RADIATION_RESISTANCE]+=14;
                                                  cr.StatBase[ST_NORMAL_ABSORB]+=6;
                                                  cr.StatBase[ST_LASER_ABSORB]+=6;
                                                  cr.StatBase[ST_PLASMA_ABSORB]+=5;
                                                  cr.StatBase[ST_ELECTRO_ABSORB]+=3;
                                                  cr.StatBase[ST_EXPLODE_ABSORB]+=9;
                                                  cr.StatBase[ST_MELEE_DAMAGE]+=7;
                                                  cr.StatBase[ST_ARMOR_CLASS]+=33;
                                                  cr.StatBase[ST_HEALING_RATE]+=10;
                                                  cr.StatBase[ST_MAX_LIFE]+=20;
                                                  cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_ALIEN;
    }
    else if( crType == 86 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 1000;
        cr.StatBase[ ST_NORMAL_RESIST ] += 40; /*
                                                  cr.StatBase[ST_LASER_RESIST]+=50;
                                                  cr.StatBase[ST_FIRE_RESIST]+=10;
                                                  cr.StatBase[ST_PLASMA_RESIST]+=50;
                                                  cr.StatBase[ST_ELECTRO_RESIST]+=50;
                                                  cr.StatBase[ST_EXPLODE_RESIST]+=60;
                                                  cr.StatBase[ST_POISON_RESISTANCE]+=45;
                                                  cr.StatBase[ST_RADIATION_RESISTANCE]+=18;
                                                  cr.StatBase[ST_NORMAL_ABSORB]+=12;
                                                  cr.StatBase[ST_LASER_ABSORB]+=15;
                                                  cr.StatBase[ST_PLASMA_ABSORB]+=12;
                                                  cr.StatBase[ST_ELECTRO_ABSORB]+=15;
                                                  cr.StatBase[ST_EXPLODE_ABSORB]+=25;
                                                  cr.StatBase[ST_MELEE_DAMAGE]+=7;
                                                  cr.StatBase[ST_ARMOR_CLASS]+=10;
                                                  cr.StatBase[ST_HEALING_RATE]+=10;
                                                  cr.StatBase[ST_MAX_LIFE]+=120;
                                                  cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_ALIEN;
    }
    else if( crType == 67 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 60; /*
                                                   cr.StatBase[ST_NORMAL_RESIST]+=20;
                                                   cr.StatBase[ST_LASER_RESIST]+=20;
                                                   cr.StatBase[ST_FIRE_RESIST]+=10;
                                                   cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                   cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                   cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=15;
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=6;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=14;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_GECKO;
    }
    else if( crType == 68 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 135; /*
                                                    cr.StatBase[ST_NORMAL_RESIST]+=25;
                                                    cr.StatBase[ST_LASER_RESIST]+=20;
                                                    cr.StatBase[ST_FIRE_RESIST]+=20;
                                                    cr.StatBase[ST_PLASMA_RESIST]+=10;
                                                    cr.StatBase[ST_EXPLODE_RESIST]+=20;
                                                    cr.StatBase[ST_ELECTRO_RESIST]+=30;
                                                    cr.StatBase[ST_LASER_ABSORB]+=2;
                                                    cr.StatBase[ST_POISON_RESISTANCE]+=15;
                                                    cr.StatBase[ST_RADIATION_RESISTANCE]+=6;
                                                    cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                    cr.StatBase[ST_ARMOR_CLASS]+=22;
                                                    cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_GECKO;
    }
    else if( crType == 70 || crType == 17 || crType == 53 || crType == 54 || crType == 66 || crType == 101 )
        cr.StatBase[ ST_BODY_TYPE ] = BT_ROBOT;
    else if( crType == 52 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 70; /*
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=25;
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=10;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=4;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_MANTI;
    }
    else if( crType == 97 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 30; /*
                                                   cr.StatBase[ST_POISON_RESISTANCE]+=5;
                                                   cr.StatBase[ST_RADIATION_RESISTANCE]+=2;
                                                   cr.StatBase[ST_MELEE_DAMAGE]+=2;
                                                   cr.StatBase[ST_ARMOR_CLASS]+=4;
                                                   cr.StatBase[ST_HEALING_RATE]+=10;*/
        cr.StatBase[ ST_BODY_TYPE ] = BT_GIANT_ANT;
    }
    else if( crType == 23 )
    {
        cr.StatBase[ ST_KILL_EXPERIENCE ] = 85;

        cr.StatBase[ ST_BODY_TYPE ] = BT_FLOATER;
    }
    else if( crType == 65 )
        cr.StatBase[ ST_BODY_TYPE ] = BT_PLANT;
    else
        cr.StatBase[ ST_BODY_TYPE ] = 0;

    cr.StatBase[ ST_BASE_CRTYPE ] = crType;

    ChangeCritterSpeed( cr );
}
