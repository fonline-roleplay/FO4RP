// combat.fos

#ifndef COMBAT_H
#define COMBAT_H

	//Common for every module
		#define NO_STATS					( -1 )
	
		// Critical hit/miss flags
		#define HF_NO_EFFECTS				( 0x00000000 )
		#define HF_KNOCKOUT					( 0x00000001 )
		#define HF_KNOCKDOWN				( 0x00000002 )
		#define HF_CRIPPLED_LEFT_LEG		( 0x00000004 )
		#define HF_CRIPPLED_RIGHT_LEG		( 0x00000008 )
		#define HF_CRIPPLED_LEFT_ARM		( 0x00000010 )
		#define HF_CRIPPLED_RIGHT_ARM		( 0x00000020 )
		#define HF_BLINDED					( 0x00000040 )
		#define HF_DEATH					( 0x00000080 )
		#define HF_DAZED					( 0x00000400 )
		#define HF_BYPASS_ARMOR				( 0x00000800 )
		#define HF_DROPPED_WEAPON			( 0x00004000 )
		#define HF_STUNNED					( 0x00008000 )
		#define HF_RANDOM					( 0x00200000 )

		#define MF_NO_EFFECTS				( 0x00000000 )
		#define MF_KNOCKED_DOWN				( 0x00000002 )
		#define MF_ON_FIRE					( 0x00000400 )
		#define MF_WEAPON_EXPLODED			( 0x00001000 )
		#define MF_WEAPON_DESTROYED			( 0x00002000 )
		#define MF_WEAPON_DROPPED			( 0x00004000 )
		#define MF_LOST_NEXT_TURN			( 0x00008000 )
		#define MF_HIT_SELF					( 0x00010000 )
		#define MF_LOST_REST_OF_AMMO		( 0x00020000 )
		#define MF_FIRED_DUD_SHOT			( 0x00040000 )
		#define MF_HURT_SELF				( 0x00080000 )
		#define MF_HIT_RANDOMLY				( 0x00100000 )
		#define MF_CRIPPLED_RANDOM_LIMB		( 0x00200000 )
		#define MF_WAS_KILLED				( 0x10000000 )

		// for WeaponSubtype
		#define WS_UNARMED					( 1 )
		#define WS_MELEE					( 2 )
		#define WS_THROWING					( 3 )
		#define WS_GUN						( 4 )
		
		#define HEIGHT_GROUND				( 0 )
		#define HEIGHT_LOW					( 1 )
		#define HEIGHT_MID					( 2 )
		#define HEIGHT_HI					( 3 )
		#define HEIGHT_SKY					( 4 )

		#define SIZE_GROUP_TINY				( 0 )
		#define SIZE_GROUP_SMALL			( 1 )
		#define SIZE_GROUP_MID				( 2 )
		#define SIZE_GROUP_BIG				( 3 )
		#define SIZE_GROUP_FLYING			( 4 )

		#define MSG_MISFIRE					"|0xFF0000  MISS"
		#define MSG_OK_FIRE					"|0x00FF00  OK"
		
		// Val0, Val1, is used in item.fos for flashlight Val2 and Val3 is used in reload.fos
		#define ROUNDS_FIRED				Val8
		
		#define AMMO_MISFIRE_CHANCE			( 10 )
		#define WEAPON_MISSFIRE_CHANCE		( 10 )

		#define CLEAVE_ATTACK_ANGLE			( 30.0f )
		#define FLAMER_ATTACK_ANGLE			( 15.0f )
		#define SHOTGUN_PELLETS				( 11 )
		const int[] spread_angle_array = { 0, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5 };
		#define MISS_ANGLE					( 5.0f )

		#define DAMAGE_TIMEOUT				( __FullSecond + REAL_SECOND( 3 ) )
		
		#define ANIM2_BURST					( 55 )
		#define ANIM2_AUTO					( 56 )

		string[] SpentShellSFX = { "SpentShell0.ogg", "SpentShell2.ogg", "SpentShell3.ogg", "SpentShell4.ogg", "SpentShell5.ogg", "SpentShell6.ogg", "SpentShell7.ogg", "SpentShell8.ogg",
										 "SpentShell9.ogg", "SpentShell10.ogg", "SpentShell11.ogg", "SpentShell12.ogg", "SpentShell13.ogg", "SpentShell14.ogg", "SpentShell15.ogg",
										 "SpentShell16.ogg", "SpentShell17.ogg", "SpentShell18.ogg", "SpentShell19.ogg", "SpentShell20.ogg", "SpentShell21.ogg" };
		const string[] DirtHitNormSFX = {	"dirt_01.ogg", "dirt_02.ogg", "dirt_03.ogg", "dirt_04.ogg", "dirt_05.ogg", "dirt_06.ogg" };						 
		const string[] glass_break_sounds = { "glass_break1.ogg", "glass_break2.ogg", "glass_break3.ogg", "glass_break4.ogg" };
											  
		const uint16[][] Sparks = {
			{ PID_TARGET_SPARKS_CENTER0, PID_TARGET_SPARKS_CENTER1, PID_TARGET_SPARKS_CENTER2, PID_TARGET_SPARKS_CENTER3, PID_TARGET_SPARKS_CENTER4, PID_TARGET_SPARKS_CENTER5 },
			{ PID_TARGET_SPARKS_LEFT0, PID_TARGET_SPARKS_LEFT1, PID_TARGET_SPARKS_LEFT2, PID_TARGET_SPARKS_LEFT3, PID_TARGET_SPARKS_LEFT4, PID_TARGET_SPARKS_LEFT5 },
			{ PID_TARGET_SPARKS_RIGHT0, PID_TARGET_SPARKS_RIGHT1, PID_TARGET_SPARKS_RIGHT2, PID_TARGET_SPARKS_RIGHT3, PID_TARGET_SPARKS_RIGHT4, PID_TARGET_SPARKS_RIGHT5 },
			{ PID_TARGET_SPARKS_SHOULDERS0, PID_TARGET_SPARKS_SHOULDERS1, PID_TARGET_SPARKS_SHOULDERS2, PID_TARGET_SPARKS_SHOULDERS3, PID_TARGET_SPARKS_SHOULDERS4, PID_TARGET_SPARKS_SHOULDERS5 },
			{ PID_TARGET_SPARKS_HEAD0, PID_TARGET_SPARKS_HEAD1, PID_TARGET_SPARKS_HEAD2 } // only for CA, PA, APA headshots Material=9, 10 (polymer, composite)
		};
		
		const string[] HIT_LOCATION_NAMES = { "NONE", "HEAD", "LEFT_ARM", "RIGHT_ARM", "TORSO", "RIGHT_LEG", "LEFT_LEG", "EYES", "GROIN", "UNCALLED" };


	//All but combat module
	#ifndef COMBAT_MODULE
		#ifdef __SERVER
			import void InjureCritter( Critter& cr, uint dmg, uint dmgType, uint8 dir, int attackerId, uint hitLocation, bool isCritical ) from "combat";
			import void CombatAttack( Critter& cr, Critter@ target, ProtoItem& weapon, uint8 weaponMode, ProtoItem@ ammo, uint16 hexX, uint16 hexY, bool recursive, bool autohit ) from "combat";
			import int attack_ap( Critter& cr, ProtoItem& weapon, uint8 mode ) from "combat";
			import void CollateralDamage( Map& map, uint16 tx, uint16 ty, uint dmgType ) from "combat";
			import void HookHoldAttack( Critter@ target, uint8 hardness ) from "combat";
			import void AttackSound( Critter& cr, ProtoItem& weapon, uint8 weaponMode ) from "combat";
			import void SpawnSpentCasing( Critter& cr, Map& map, Item& weapon, ProtoItem& ammo, int ammoRound, bool extraction ) from "combat";
			import bool CritRoll( int critBase, Critter& target, Map& map, uint16 hexX, uint16 hexY ) from "combat";
		#endif // __SERVER
	#endif // COMBAT_MODULE

#endif // COMBAT_H