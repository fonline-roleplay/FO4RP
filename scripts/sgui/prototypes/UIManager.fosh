final class UIManager : UIManagerContract
    {
        private dictionary EventListeners;
        array<UIDrawListenerContract@> DrawListeners;

        bool HandleEvent(UIEventContract@ event)
        {
            string type = event.get_Type();
            array<UIEventListenerContract@>@ listeners;
            if (this.EventListeners.exists(type)) {
                if (this.EventListeners.get(type,@listeners)) {
                    if (listeners !is null) {
                        for (uint pos = 0, len = listeners.length; pos < len; pos++) {
                            return listeners[pos].HandleEvent(event);
                        }
                    }
                }
            }
            return false;
        }

        void RegisterEventListener(string eventType, UIEventListenerContract@ listener)
        {
            array<UIEventListenerContract@>@ listeners;
            if (!(this.EventListeners.exists(eventType) && this.EventListeners.get(eventType, listeners) && listeners !is null)) {
                array<UIEventListenerContract@> arr;
                @listeners = arr;
            }
            listeners.insertLast(listener);
            this.EventListeners.set(eventType, listeners);
        }

        void RegisterDrawListener(UIDrawListenerContract@ listener)
        {
            this.DrawListeners.insertLast(@listener);
        }

        UIManager() 
        {
            Log("SGUI here i am for sure");
        }

        void Draw(int layer) {
            for (uint pos = 0, len = this.DrawListeners.length; pos < len; pos++) {
                this.DrawListeners[pos].Draw(layer);
            }
        }
    }