shared abstract class ProtoObject { }

shared class ProtoObjectList
{
	ProtoObject@[] list;
	
	ProtoObjectList@ add( ProtoObject@ item )
	{
		list.insertLast( item );
		return this;
	}
	
	ProtoObject@ get( int index = 0 )
	{
		if( !valid(list) || list.isEmpty() )
			return null;
		
		uint len = list.length();		
		if( index < 0 )
			index = uint( abs( ( len + index ) % len ) );
		
		return list[index];
	}
	
	ProtoObject@ first() { return get(0); }
	ProtoObject@ last() { return get(-1); }
	
	ProtoObjectList@ clear() { list.resize(0); return this; }
	uint length() { return list.length(); }
	
	//push, pop, insert, change e.t.c.
}