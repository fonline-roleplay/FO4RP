#ifndef TERMINAL_H
#define TERMINAL_H

	#define TERMINAL_POWERED				Val0				// access to power-grid
	#define TERMINAL_FLAG					Val1				// Terminal type - binary flag - see below
	#define TERMINAL_SLAVE					Val2				// Slave terminal
	#define TERMINAL_EVENT					Val3				// Placeholder
	#define TERMINAL_FREQUENCY				Val4 				// Music transmit frequency
	#define FENCE_GROUP						Val5 				// fence ID
	#define PASSWORD						Val6 				// access password
	#define ACTIVE_AUTODOC					Val7				// auto-doc Id
	#define CONSOLE_PASSWORD				Val8 				// password block
	#define ACCESS_CARD						Val9 				// card set in terminal

	#define PASSWORD_DISABLED				( 0 )				// 
	#define PASSWORD_ENABLED				( 1 )				// 

	#define TERMINAL_LASER_FENCE			( 0x00000001 ) 		// Can control fence
	#define TERMINAL_TURRETS				( 0x00000002 )		// Can control Turrets
	#define TERMINAL_ACCESS_CARDS			( 0x00000004 )		// Has access cards
	#define TERMINAL_PASSWORD_PROTECTION	( 0x00000008 )		// Has password
	#define TERMINAL_AUTODOC				( 0x00000010 )		// Can control auto-doc
	#define TERMINAL_FORCE_FIELD			( 0x00000020 ) 		// Can control Force Fields
	#define TERMINAL_DOORS					( 0x00000040 ) 		// Can control Doors
	#define TERMINAL_MUSIC					( 0x00000080 ) 		// Can transmit tunes and make music records
	#define TERMINAL_MASTER					( 0x00000100 ) 		// Can control other terminals
	#define TERMINAL_HACKABLE				( 0x00000200 ) 		// Can be hacked
	#define TERMINAL_DATABASE				( 0x00000400 ) 		// Has attached database
	
	#define SKILL_EFFECIENCY_MAX			( 20.0f )
	#define SKILL_EFFECIENCY_ZERO			( 15.0f )
	#define SKILL_EFFECIENCY_MIN			( 11.0f )
	#define SKILL_MAX_DIFFERENCE			( 300.0f )

	const uint16[] TerminalKeyCards = { PID_TERMINAL_RED_KEY, PID_TERMINAL_BLUE_KEY, PID_TERMINAL_YELLOW_KEY, PID_TERMINAL_TECH1_KEY, PID_TERMINAL_TECH2_KEY, PID_TERMINAL_CARD_KEY, PID_TERMINAL_METAL_KEY, PID_TERMINAL_PLASTIC_KEY, PID_TERMINAL_ADVANCED_KEY };
	
	const uint16[] TerminalPids = { PID_TERMINAL };
	
	#ifndef TERMINAL
		import void StartMenuTerminal( Critter& cr, Item& terminal ) from "terminal";
		import void StartMenuHacking( Critter& cr, Item& terminal ) from "terminal";
		import bool TransferToTerminal( Critter& cr, Item& targetItem, Item& cont ) from "terminal";
		import bool TransferFromTerminal( Critter& cr, Item& targetItem, Item& cont ) from "terminal";
	#endif // TERMINAL
		
#endif // TERMINAL_H