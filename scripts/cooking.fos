#ifndef COOKING
#define COOKING

#include "_utils.fos"
#include "cooking_h.fos"
#include "critter_skills_h.fos"

bool UseCookingStuff( Scenery& fire, Critter& cr )
{
    if( !CanCook( fire ) )
    {
        return false;
    }
    else
    {
		SayLog( cr, crInfo( cr ) + " uses " + itemDesc( fire ) + "." );
        AskCooking(cr);
    }

    return true;
}

bool CanCook( Scenery@ fire )
{
    if( !valid( fire ) )
	{
        return false;
	}
    uint16 pid = fire.ProtoId;
    return pid == 2612 || pid == 2682 || pid == 2683 || pid == 2684 || pid == 2685 || pid == 3822 || pid == 3823 || pid == 3824 || pid == 3825;
}

void AskCooking( Critter& cr )
{
	cr.ShowScreen( SCREEN_DIALOGBOX, 3, "cooking@answer_COOKING" );
	cr.SayMsg( SAY_DIALOGBOX_TEXT, TEXTMSG_TEXT, STR_CHOOSE_YOUR_ACTION );
	cr.SayMsg( SAY_DIALOGBOX_BUTTON( 0 ), TEXTMSG_TEXT, STR_FURNITURE_MENU_CRAFT );
	cr.SayMsg( SAY_DIALOGBOX_BUTTON( 1 ), TEXTMSG_TEXT, STR_FIRE_MENU_COOK );
	cr.SayMsg( SAY_DIALOGBOX_BUTTON( 2 ), TEXTMSG_TEXT, STR_FIRE_MENU_FRY );
}

void answer_COOKING( Critter& cr, uint answerI, string& answerS )
{
	if( !CookingActions( cr, answerI ) )
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_THIS_DID_NOTHING );
	}
}

bool CookingActions( Critter& cr, uint answer )
{
	switch( answer )
	{
		case( 0 ):
			return GetCraftToken( cr );
		case( 1 ):
			return CookingMenu( cr );
		case( 2 ):
			return FastFrying( cr );
		default:
			return false;
	}
	return false;
}


bool GetCraftToken( Critter& cr )
{
	cr.SayMsg( SAY_EMOTE, TEXTMSG_TEXT, STR_EMOTE_WARM_HANDS );
	SayLog( cr, crInfo( cr ) + " used fire token." );
	
	Map@ map = cr.GetMap();
	if( !valid( map ) )
	{
		return false;
	}
	
	Item@ Workplace;
	@Workplace = map.GetItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK );
	
	if( !valid( Workplace ) )
	{
		@Workplace = cr.GetMap().AddItem( cr.HexX, cr.HexY, PID_GRAPPLE_HOOK, 1 );
	}
	
	if( !valid( Workplace ) )
	{
		return false;
	}
	
	Workplace.SetScript( "item@_WorkplaceInit" );
	
	if( cr.CountItem( PID_FIREPLACE_TOKEN ) == 0 )
	{
		cr.AddItem( PID_FIREPLACE_TOKEN, 1 );
	}
	cr.ShowScreen( SCREEN_FIXBOY, 0, "" );
	return true;
}

bool FastFrying( Critter& cr )
{
    Item@ item = _CritGetItemHand( cr );
    if( !valid( item ) )
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_HOLD_MEAT );
        return true;
    }

	string name = "food";
	switch( item.GetProtoId() )
	{
		case( PID_MEAT ):
			_CritAddItem( cr, PID_COOKED_MEAT, 1 );
			name = "some meat";
			break;
		case( PID_RAT_MEAT ):
			_CritAddItem( cr, PID_COOKED_RAT_MEAT, 1 );
			name = "a rat";
			break;
		case( PID_GECKO_MEAT ):
			_CritAddItem( cr, PID_COOKED_GECKO_MEAT, 1 );
			name = "some gecko meat";
			break;
		case( PID_MANTIS_MEAT ):
			_CritAddItem( cr, PID_MANTIS_FOOD, 1 );
			name = "a mantis leg";
			break;
		case( PID_FISH_SMALLEST ):
			_CritAddItem( cr, PID_COOKED_FISH, 1 );
			name = "a fishy";
			break;
		case( PID_FISH_SMALL ):
			_CritAddItem( cr, PID_COOKED_FISH, 2 );
			name = "a small fish";
			break;
		case( PID_FISH ):
			_CritAddItem( cr, PID_COOKED_FISH, 4 );
			name = "a fish";
			break;
		case( PID_FISH_BIG ):
			_CritAddItem( cr, PID_COOKED_FISH, 8 );
			name = "a large fish";
			break;
		case( PID_FISH_BIGGEST ):
			_CritAddItem( cr, PID_COOKED_FISH, 16 );
			name = "a giant fish";
			break;
		default:
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_WRONG_ITEM_TO_FRY );
			return true;
	}
	
	SayLog( cr, crInfo( cr ) + " fries " + name + "." );
	
	if( Random( 1, 5 ) == 5 )
	{
		int skillNum = SK_COOKING;
		raiseSkill( cr, skillNum );
	}
	
    cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_FRY_SUCCESS, "$name" + STR_INSERT_ITEM_LINE( item.GetProtoId() * 100 ) );

    _SubItem( item, 1 );
	return true;
}

bool CookingMenu( Critter& cr )
{
	uint16 count = 0;
	if( cr.Skill[ SK_COOKING ] < 100 ) 
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_NO_RECIPES );
	}
	
	int skill = ( cr.Skill[ SK_COOKING ] - 90 ) / 13;
	int skill_max = foodNames.length();
	skill = CLAMP( skill, 0, skill_max );
	for( int i = 0; i < skill; i++ )
	{
		count++;
	}

	cr.ShowScreen( SCREEN_DIALOGBOX, count, "answer_PATTERN" );
	cr.SayMsg( SAY_DIALOGBOX_TEXT, TEXTMSG_TEXT, STR_SELECT_RECIPE );
	
	for( uint8 i = 0; i < count; i++ )
	{
		cr.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_TEXT, foodNames[ i ] );
	}
	return true;
}

void answer_PATTERN( Critter& cr, uint answerI, string& answerS )
{
	SayLog( cr, crInfo( cr ) + " is preparing a meal." );
	
	bool isFailed = false;
	if( Random( 0, 100 ) + cr.Skill[ SK_COOKING ] < int( 120 + answerI * 10 ) )
	{
		isFailed = true;
	}

    if( answerI == RECIPE_MAGGOT_SOUP )
	{
        if( _CritCountItem( cr, PID_MAGGOT ) >= 3 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
		{
			_CritDeleteItem( cr, PID_MAGGOT, 3 );
            _CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_MAGGOT_SOUP, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MAGGOT ) < 4 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_MAGGOT_SOUP_INGRIDIENT_2 );
		}
    }

    if( answerI == RECIPE_RAT_STEW )
	{
        if( _CritCountItem( cr, PID_RAT_MEAT ) > 0 && _CritCountItem( cr, PID_PEYOTE ) > 0 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
		{
			_CritDeleteItem( cr, PID_RAT_MEAT, 1 );
			_CritDeleteItem( cr, PID_PEYOTE, 1 );
            _CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_RAT_STEW, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_RAT_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_PEYOTE ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_RAT_STEW_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_SALAD )
	{
        if( _CritCountItem( cr, PID_ALGAE ) > 1 && _CritCountItem( cr, PID_MUTATED_FRUIT ) > 0 )
		{
			_CritDeleteItem( cr, PID_MUTATED_FRUIT, 1 );
            _CritDeleteItem( cr, PID_ALGAE, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_SALAD, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_ALGAE ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_MUTATED_FRUIT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SALAD_INGRIDIENT_2 );
		}
    }

	if( answerI == RECIPE_SOUP )
    {
        if( _CritCountItem( cr, PID_CABBAGE ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) > 0 )
        {
            _CritDeleteItem( cr, PID_CABBAGE, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
			_CritDeleteItem( cr, PID_GLASS_BOTTLE_FULL, 1);
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_HERBAL_SOUP, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_GLASS_BOTTLE_FULL ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_CABBAGE ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_SOUP_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_KEBAB )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_MEAT_ON_A_STICK, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
        else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_INGRIDIENT_1 );
		}
        else if(_CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_KEBAB_INGRIDIENT_2 );
		} 
    }

    if( answerI == RECIPE_TORTILLA )
    {
        if( _CritCountItem( cr, PID_CORN_FLOUR) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 )
        {
            _CritDeleteItem( cr, PID_CORN_FLOUR, 1 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_FLAPJACK, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TORTILLA_INGRIDIENT_2 );
		}
    }

    if( answerI == RECIPE_PRETZEL )
	{
        if( _CritCountItem( cr, PID_CORN_FLOUR ) > 0 && _CritCountItem( cr, PID_FERMENT ) > 0 && _CritCountItem( cr, PID_SUGAR ) > 0 )
		{
			_CritDeleteItem( cr, PID_CORN_FLOUR, 1 );
			_CritDeleteItem( cr, PID_FERMENT, 1 );
            _CritDeleteItem( cr, PID_SUGAR, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_FAIL );
			
			}
			else
			{	
				_CritAddItem( cr, PID_PRETZEL, 3 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_CORN_FLOUR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FERMENT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_SUGAR ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PRETZEL_INGRIDIENT_3 );
		}
    }


    if( answerI == RECIPE_STOMACH )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_MOLERAT_STOMATCH ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1 )
        {
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_MOLERAT_STOMATCH, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_COOKED_MOLERAT_STOMATCH, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MOLERAT_STOMATCH ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_1 );
		}
            
		else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STOMACH_INGRIDIENT_3 );
		}
	}

    if( answerI == RECIPE_STEW )
    {
        if( _CritCountItem( cr, PID_MEAT ) > 1 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 0)
        {
            _CritDeleteItem( cr, PID_MEAT, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_RAGOUT, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_MEAT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_STEW_INGRIDIENT_3 );
		}
    }

    if( answerI == RECIPE_BURGER )
    {
        if( _CritCountItem( cr, PID_GECKO_MEAT  ) > 0 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_CABBAGE ) > 0)
        {
            _CritDeleteItem( cr, PID_GECKO_MEAT, 1 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_CABBAGE, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_BURGER, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );				
			}
        }
		else if( _CritCountItem( cr, PID_GECKO_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_CABBAGE) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_BURGER_INGRIDIENT_3 );
		}
    }

	if( answerI == RECIPE_PIZZA )
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_MEAT ) > 0 && _CritCountItem( cr, PID_BLACK_MUSHROOMS ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_MEAT, 1 );
            _CritDeleteItem( cr, PID_BLACK_MUSHROOMS, 1 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_PIZZA, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_MEAT ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BLACK_MUSHROOMS ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIZZA_INGRIDIENT_3 );
		}
    }

	if( answerI == RECIPE_FISH_PIE )
    {
        if( _CritCountItem( cr, PID_FLAPJACK  ) > 0 && _CritCountItem( cr, PID_COOKED_FISH ) > 0 && _CritCountItem( cr, PID_XANDER_ROOT ) > 0)
        {
            _CritDeleteItem( cr, PID_FLAPJACK , 1 );
            _CritDeleteItem( cr, PID_COOKED_FISH, 2 );
            _CritDeleteItem( cr, PID_XANDER_ROOT, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_PIROG , 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_COOKED_FISH ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_XANDER_ROOT ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_PIE_INGRIDIENT_3 );
		}

    }
	if( answerI == RECIPE_TACO )
    {
        if( _CritCountItem( cr, PID_RAT_MEAT  ) > 2 && _CritCountItem( cr, PID_FLAPJACK ) > 0 && _CritCountItem( cr, PID_BROC_FLOWER ) > 1)
        {
            _CritDeleteItem( cr, PID_RAT_MEAT , 3 );
            _CritDeleteItem( cr, PID_FLAPJACK, 1 );
            _CritDeleteItem( cr, PID_BROC_FLOWER, 2 );
            if( isFailed )
			{
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_FAIL );
			}
			else
			{	
				_CritAddItem( cr, PID_BURRITO, 1 );
				cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_SUCCESS );
				
				int skillNum = SK_COOKING;
				raiseSkill( cr, skillNum );
			}
        }
		else if( _CritCountItem( cr, PID_RAT_MEAT  ) < 3 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_1 );
		}
		else if( _CritCountItem( cr, PID_FLAPJACK ) == 0 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_2 );
		}
		else if( _CritCountItem( cr, PID_BROC_FLOWER ) < 2 )
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_TACO_INGRIDIENT_3 );
		}
    }
}

#endif // COOKING