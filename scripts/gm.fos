#include "_macros.fos"
#include "_colors.fos"

import void ChangeStatus( Critter& cr, uint16 status, uint8 value, bool set ) from "critter_status";        // pm added
import uint CountMapPlayers( Map@ map ) from "manager";
import uint GetAllPlayers( Critter@[]& crs ) from "manager";
import void RestartFactions( Critter& cr, int p0, int p1, int p2 ) from "factions";
import void ShowInputBoxScreen( Critter& cr, string funcName, uint16 textLength, uint8 flags ) from "main";
import void Warn( Critter& admin, int param0, int param1, int param2 )  from "warning";  // ErlKing
import void SetWorkbench( Critter& cr, int p0, int p1, int p2 )  from "item";  // ErlKing
import void ChangeCritterSpeed( Critter& cr ) from "speed"; 
import void unsafe_log_2(Critter& cr, int locX, int locY, int type, string@ message, int[] @ p4 ) from "general_unsafe"; 
import void QuakeScreen( Map& map ) from "effects";
import void PlayMusic(Map& map, string& musicName, uint pos, uint repeat) from "media";

import void ProccessDoctorSkill( Critter& cr, Critter& targetCr, bool alreadyAllowed ) from "heal";
import void unsafe_GM_ChangeItemPicture( Critter& player, int itemId, int hash, int , string@ , int[]@ ) from "test";

import void StoreMenu( Critter& cr ) from "store";

import void DeepSleep( Critter& player ) from "general_unsafe";

import void ShowTeleports( Critter& cr ) from "teleports";

//EFFECTS
import void FlushScreen( Critter& cr, uint fromColor, uint toColor, uint timeMs ) from "effects";

#define GM_ACTIVATION            ( 1 )
#define GM_MODOCPASS             ( 2 )
#define GM_FACTIONS              ( 3 )
#define GM_MODOCMODES            ( 4 )
#define GM_STATS                 ( 5 )
#define GM_BANS                  ( 6 )
#define GM_MOBS                  ( 7 )
#define GM_NPC                   ( 8 )
#define GM_LOCATION              ( 9 )
#define GM_ITEMS                 ( 10 )
#define GM_PM                    ( 11 )
#define GM_S2A                   ( 12 )
#define GM_DANGEROUS             ( 13 )


#define DISTANCE_GROUP_RADIUS    ( 35 ) // расстояние на котором группа видит друг друга (и помогает атаковать противника)
#define DISTANCE_GO_HOME         ( 30 ) // расстояние от дома при котором моб идет домой
#define MAX_FURY                 ( 2 )  // сколько раз нужно разозлить НПС чтобы он стал игнорить границы обитания
#define DISTANCE_HELP            ( 30 ) // расстояние помощи
#define TIME_TEST_GO_HOME        ( 10 ) // переодичность тестирования на возврат домой и отмену атаки

uint[] pocket_GMs;

bool isPocketGM( int id )
{
	return( pocket_GMs.find(id) != -1 );
}

//import bool isGM( Critter& player ) from "gm";
bool isGM( Critter& player ) //exported
{
	if( !player.IsPlayer() ) return false;
	
	if( !isLoadedGMs )
		LoadGMs( player, 0, 0, 0 );
	
	if( player.StatBase[ ST_ACCESS_LEVEL ] < ACCESS_MODER && ( player.GetAccess() >= ACCESS_MODER || isPocketGM( player.Id ) ) )
		player.StatBase[ ST_ACCESS_LEVEL ] = ACCESS_MODER;

	return player.StatBase[ ST_ACCESS_LEVEL ] >= ACCESS_MODER;
}

//~run gm abortOldGMs 0 0 0
void abortOldGMs( Critter& cr, int, int, int )
{
	GameVar@ autoOffOldGMs = GetGlobalVar( GVAR_autoOffOldGMs );		
	autoOffOldGMs.opAssign( CLAMP( 1 - autoOffOldGMs.GetValue(), 0, 1 ) );
	cr.Say( SAY_NETMSG, "Автосброс карманного ГМ-доступа при логине в" + ( autoOffOldGMs.GetValue() == 0 ? "ы" : "" ) + "ключен." );
}

//~run gm gmlist action 0 0
void gmlist( Critter& cr, int action, int p1, int p2 )
{
	string result = "Список ГМов:";
	Critter@[] crs;
	uint count = GetAllPlayers( crs );
	uint n = 1;
	for( uint i = 0; i < count; i++ )
	{
		if( !valid( crs[i] ) ) continue;
		if( crs[i].StatBase[ ST_ACCESS_LEVEL ] > 0 )
		{
			result += "\n" + (n++) + ") #" + crs[i].Id + " " + GetPlayerName( crs[i].Id );
			switch( action )
			{
				case(0): //enlist
					result += " has " + crs[i].StatBase[ ST_ACCESS_LEVEL ] + " and is " + ( isPocketGM( crs[i].Id ) ? "" : "not" ) + " pocket GM. [" + crs[i].GetAccess() + "]";
				break;
				case(1): //reset
					result += " lost access, and is " + ( isPocketGM( crs[i].Id ) ? "" : "not" ) + " pocket GM. [" + crs[i].GetAccess() + "]";
					crs[i].StatBase[ ST_ACCESS_LEVEL ] = 0;
				break;
			}
		}
	}
	cr.Say( SAY_NETMSG, result );
}

bool isLoadedGMs = false;
//~run gm LoadGMs 0 0 0
void LoadGMs( Critter& cr, int p0, int p1, int p2 )
{
	pocket_GMs.resize(0);
	file f;
	if( f.open( "pocket_GMs.txt", "r" ) >= 0 )
	{
        string word = "";
        uint   pos = 0;
		//f.setPos( 0 );
		
		int id = 0;
        uint i = 0;
		string full_text = "Список карманных ГМов:";
        while( !f.isEndOfFile() )
        {
            //pos = f.getPos();
            f.readLine( word );
			full_text += "\n" + (i++) + ") ";
			
			if( !StrToInt( word, id ) )
				full_text += "[ERROR]";
			else 
			{
				full_text += GetPlayerName( id );
				pocket_GMs.insertLast( id );
			}
			
			full_text += " #'" + word + "';";
        }
        f.close();	
		
		isLoadedGMs = true;
		if( cr.StatBase[ ST_ACCESS_LEVEL ] >= ACCESS_MODER )
			cr.Say( SAY_NETMSG, full_text );
	}
	else Log( "No pocket GMs found." );
}

void TEST_MENU( Critter& cr, int p0, int p1, int p2 )
{
	string[] data = { "answer_GM_MENU", "HELLO WORLD!", "Ну, поехали.." };
	DIALOG_MENU( cr, data );
}

//import void DIALOG_MENU( Critter& cr, string[] data ) from "gm";
void DIALOG_MENU( Critter& cr, string[] data )
{
	if( !valid(data) || data.length() < 2 ) return;
	
	uint len = data.length() - 2;
	if( len > 20 ) { cr.Say( SAY_NETMSG, "Часть возможностей не влезла в список!" ); len = 20; }
	
	cr.ShowScreen( SCREEN_DIALOGBOX, len, data[0] );
	cr.Say( SAY_DIALOGBOX_TEXT, data[1] );
	for( uint i = 0; i < len; i++ )
		cr.Say( SAY_DIALOGBOX_BUTTON( i ), data[2 + i] );
}

void answer_GM_MENU( Critter& cr, uint answerI, string& answerS )
{
	cr.Say( SAY_EMOTE, "доволен" );
}

#ifndef __SUB_FUNCTIONS__
#define __SUB_FUNCTIONS__
bool SpamBlocked( Critter& cr )
{
	if( cr.Param[ ST_VAR5 ] > 3 ) return true;
    cr.ParamBase[ ST_VAR5 ] += 1;
	return false;
}

bool GetTargetPlayer( Critter& cr, Critter@ target )
{
	@target = GetCritter( cr.Stat[ ST_VAR0 ] );
    if( !valid(target) || target.IsNpc() )
		return false;
	return true;
}

void LogWarning( uint crID, uint targetID, uint plead )
{
	file f;
	if( f.open( "logs\\warnings.txt", "a" ) >= 0 )
	{
		f.writeString( "Жалоба от " + GetPlayerName( crID ) + "\t" + "\t" + crID + "\t" + " на " + GetPlayerName( targetID ) + "\t" + "\t" + targetID + "\t" + pleads[plead][1] + "\n" );
		f.close();
	}
	else Log( "Failed to log warning." );
}

void WarnGMs(uint crID, uint targetID, uint plead)
{
	Critter@[] crs;
	GetAllPlayers( crs );
	string str = "жалоба от |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( crID ) + "(" + crID + ") на " + GetPlayerName( targetID ) + "(" + targetID + ")|0xFFFF0000 > |0xFFBB33CC " + pleads[plead][1];
	for( uint i = 0, j = crs.length(); i < j; i++ )
	{
		if( crs[ i ] is null or !isGM( crs[ i ] ) ) continue;
		crs[ i ].Say( SAY_NETMSG, str );
	}
}


#endif

#ifndef __OLD_FUNCTIONS__
#define __OLD_FUNCTIONS__

void unsafe_GM_getItemsByPid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_getItemsByPid( player, param0, param1, param2, param3, param4 );
}

void GM_getItemsByPid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    getItemsByPid( player, param0, param1, param2 );
}

void getItemsByPid( Critter& player, int pid, int param1, int param2 )
{
    Item@[] items;
    uint count = GetAllItems( pid,  items );
    player.Say( SAY_NETMSG, "Count: " + count );

    Item@ item = null;

    for( uint i = 0; i < count; i++ )
    {
        @item = items[ i ];
        if( !valid( item ) )
            continue;
        // player.Say(SAY_NETMSG, "#"+item.Id+": acc "+item.Accessory);
        switch( item.Accessory )
        {
        case ACCESSORY_HEX:
        {
            Map@ map = GetMap( item.MapId );
            if( !valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": map " + item.MapId + " not valid" );
                continue;
            }
            player.Say( SAY_NETMSG, "#" + item.Id + ": map " + map.Id + " (" + item.HexX + ", " + item.HexY + ")" );
        }
        break;
        case ACCESSORY_CRITTER:
        {
            Critter@ cr = GetCritter( item.CritId );
            if( !valid( cr ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + item.CritId + " not valid" );
                continue;
            }
            Map@ map = cr.GetMap();
            if( valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + cr.Id + " (map " + map.Id + ": " + cr.HexX + ", " + cr.HexY + ")" );
            }
            else
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + cr.Id + " (global)" );
            }
        }
        break;
        case ACCESSORY_CONTAINER:
        {
            Map@ map = GetMap( item.MapId );
            if( !valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": map " + item.MapId + " not valid" );
                continue;
            }

            Item@ cont = map.GetItem( item.ContainerId );
            if( !valid( cont ) )
                continue;

            player.Say( SAY_NETMSG, "#" + item.Id + ": map " + map.Id + " (cont " + cont.Id + ": " + cont.HexX + ", " + cont.HexY + ")" );
        }
        break;
        }
    }


}

void delItemsByPid( Critter& player, int pid, int param1, int param2 )
{
    Item@[] items;
    uint count = GetAllItems( pid,  items );

    DeleteItems( items );

    player.Say( SAY_NETMSG, "Deleted " + count + " items." );
}

class Replic
{
    uint   Author;
    uint   Speaker;
    uint8  SayType;
    string Buffer;
    Replic()
    {
        Author = 0;
        Speaker = 0;
        SayType = 0;
        Buffer = "";
    }
}

Replic[] replics;

void unsafe_GM_voice( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_voice( player, param0, param1, param2, param3, param4 );
}

void GM_voice( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    player.ParamBase[ ST_VAR1 ] = param0;
    player.ParamBase[ ST_VAR2 ] = param1;
    ShowInputBoxScreen( player, "gm@unsafe_answer_GM_voice#text", 0, INPUTBOX_CLOSE_ON_ENTER );
}

void unsafe_answer_GM_voice( Critter& player, int skill, int p1, int p2, string@ message, int[] @ p4 )
{
    if( message.length() != 0 )
    {
        Map@ map = player.GetMap();
        map.SetText( player.ParamBase[ ST_VAR1 ], player.ParamBase[ ST_VAR2 ], COLOR_GRAY, message );
		GM_voice( player,  player.ParamBase[ ST_VAR1 ], player.ParamBase[ ST_VAR2 ], 0, null, null );
    }
}

void unsafe_GM_say( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		say( player, param0, param1, param2 );
}

void GM_say( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    say( player, param0, param1, param2 );
}

void say( Critter& player, int param0, int param1, int param2 )
{
    if( param0 < 1 )
    {
        //player.Say( SAY_NETMSG, "Wrong critter Id." );
        return;
    }

    Critter@ cr = GetCritter( param0 );

    if( cr is null )
    {
        player.Say( SAY_NETMSG, "Can't find critter by Id." );
        return;
    }

    if( param1 < 1 || param1 > 11 )
    {
        player.Say( SAY_NETMSG, "Wrong SayType." );
        return;
    }

    player.ParamBase[ ST_VAR1 ] = cr.Id;
    player.ParamBase[ ST_VAR2 ] = param1;
	
	string[] description = { "Текст:", "Сказать:", "SAY_NORM_ON_HEAD", "Крикнуть:", "SAY_SHOUT_ON_HEAD", "Эмоут:", "SAY_EMOTE_ON_HEAD", "Шептать:", "SAY_WHISP_ON_HEAD", "SAY_SOCIAL", "SAY_RADIO", "Оповестить:", "Текст:" };
	ShowInputBoxScreen( player, "gm@unsafe_answer_GM_say#" + description[CLAMP( param1, 0, description.length() - 1 )], 0, INPUTBOX_CLOSE_ON_ENTER );
}

void unsafe_answer_GM_say( Critter& player, int skill, int p1, int p2, string@ message, int[] @ p4 )
{
    if( message.length() != 0 )
    {
        Critter@ cr = GetCritter( player.ParamBase[ ST_VAR1 ] );
        cr.Say( player.ParamBase[ ST_VAR2 ], message );
        say( player, player.ParamBase[ ST_VAR1 ], player.ParamBase[ ST_VAR2 ], 0 );
    }
}

void answer_gm_say( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() < 2 || answerS.length() > 64 )
    {
        player.Say( SAY_NETMSG, "Wrong text length." );
        delAuthor( player.Id );
        return;
    }

    uint    len = replics.length();
    Replic@ rep = null;

    for( uint i = 0; i < len; i++ )
    {
        if( replics[ i ].Author != player.Id )
            continue;
        @rep = replics[ i ];
        break;
    }
    if( rep is null )
    {
        player.Say( SAY_NETMSG, "Can't find replic." );
        delAuthor( player.Id );
        return;
    }

    Critter@ cr = GetCritter( rep.Speaker );

    if( cr is null )
    {
        player.Say( SAY_NETMSG, "Can't find critter." );
        delAuthor( player.Id );
        return;
    }

    rep.Buffer += answerS;

    if( answerS[ answerS.length() - 1 ] == '+' )
    {
        rep.Buffer.resize( rep.Buffer.length() - 1 );

        player.ShowScreen( SCREEN_SAY, 0, "answer_gm_say" );
        player.Say( SAY_SAY_TITLE, "Сказать..." );

        return;
    }

    cr.Say( rep.SayType, rep.Buffer );
    player.Say( SAY_NETMSG, "Ok." );

    delAuthor( player.Id );
}

void delAuthor( uint id )
{
    uint len = replics.length();

    for( uint i = 0; i < len; i++ )
    {
        if( replics[ i ].Author != id )
            continue;
        replics.removeAt( i );
        break;
    }
}

void PlayersHP( Critter& player, int param0, int param1, int param2 )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( cr is null )
            continue;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + " BaseMaxHP: " + cr.StatBase[ ST_MAX_LIFE ] + " MaxHP: " + cr.Stat[ ST_MAX_LIFE ] );
    }
}

void dec15hp( Critter& player, int param0, int param1, int param2 )
{
    if( param0 != 0 )
    {
        Critter@ cr = GetCritter( param0 );
        if( !(cr is null) )
        {
            if( cr.StatBase[ ST_MAX_LIFE ] > 15 )
                cr.StatBase[ ST_MAX_LIFE ] -= 15;
            else
                cr.StatBase[ ST_MAX_LIFE ] = 0;
        }
        return;
    }


    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( (cr is null) || cr.StatBase[ ST_MAX_LIFE ] != 15 )
            continue;
        cr.StatBase[ ST_MAX_LIFE ] = 0;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + "  базовые MaxHP сброшены на 0." );
    }
}

void dec75hp( Critter& player, int param0, int param1, int param2 )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( (cr is null) || cr.StatBase[ ST_MAX_LIFE ] != 75 )
            continue;
        cr.StatBase[ ST_MAX_LIFE ] = 0;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + "  базовые MaxHP сброшены на 0." );
    }
}


void sleep( Critter& player, int param0, int param1, int param2 )
{
    Critter@ cr = null;
    if( param0 > 0 )
    {
        @cr = GetCritter( param0 );
        if( cr is null )
            return;
    }
    else
        @cr = player;

    if( cr.IsKnockout() )
    {
        cr.ParamBase[ ST_CURRENT_AP ] = 0;
        if( cr.Param[ ST_CURRENT_HP ] > 0 )
            cr.ToLife();
    }
    else
        cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( param1 == 0 ), 9999, cr.HexX, cr.HexY );
}

void unsafe_sinf( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
	{
		player.ParamBase[ CR_SINF_MODE ] = param0;
		player.RunClientScript( "client_main@_sinf", param0, 0, 0, null, null );
	}
}

void _sinf( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    sinf( player, 0, param0, 0 );
}

void sinf( Critter& player, int param0, int param1, int param2 )
{
    Critter@ cr = null;
    if( param0 > 0 )
    {
        @cr = GetCritter( param0 );
        if( cr is null )
            return;
    }
    else
        @cr = player;

	cr.ParamBase[ CR_SINF_MODE ] = param0;
    cr.RunClientScript( "client_main@_sinf", param1, 0, 0, null, null );
}

uint last_s2a_author = 0;

void unsafe_say2all( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		_say2all( player, param0, param1, param2, param3, param4 );
}

void _say2all( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "|0xFFFF0000 ### |0xFFBB33CC " + param3 + " |0xFFFF0000 ### ";

    uint   acc = player.GetAccess();

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null )
            continue;

        if( crs[ i ].GetAccess() >= acc )
            crs[ i ].Say( SAY_NETMSG, "|0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "|0xFFFF0000 >" + str );
        else
            crs[ i ].Say( SAY_NETMSG, str );
    }

    last_s2a_author = player.Id;
}

void unsafe_ans( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( player.Param[ ST_VAR5 ] > 3 )
        return;
    player.ParamBase[ ST_VAR5 ] += 1;

    Critter@ cr = GetCritter( last_s2a_author );
    if( cr is null )
        return;

    cr.Say( SAY_NETMSG, "s2a-answer |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "(" + player.Id + ")|0xFFFF0000 > |0xFFBB33CC " + param3 );
}

void unsafe_help( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( player.Param[ ST_VAR5 ] > 3 )
        return;
    player.ParamBase[ ST_VAR5 ] += 1;

    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "help |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "(" + player.Id + ")|0xFFFF0000 > |0xFFBB33CC " + param3;

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null or !isGM( crs[ i ] ) )
            continue;
        crs[ i ].Say( SAY_NETMSG, str );
    }

    file f;
    if( f.open( "logs\\help_pleads.txt", "a" ) >= 0 )
    {
        string date = TimeToString( player );
        // string ipstring = GetIpsstring(player, player.Id, 0, 0);
        string type;
        if( player.Param[ QST_GAMEMODE ] == GAME_START )
            type = "Старт";
        else if( player.Param[ QST_GAMEMODE ] == GAME_ADVENTURE )
            type = "Прикл.";
        else if( player.Param[ QST_GAMEMODE ] == GAME_SURVIVAL )
            type = "Выжив.";
        else if( player.Param[ QST_GAMEMODE ] == GAME_ARCADE )
            type = "Аркада";
        else if( player.Param[ QST_GAMEMODE ] == GAME_TEST )
            type = "Тест";
        else
            type = "ошибка";
        f.writeString( date + "\t" + type + "\t" + player.Id  + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + param3 + "\n" );
        f.close();
    }
    else
        Log( "can't open!" );
}

void read_help( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    file f;
    if( f.open( "logs\\help_pleads.txt", "r" ) >= 0 )
    {
        string word = "";
        uint   pos = 0;
        f.setPos( 0 );
        while( !f.isEndOfFile() )
        {
            pos = f.getPos();
            f.readLine( word );
            player.Say( SAY_NETMSG, word );
        }
        f.close();
    }
    else
        Log( "can't open!" );
}

class Poll
{
    uint   Id;
    uint   InitiatorId;
    string Question;
    uint8  AnsNum;
    string[] Answers;
    uint16[] Votes;

    Poll()
    {
        Id = 0;
        InitiatorId = 0;
        AnsNum = 0;
    }

    Poll@ Set( uint id, uint initiatorId, string& question )
    {
        Id = id;
        InitiatorId = initiatorId;
        Question = question;
        return this;
    }
    Poll@ Add( string& answer )
    {
        AnsNum++;
        Answers.insertLast( answer );
        Votes.insertLast( 0 );
        return this;
    }
    void Vote( uint num )
    {
        if( num >= AnsNum )
            return;
        Votes[ num ] += 1;
    }
}

Poll@[] polls;
uint poll_lastId = 0;

void unsafe_poll( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		_poll( player, param0, param1, param2, param3, param4 );
}

void _poll( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( param3 is null || param3.length() < 10 )
        return;

    string@[] @ parts = splitEx( param3, "@" );

    if( parts is null || parts.length() < 2 || parts.length() > 6 || parts[ 0 ] is null || parts[ 1 ] is null )
        return;

    // uint len = polls.length();
    Poll@ poll = Poll().Set( poll_lastId++, player.Id, parts[ 0 ] );

    for( uint i = 1, j = parts.length(); i < j; i++ )
    {
        if( parts[ i ] is null )
            continue;
        poll.Add( parts[ i ] );
    }
    polls.insertLast( @poll );

    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "|0xFFFF0000 # |0xFFBB33CC Началось голосование. |0xFFFF0000 #";

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null )
            continue;

        crs[ i ].Say( SAY_NETMSG, str );
        crs[ i ].ParamBase[ ST_VAR3 ] = poll.Id;
        crs[ i ].ShowScreen( SCREEN_DIALOGBOX, poll.AnsNum, "answer_poll" );
        crs[ i ].Say( SAY_DIALOGBOX_TEXT, poll.Question );
        for( uint k = 0; k < poll.AnsNum; k++ )
        {
            crs[ i ].Say( SAY_DIALOGBOX_BUTTON( k ), poll.Answers[ k ] );
        }
    }

    player.Say( SAY_NETMSG, "Poll Id: " + poll.Id );
}

Poll@ GetPoll( uint8 num )
{
    Poll@ poll = null;
    for( uint i = 0; i < polls.length(); i++ )
    {
        if( polls[ i ] is null or polls[ i ].Id != num )
            continue;
        @poll = polls[ i ];
    }
    return poll;
}

void answer_poll( Critter& cr, uint answerI, string& answerS )
{
    uint  id = cr.Param[ ST_VAR3 ];
    Poll@ poll = GetPoll( uint8( id ) );
    if( poll is null or poll.AnsNum <= answerI )
        return;

    poll.Votes[ answerI ] += 1;

    Critter@ gm = GetCritter( poll.InitiatorId );

    if( @gm != null )
    {
        gm.Say( SAY_NETMSG, "Игрок " + GetPlayerName( cr.Id ) + "(" + cr.Id + ") выбрал вариант " + answerI );
    }
    cr.ParamBase[ ST_VAR3 ] = -1;
}

void poll_check( Critter& player, int param0, int param1, int param2 )
{
    Poll@ poll = GetPoll( uint8( param0 ) );
    if( poll is null )
    {
        player.Say( SAY_NETMSG, "Голосование не найдено." );
        return;
    }

    player.Say( SAY_NETMSG, "Голосование #" + param0 + ": " + poll.Question );
    for( uint i = 0; i < poll.AnsNum; i++ )
    {
        player.Say( SAY_NETMSG, i + ") " + poll.Answers[ i ] + " - " + poll.Votes[ i ] );
    }
}

void poll_end( Critter& player, int param0, int hide, int param2 )
{
    Poll@ poll = GetPoll( uint8( param0 ) );
    if( poll is null )
    {
        player.Say( SAY_NETMSG, "Голосование не найдено." );
        return;
    }

    Critter@[] crs;

    if( hide > 0 )
    {
        crs.resize( 1 );
        @crs[ 0 ] = player;
    }
    else
        GetAllPlayers( crs );

    string str = "Голосование #" + param0 + ": \"" + poll.Question + "\" закончено.";
    string[] str0( poll.AnsNum );

    for( uint i = 0; i < poll.AnsNum; i++ )
    {
        str0[ i ] = i + ") " + poll.Answers[ i ] + " - " + poll.Votes[ i ];
    }

    for( uint j = 0, k = crs.length(); j < k; j++ )
    {
        if( crs[ j ] is null )
            continue;

        crs[ j ].Say( SAY_NETMSG, str );
        for( uint i = 0; i < poll.AnsNum; i++ )
        {
            crs[ j ].Say( SAY_NETMSG, str0[ i ] );
        }
    }

    @polls[ poll.Id ] = null;
}

void unsafe_private( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		_private( player, param0, param1, param2, param3, param4 );
}

void _private( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( param0 < 1 )
        return;
    Critter@ cr = GetCritter( param0 );
    if( cr is null or cr.IsNpc() )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    string str = "|0xFFFF0000 <|0xFFFFFF00 " + ( ( cr.GetAccess() > ACCESS_TESTER ) ? GetPlayerName( player.Id ) : ( ( player.GetAccess() == ACCESS_ADMIN ) ? "admin" : "gm" ) ) + "|0xFFFF0000 > |0xFFCC33AA " + param3;

    cr.Say( SAY_NETMSG, str );
    player.Say( SAY_NETMSG, "Отправлено." );
}

void unsafe_GM_name( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_name( player, param0, param1, param2, param3, param4 );
}

void GM_name( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( param0 < 1 )
        return;
    player.Say( SAY_NETMSG, "Id: " + param0 + " Login: " + GetPlayerName( param0 ) );
}

void name( Critter& cr, int crId, int num, int val )
{
    if( crId < 1 )
        return;
    cr.Say( SAY_NETMSG, "Id: " + crId + " Login: " + GetPlayerName( crId ) );
}

void unsafe_GM_showVal( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_showVal( player, param0, param1, param2, param3, param4 );
}

void GM_showVal( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    showVal( player, param0, param1, param2 );
}

void showVal( Critter& cr, int itemId, int num, int val )
{
    if( itemId < 1 )
        return;

    Item@ item = GetItem( itemId );
    if( item is null )
        return;

    cr.Say( SAY_NETMSG, "ItemId: " + item.Id );
    cr.Say( SAY_NETMSG, "Val0: " + item.Val0 );
    cr.Say( SAY_NETMSG, "Val1: " + item.Val1 );
    cr.Say( SAY_NETMSG, "Val2: " + item.Val2 );
    cr.Say( SAY_NETMSG, "Val3: " + item.Val3 );
    cr.Say( SAY_NETMSG, "Val4: " + item.Val4 );
    cr.Say( SAY_NETMSG, "Val5: " + item.Val5 );
    cr.Say( SAY_NETMSG, "Val6: " + item.Val6 );
    cr.Say( SAY_NETMSG, "Val7: " + item.Val7 );
    cr.Say( SAY_NETMSG, "Val8: " + item.Val8 );
    cr.Say( SAY_NETMSG, "Val9: " + item.Val9 );
}

void give( Critter& player, int crId, int itemId, int p2 )
{
    Critter@ cr = GetCritter( crId );
    if( cr is null )
        return;

    Item@ item = GetItem( itemId );
    if( item is null )
        return;

    uint count = 1;
    if( item.IsStackable() )
    {
        count = item.GetCount();
        if( p2 > 0 && p2 < count )
            count = p2;
    }
    MoveItem( item, count, cr );
}

void unsafe_gmlex( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		_gmlex( player, param0, param1, param2, param3, param4 );
}

void _gmlex( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( param0 < 1 )
        return;
    Critter@ cr = GetCritter( param0 );
    if( cr is null or cr.IsNpc() )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    cr.SetLexems( param3 );
    player.Say( SAY_NETMSG, "Лексема присвоена." );
}

void unsafe_gmitemlex( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		_gmitemlex( player, param0, param1, param2, param3, param4 );
}

void _gmitemlex( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( param0 < 1 )
        return;
    Item@ item = GetItem( param0 );
    if( !valid( item ) )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    item.SetLexems( param3 );
    player.Say( SAY_NETMSG, "Лексема присвоена." );
}

#endif

#ifndef __PLEAD_FUNCTIONS__
#define __PLEAD_FUNCTIONS__
const string[][] pleads = {
	{ "НА СЕРВЕРЕ ЗАПЕРЩЕН СЛЕНГ И НЕИГРОВОЕ ОБЩЕНИЕ", "сленг" },
	{ "НЕ СТРОЙТЕ ИЗ СЕБЯ РЕМБО, ПОМНИТЕ ОБ ИНСТИНКТЕ САМОСОХРАНЕНИЯ", "повергейминг" },
	{ "ПРИДЕРЖИВАЙТЕСЬ СВОЕЙ ИГРОВОЙ РОЛИ", "выход из роли" },
	{ "БЕСПРИЧИННОЕ ЛУТАНИЕ ТРУПОВ ЭТО МАРОДЕРСТВО, ОСТАНОВИТЕСЬ", "мародерство" },
	{ "НЕ СГРЕБАТЕ ЧТО ПОПАЛО БЕЗ РАЗБОРУ, ВСЕ ВЕЩИ ИМЕЮТ СВОИ ИСТОРИИ И СЮЖЕТЫ", "клептомания" },
	{ "ВАШ ПЕРСОНАЖ НЕ МОГ УЗНАТЬ ЭТО ВНУТРИИГРОВЫМ ПУТЁМ, МЕТАГЕЙМ ЗАПРЕЩЁН", "метагейм" },
	{ "ЗАПРЕЩЕНО ВЗАИМОДЕЙСТВИЕ МЕЖДУ СВОИМИ ЖЕ ПЕРСОНАЖАМИ", "мультоводство" }
};
void unsafe_ADVENTURER_PANNEL_CRITTER( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( player.IsPlayer() )
    {
		string[] data = { "unsafe_answer_ADVENTURER_PANNEL_CRITTER", "Выберите предупреждение:" };
		for( int i = 0; i < pleads.length(); i++ )
			data.insertLast( pleads[i][1] );
		player.StatBase[ ST_VAR0 ] = param0;
		DIALOG_MENU( player, data );
    }
}

#define PLEAD_FAILED -1
uint ShowPlead( Critter& cr, uint n )
{
	if( n >= pleads.length() ) { Log( "inconsistent plead!" ); return PLEAD_FAILED; }
	string[] data = { "answer_PLEAD", pleads[n][0], "больше не буду" };
	DIALOG_MENU( cr, data );
	return n;
}

void unsafe_answer_ADVENTURER_PANNEL_CRITTER( Critter& cr, uint answerI, string& answerS )
{
    Critter@ target;
	if( !GetTargetPlayer( cr, target ) ) { cr.Say( SAY_NETMSG, "Игрок не найден." ); return; }
	
	if( SpamBlocked(cr) ) return;
	
	uint plead = ShowPlead( target, answerI );
	
    if( plead != PLEAD_FAILED )
    {
        cr.Say( SAY_NETMSG, "Предупреждение выдано." );
		WarnGMs( cr.Id, target.Id, plead );
		LogWarning( cr.Id, target.Id, plead );
    }
}

void answer_PLEAD( Critter& cr, uint answerI, string& answerS )
{
	cr.Say( SAY_NETMSG, "В случае недопонимания - обращайтесь в дискорде." );
}
#endif

import string GetLocationTimeString( Critter& cr ) from "main";
void unsafe_GM_PANNEL_SELF( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
    {
		string sinf = "set sinf " + ( player.ParamBase[ CR_SINF_MODE ] == 0 ? "ON" : "OFF" );
		
		GameVar@ canPray = GetGlobalVar( GVAR_Pray_Battleground );		
		string arena = ( canPray.GetValue() == 0 ? "включить" : "выключить" ) + " арену";
		string[] data = { "answer_GM_PANNEL_SELF", "ГМ ПАНЕЛЬ",
			"Телепорты", "Склады", "Мобо-спауны", "Монстро-спауны", "Обновить спауны", "Всевиденье", "Музыка", "Дождь", sinf, GetLocationTimeString( player ), arena, "Открыть контейнер №" };
		DIALOG_MENU( player, data );
    }
}

Map@ GetLocationMap( uint location_pid )
{
	return GetLocationMap( location_pid, 0 );
}

Map@ GetLocationMap( uint location_pid, uint map_index )
{
	Location @ loc = GetLocationByPid( location_pid, 0 );
	if( !valid( loc ) ) 
	{
		Log( "There is no Location pid #" + location_pid + "." );
		return null;
	}
	Map @ map = loc.GetMapByIndex( map_index );
	if( !valid( map ) )
		Log( "There is no map # " + map_index + " at location pid #" + location_pid + "." );

	return map;
}

uint[] mob_spawns = { 
	LMVAR_CRITTER_RegularRat,
	LMVAR_CRITTER_Mantis,
	LMVAR_CRITTER_Ant,
	LMVAR_CRITTER_RegularPigRat,
	LMVAR_CRITTER_Molerat,
	LMVAR_CRITTER_MutatedMolerat,
	LMVAR_CRITTER_SmallSilverGecko,
	LMVAR_CRITTER_GoldenGecko,
	LMVAR_CRITTER_WildDog,
	LMVAR_CRITTER_SmallRadscorpion,
	LMVAR_CRITTER_LargeRadscorpion,
	LMVAR_CRITTER_Brahmin,
	LMVAR_CRITTER_SporePlant
};
string[] mob_names = { "крысы", "мантисы", "муравьи", "свинокрыс", "кротокрысы", "кроты гризли", "гекко", "зол гекко", "волки", "м.скорп", "б.скорп", "брамины", "растение" };

uint[] beast_spawns = { 
	LMVAR_CRITTER_Alien,
	LMVAR_CRITTER_SmDeathclaw,
	LMVAR_CRITTER_Deathclaw,
	LMVAR_CRITTER_ToughDeathclaw,
	LMVAR_CRITTER_FireGecko,
	LMVAR_CRITTER_Centaur,
	LMVAR_CRITTER_Floater,
	LMVAR_CRITTER_MirelurkWeak,
	LMVAR_CRITTER_RipperMale,
	LMVAR_CRITTER_RipperFemale,
	LMVAR_CRITTER_BanditMale,
	LMVAR_CRITTER_BanditFemale
};
string[] beast_names  = { "чужой", "м.коготь", "б.коготь", "сер.коготь", "огнегекко", "кентавр", "летатель", "болотник", "потрошитель", "ж.потрошитель", "бандит", "бандитка" };

uint[] unused_spawns = {
	LMVAR_CRITTER_MauraderMale,
	LMVAR_CRITTER_RaiderMale,
	LMVAR_CRITTER_RaiderFemale,
	LMVAR_CRITTER_MaleSlaver,
	LMVAR_CRITTER_MaleSlaver2,
	LMVAR_CRITTER_ToughMaleThug,
	LMVAR_CRITTER_ToughFemaleThug,
	LMVAR_CRITTER_MaleTrapper,
	LMVAR_CRITTER_GreenGhoul,
	LMVAR_CRITTER_WhiteGhoul,
	LMVAR_CRITTER_Supermutant 
};

string[] music_names = { 
	"[ВЫКЛЮЧИТЬ]", 
	"01 - No Fate No Fear.ogg", 
	"02 - Into The Dust.ogg", 
	"03 - A Way To Anywhere.ogg",
	"04 - 12H. Dusk.ogg",
	"05 - Anesthetic.ogg",
	"06 - Cluster Decay.ogg",
	"07 - Echelon.ogg", 
	"08 - Blue Grass.ogg",
	"09 - D.S.Brudge.ogg",
	"10 - Dystopian Dreams.ogg",
	"11 - Face To Face.ogg",
	"12 - Kill Klesk.ogg",
	"13 - Killadrone.ogg",
	"14 - Organic Shadows.ogg",
	"15 - Phagocyte Disaster.ogg",
	"16 - Stranglet.ogg",
	"17 - Trinity.ogg"
};

import void AddCritter( Map& map ) from "local_population";

uint RemoveOverPop( Map& map, uint start_pid, uint count )
{
	Critter@[] critters;
	for( uint i = 0; i < mob_spawns.length(); i++ )
	{
		map.GetCritters( start_pid + i, FIND_ALL | FIND_ONLY_NPC, critters );
		int over_pop = critters.length() - GetLocalVar( mob_spawns[i], map.Id ).GetValue();
		for( uint j = 0; j < critters.length(); j++ )
			if( critters[j].IsDead() ) {
				DeleteNpc( critters[j] );
				over_pop--;
			}
		for( int j = 0; j < over_pop; j++ )
			if( valid( critters[j] ) ) {
				DeleteNpc( critters[j] );
			}
		critters.resize( 0 );
	}
	return start_pid + count;
}

void answer_GM_PANNEL_SELF( Critter& player, uint answerI, string& answerS )
{
	int answerN = 0;
	Map @ map = player.GetMap();	
    if( answerI == answerN++ ) //Телепорты
    {
		ShowTeleports( player );
    }

	if( answerI == answerN++ ) //Склады:
	{
		StoreMenu( player );
	}
	
	if( answerI == answerN++ ) //Мобо-спауны
    {
		int len = mob_names.length();
		if( mob_spawns.length() != len ) {
			Log( "Кто-то испоганил перечень мобо-спавнеров." );
			len = 0;
		}
		
		string[] data = { "answer_GM_PANNEL_SELF_MAPSPAWN1", "Спавнеры мобов текущей карты:", "[НАЗАД]", "FAST SET ALL TO #" };
		
		for( int i = 0; i < len; i++ )
		{
			uint rate = GetLocalVar( mob_spawns[i], map.Id ).GetValue();
			uint spawns = map.CountEntire( 200 + i );
			data.insertLast( "[" + spawns + "x" + rate + "] " + mob_names[i] );
		}
		
		DIALOG_MENU( player, data );
    }
	
	if( answerI == answerN++ ) //Монстро-спауны
    {
		int len = beast_names.length();
		if( beast_spawns.length() != len ) {
			Log( "Кто-то испоганил перечень монстро-спавнеров." );
			len = 0;
		}
		
		string[] data = { "answer_GM_PANNEL_SELF_MAPSPAWN2", "Спавнеры монстров текущей карты:", "[НАЗАД]", "FAST SET ALL TO #" };
		
		for( int i = 0; i < len; i++ )
		{
			uint rate = GetLocalVar( beast_spawns[i], map.Id ).GetValue();
			uint spawns = map.CountEntire( 213 + i );
			data.insertLast( "[" + spawns + "x" + rate + "] " + beast_names[i] );
		}
		
		DIALOG_MENU( player, data );
	}
	
	if( answerI == answerN++ ) //Обновление спавнов
    {
		//Убирает мёртвых или лишних мобов:
		uint start_pid = 310;
		start_pid = RemoveOverPop( map, start_pid, mob_spawns.length() );
		start_pid = RemoveOverPop( map, start_pid, beast_spawns.length() );
		start_pid = RemoveOverPop( map, start_pid, unused_spawns.length() );
		
		AddCritter( map ); //Обновляет спавны.
		unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
	}

	if( answerI == answerN++ ) //Всевиденье
	{
		int vision = player.ParamBase[ QST_VISION ];
		bool wasOn = vision != 0;
		player.ParamBase[ QST_VISION ] = ( wasOn ? 0 : 200 );
		player.Say( SAY_NETMSG, "Всевидиние в" + ( wasOn ? "ы" : "" ) + "ключено." );
		
		unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
	}

	if( answerI == answerN++ ) //Музыка
	{
		string[] data = { "answer_GM_PANNEL_MUSIC", "Выберите трек:" };
		for( int i = 0; i < music_names.length(); i++ )
			data.insertLast( music_names[i] );
		DIALOG_MENU( player, data );

	}
	
	if( answerI == answerN++ ) //Дождь
	{
		string[] data = { "answer_GM_PANNEL_HEX_EFFECTS", "Выберите силу дождя:" };
		for( int i = 0; i < 6; i++ )
			data.insertLast( "[" + ( i * 50 ) + " / " + 250 + "]" );
		DIALOG_MENU( player, data );
	}
	
	if( answerI == answerN++ ) //sinf
	{
		player.ParamBase[ CR_SINF_MODE ] = player.ParamBase[ CR_SINF_MODE ] == 0 ? 119 : 0;
		player.RunClientScript( "client_main@_sinf", player.ParamBase[ CR_SINF_MODE ], 0, 0, null, null );
		unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
	}
	
	if( answerI == answerN++ ) //Время
	{
		// player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANEL_SET_DELTA_TIME" );
		// player.Say( SAY_SAY_TITLE, "Формат ввода: DD.MM.YYYY" );
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANEL_SET_DELTA_TIME" );
		player.Say( SAY_SAY_TITLE, "Формат ввода: YYYY" );
		player.Say( SAY_NETMSG, GetLocationTimeString( player ) );
	}
	
	if( answerI == answerN++ ) //Вкл-выкл арену в раю
	{
		GameVar@ canPray = GetGlobalVar( GVAR_Pray_Battleground );
		canPray.opAssign( CLAMP( 1 - canPray.GetValue(), 0, 1 ) );
		player.Say( SAY_NETMSG, "Арена в чистилище в" + ( canPray.GetValue() == 0 ? "ы" : "" ) + "ключена." );
	}
	if( answerI == answerN++ ) //Открыть контейнер №:
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_OPEN_CONTAINER" );
		player.Say( SAY_SAY_TITLE, "Введите ID контейнера:" );
	}
}

void ask_OPEN_CONTAINER( Critter& player, uint answerI, string& answerS )
{
	int id = 0;
	if( !StrToInt( answerS, id ) || id < 1 )
	{
		player.Say( SAY_NETMSG, "Неверное число!" );
		return;
	}
	
	Item@ cont = GetItem( id );
	if( !valid(cont) )
	{
		player.Say( SAY_NETMSG, "Контейнер не найден!" );
		return;
	}
	
	player.ParamBase[ ST_LAST_CONT_ID ] = cont.Id;
	player.ShowContainer( null, cont, TRANSFER_FAR_CONT );
}

bool outOfBounds( int value, int min, int max )
{
	return value < min || value > max;
}

import string CurrentDateTime( uint gameTime, int delta_time, int style ) from "time";
void ask_GM_PANEL_SET_DELTA_TIME( Critter& player, uint answerI, string& answerS )
{
	//Проверка ввода:
	// string sample = "DD.MM.YYYY";
	string sample = "YYYY";
	if( answerS.length() != sample.length() )
	{
		player.Say( SAY_NETMSG, "Введеная дата не соответвует шаблону: " + sample + " !" );
		return;
	}
	
	/*
	player.Say( SAY_NETMSG, "'" + answerS + "'" );
	
    uint16 year = 0;
    uint16 month = 0;
    uint16 day = 0;
    uint16 dayOfWeek = 0;
    uint16 hour = 0;
    uint16 minute = 0;
    uint16 second = 0;
    GetGameTime( __FullSecond, year, month, day, dayOfWeek, hour, minute, second );

    int year2 = 0;
    int month2 = 0;
    int day2 = 0;
	
    string@[] @ parts = splitEx( answerS, "." );
	if( parts.length() != 3 || !StrToInt( parts[2], year2 ) || !StrToInt( parts[1], month2 ) || !StrToInt( parts[0], day2 ) )
	{
		player.Say( SAY_NETMSG, "Введеная дата не соответвует шаблону: " + sample + " !" );
		return;
	}
	
	if( outOfBounds( year2, 2200, 2300 ) || outOfBounds( month2, 0, 11 ) || outOfBounds( day2, 1, 31 ) )
	{
		player.Say( SAY_NETMSG, "Введеная дата [" + year2 + "." + month2 + "." + day2 + "] не соответвует шаблону: " + sample + " !" );
		return;
	}
	
	player.Say( SAY_NETMSG, year2 + "." + month2 + "." + day2 );
	
	uint new_time = GetFullSecond( year2, month2, day2, hour, minute, second );
	*/

	int year2 = 0;
	if( !StrToInt( answerS, year2 ) )
	{
		player.Say( SAY_NETMSG, "Введеная дата не соответвует шаблону: " + sample + " !" );
		return;
	}
	
	//Проверка данных карты:
	Map@ map = player.GetMap();
	if(!valid(map)) { Log("[ Error handler exception ]"); return; }
	
	GameVar@ DELTA_YEARS = GetLocalVar( LMVAR_DELTA_YEARS, map.Id );

    uint16 year = 0;
    uint16 month = 0;
    uint16 day = 0;
    uint16 dayOfWeek = 0;
    uint16 hour = 0;
    uint16 minute = 0;
    uint16 second = 0;
    GetGameTime( __FullSecond, year, month, day, dayOfWeek, hour, minute, second );

	int new_delta = year2 - year;

	DELTA_YEARS.opAssign( new_delta );	
	
	Location@ loc = map.GetLocation();
	Map@[] maps;
	loc.GetMaps(maps);
	for( uint i = 0; i < maps.length(); i++ )
	{
		DELTA_YEARS = GetLocalVar( LMVAR_DELTA_YEARS, maps[i].Id );
		DELTA_YEARS.opAssign( new_delta );
	}
	player.Say( SAY_NETMSG, "Новая дельта: " + new_delta + " лет.\nИзменена на всех " + maps.length() + " картах локации." );
	//player.Say( SAY_NETMSG, "'" + __FullSecond + "' -> '" + new_time + "' = " + new_delta + " : " + DELTA_DAYS.GetValue() );
	
	//Вывод данных:
	// player.Say( SAY_NETMSG, "\nИРЛ:\n" + CurrentDateTime( __FullSecond, 0, 8 ) 
						  // + "\nБыло:\n" + CurrentDateTime( __FullSecond, delta, 8 )
						  // + "\nСтало:\n" + CurrentDateTime( new_time, 0, 8 )
						  // + "\nДельта:\n" + CurrentDateTime( __FullSecond, new_delta, 8 ) );

	//Повтор меню:
	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANEL_SET_DELTA_TIME" );
	player.Say( SAY_SAY_TITLE, "Формат ввода: YYYY" );
}

void answer_GM_PANNEL_SELF_MAPSPAWN1( Critter& player, uint answerI, string& answerS )
{
	if( answerI == 0 ) {
		unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
		return;
	}
	
	if( answerI == 1 ) {
		player.ParamBase[ ST_VAR0 ] = 1; //mobs
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANEL_SET_ALL_SPAWNS" );
		player.Say( SAY_SAY_TITLE, "Количество:" );
		return;
	}
		
	player.ParamBase[ ST_VAR0 ] = mob_spawns[ answerI - 2];
	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_MAPSPAWN" );
	player.Say( SAY_SAY_TITLE, "Количество:" );
}

void answer_GM_PANNEL_SELF_MAPSPAWN2( Critter& player, uint answerI, string& answerS )
{
	if( answerI == 0 ) {
		unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
		return;
	}

	if( answerI == 1 ) {
		player.ParamBase[ ST_VAR0 ] = 2; //beasts
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANEL_SET_ALL_SPAWNS" );
		player.Say( SAY_SAY_TITLE, "Количество:" );
		return;
	}
	
	player.ParamBase[ ST_VAR0 ] = beast_spawns[ answerI - 2];
	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_MAPSPAWN" );
	player.Say( SAY_SAY_TITLE, "Количество:" );
}

void ask_GM_PANEL_SET_ALL_SPAWNS( Critter& player, uint answerI, string& answerS )
{
	int number = -1;
    if( answerS.length() > 0 )
        StrToInt( answerS, number );
	if( number < 0 ) { player.Say( SAY_NETMSG, "Введите целочиcленное беззнаковое!" ); return; }

	Map@ map = player.GetMap();
	if(!valid(map)) { Log("[ Error handler exception ]"); return; }
	
	int type = player.ParamBase[ ST_VAR0 ];// 0 - all, 1 - mob, 2 - beast
	if( type == 0 || type == 1 )
	{
		for( uint i = 0; i < mob_spawns.length(); i++ )
			GetLocalVar( mob_spawns[i], map.Id ).opAssign( number );

		if( type == 1 ) {
			answer_GM_PANNEL_SELF( player, 3, "" );  //WARNING, ЖЁСТКАЯ ПРИВЯЗКА К НОМЕРУ ПУНКТА В МЕНЮ!
			return;
		}
	}
	if( type == 0 || type == 2 )
	{
		for( uint i = 0; i < beast_spawns.length(); i++ )
			GetLocalVar( beast_spawns[i], map.Id ).opAssign( number );

		if( type == 2 ) {
			answer_GM_PANNEL_SELF( player, 4, "" );  //WARNING, ЖЁСТКАЯ ПРИВЯЗКА К НОМЕРУ ПУНКТА В МЕНЮ!
			return;
		}
		
	}
	
	unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
}

void ask_GM_PANNEL_SELF_MAPSPAWN( Critter& player, uint answerI, string& answerS )
{
	int number = -1;
    if( answerS.length() > 0 )
        StrToInt( answerS, number );
	if( number < 0 ) { player.Say( SAY_NETMSG, "Введите целочиcленное беззнаковое!" ); return; }

	Map@ map = player.GetMap();
	if(!valid(map)) { Log("[ Error handler exception ]"); return; }
	
	int varName = player.ParamBase[ ST_VAR0 ];
	GetLocalVar( varName, map.Id ).opAssign( number );

	if( mob_spawns.find( varName ) > -1 )
		answer_GM_PANNEL_SELF( player, 3, "" ); //WARNING, ЖЁСТКАЯ ПРИВЯЗКА К НОМЕРУ ПУНКТА В МЕНЮ!

	if( beast_spawns.find( varName ) > -1 )
		answer_GM_PANNEL_SELF( player, 4, "" ); //WARNING, ЖЁСТКАЯ ПРИВЯЗКА К НОМЕРУ ПУНКТА В МЕНЮ!
}

void answer_GM_PANNEL_SELF_CHARLIST( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ TotalPlayers = GetGlobalVar( GVAR_total_players );       // общее число персонажей
        for( uint i = 1; i <= TotalPlayers; i++ )
        {
            GameVar@ request = GetLocalVar( LVAR_requestStatus, i );
            GameVar@ activation = GetLocalVar( LVAR_activationStatus, i );
            if( activation.GetValue() > request.GetValue() )
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 6, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 6, i, word, null );
                        }
                    }
                    f.close();
                }
            }
            else if( activation.GetValue() == -1 )
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 7, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 7, i, word, null );
                        }
                    }
                    f.close();
                }
            }
            else
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 5, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 5, i, word, null );
                        }
                    }
                    f.close();
                }
            }
        }
        player.Say( SAY_NETMSG, "Чарлисты записаны." );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_aprove" );
        player.Say( SAY_SAY_TITLE, "Ид на одобрение" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_disaprove" );
        player.Say( SAY_SAY_TITLE, "Ид на отказ" );
    }
    if( answerI == 3 )
    {
        player.Say( SAY_NETMSG, "в разработке." );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_redact" );
        player.Say( SAY_SAY_TITLE, "Ид на редактирование" );
    }
    if( answerI == 5 )
    {
        unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void ask_GM_PANNEL_SELF_CHARLIST_redact( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.ParamBase[ ST_VAR1 ] = number;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        if( activation.GetValue() > request.GetValue() )
            player.Say( SAY_NETMSG, "Ранее был одобрен." );
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже было отказан." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 3, "answer_GM_PANNEL_SELF_CHARLIST_redact" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите действие с чарсетом номер " + request.GetValue() + " на персонажа " + GetPlayerName( number ) + "  " + number );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Считать чарсет" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Записать чарсет" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Перейти к одобрению" );
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_redact( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
		file f;
		if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "r" ) >= 0 )
		{
			Item@[] items;
			player.GetItems( SLOT_INV, items );
			player.GetItems( SLOT_HAND1, items );
			player.GetItems( SLOT_HAND2, items );
			DeleteItems( items );			

			Item@ item;		
			string text = "";
			uint   pos = 0;
			uint   line = 0;
			int    number = 0;
			int    count = 0;	
			bool   isCount = true;
			f.setPos( 0 );
			while( !f.isEndOfFile() )
			{
				line ++;
				f.readLine( text );
				text.resize( text.length() - 1 );
				StrToInt( text, number );
				if( line == 2 )
				{
					if( text == "Человек" ) player.ChangeCrType( 69 );
					else if( text == "Супермутант" ) player.ChangeCrType( 21 );
					else if( text == "Гуль" ) player.ChangeCrType( 28 );
				}
				else if( line >= 6 && line <= 12)
				{
					player.ParamBase[ line - 6] = number;
				}
				else if( line >= 14 && line <= 31 )
				{
					player.ParamBase[ line + 186 ] = number;
				}
				else if( line >= 34 )
				{
					Log("line="+line+" , num="+number);				
					if( number == 12345 ) break;
					if( isCount )
						{
						count = number;
						isCount = false;
						}
					else
					{
						@ item = player.AddItem( number, count );
						if( item.AmmoCount != 0 ) item.AmmoCount = 0;
						isCount = true;
					}
				}
			}
			f.close();
			player.Say( SAY_NETMSG, "Чарсет скачан." );
		}
		else return;
    }
    if( answerI == 1 )
    {
        string date = TimeToString( player );
        string race = "";
        if( player.ParamBase[ ST_BODY_TYPE ] == BT_GHOUL )
            race = "Гуль";
        else if( player.ParamBase[ ST_BODY_TYPE ] == BT_SUPER_MUTANT )
            race = "Супермутант";
        else
            race = "Человек";
        string   pass = "";
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, player.ParamBase[ ST_VAR1 ] );
        if( citizenship.GetValue() == 0 )
            pass = "чужак";
        else if( citizenship.GetValue() == 11 )
            pass = "гость";
        else if( citizenship.GetValue() == 12 )
            pass = "гражданин";
		GameVar@ request = GetLocalVar( LVAR_requestStatus, player.ParamBase[ ST_VAR1 ] );
        file f;
        if( f.open( "adventurers\\" + player.Id + ".txt", "w" ) >= 0 )
        {
            f.writeString( request.GetValue() + "\n" +
                           race + "  -  " + pass + "\n" +
                           date + "\n" +
                           GetPlayerName( player.Id ) + "\n" +
                           "\n" +
                           player.ParamBase[ 0 ] + "\n" +
                           player.ParamBase[ 1 ] + "\n" +
                           player.ParamBase[ 2 ] + "\n" +
                           player.ParamBase[ 3 ] + "\n" +
                           player.ParamBase[ 4 ] + "\n" +
                           player.ParamBase[ 5 ] + "\n" +
                           player.ParamBase[ 6 ] + "\n" + "\n" +
                           player.ParamBase[ 200 ] + "\n" +
                           player.ParamBase[ 201 ] + "\n" +
                           player.ParamBase[ 202 ] + "\n" +
                           player.ParamBase[ 203 ] + "\n" +
                           player.ParamBase[ 204 ] + "\n" +
                           player.ParamBase[ 205 ] + "\n" +
                           player.ParamBase[ 206 ] + "\n" +
                           player.ParamBase[ 207 ] + "\n" +
                           player.ParamBase[ 208 ] + "\n" +
                           player.ParamBase[ 209 ] + "\n" +
                           player.ParamBase[ 210 ] + "\n" +
                           player.ParamBase[ 211 ] + "\n" +
                           player.ParamBase[ 212 ] + "\n" +
                           player.ParamBase[ 213 ] + "\n" +
                           player.ParamBase[ 214 ] + "\n" +
                           player.ParamBase[ 215 ] + "\n" +
                           player.ParamBase[ 216 ] + "\n" +
                           player.ParamBase[ 217 ] + "\n" + "\n" + "Инвентарь" + "\n" );

            Item@[] items;
            player.GetItems( SLOT_ARMOR, items );
            player.GetItems( SLOT_HAND1, items );
            player.GetItems( SLOT_HAND2, items );
            player.GetItems( SLOT_INV, items );
            for( uint i = 0; i < items.length(); i++ )
            {
                f.writeString( items[ i ].GetCount() + "\n" );
                f.writeString( items[ i ].GetProtoId() + "\n" );
            }
			f.writeString( 12345 + "\n" );
            f.close();
			player.Say( SAY_NETMSG, "Чарсет записан." );		
        }
	}
    if( answerI == 2 )
    {
        uint number = player.ParamBase[ ST_VAR1 ];
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        string   pass = "";
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, number );
        if( citizenship.GetValue() == 0 )
            pass = "чужак";
        else if( citizenship.GetValue() == 11 )
            pass = "гость";
        else if( citizenship.GetValue() == 12 )
            pass = "гражданин";
        if( activation.GetValue() > request.GetValue() )
        {
            player.Say( SAY_NETMSG, "Уже активирован." );
            return;
        }
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже отказанно." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_SELF_CHARLIST_aprove" );
        player.Say( SAY_DIALOGBOX_TEXT, "Подтвердите запрос номер " + request.GetValue() + " на активацию чарлиста " + GetPlayerName( number ) + "  " + number + ", выбран пропуск = " + pass );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Подтверждаю" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "+ чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "+ гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "+ гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "+ выживалец" );	
	}
}


void ask_GM_PANNEL_SELF_CHARLIST_disaprove( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.ParamBase[ ST_VAR1 ] = number;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        if( activation.GetValue() > request.GetValue() )
            player.Say( SAY_NETMSG, "Ранее был одобрен." );
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже было отказан." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 1, "answer_GM_PANNEL_SELF_CHARLIST_disaprove" );
        player.Say( SAY_DIALOGBOX_TEXT, "Подтвердите отказ запроса номер " + request.GetValue() + " на чарлиста " + GetPlayerName( number ) + "  " + number );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Отказ подтверждаю" );
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_disaprove( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, player.ParamBase[ ST_VAR1 ] );
        activation.opAssign( -1 );
        player.Say( SAY_NETMSG, "Чарсету персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " отказанно в активации." );
    }
}

void ask_GM_PANNEL_SELF_CHARLIST_aprove( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.ParamBase[ ST_VAR1 ] = number;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        string   pass = "";
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, player.Id );
        if( citizenship.GetValue() == 0 )
            pass = "чужак";
        else if( citizenship.GetValue() == 11 )
            pass = "гость";
        else if( citizenship.GetValue() == 12 )
            pass = "гражданин";
        if( activation.GetValue() > request.GetValue() )
        {
            player.Say( SAY_NETMSG, "Уже активирован." );
            return;
        }
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже отказанно." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_SELF_CHARLIST_aprove" );
        player.Say( SAY_DIALOGBOX_TEXT, "Подтвердите запрос номер " + request.GetValue() + " на активацию чарлиста " + GetPlayerName( number ) + "  " + number + ", выбран пропуск = " + pass );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Подтверждаю" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "+ чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "+ гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "+ гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "+ выживалец" );
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_aprove( Critter& player, uint answerI, string& answerS )
{
    GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, player.ParamBase[ ST_VAR1 ] );
    GameVar@ activation = GetLocalVar( LVAR_activationStatus, player.ParamBase[ ST_VAR1 ] );
    GameVar@ request = GetLocalVar( LVAR_requestStatus, player.ParamBase[ ST_VAR1 ] );
    if( citizenship.GetValue() != 0 && citizenship.GetValue() != 11 && citizenship.GetValue() != 12 )
    {
        player.Say( SAY_NETMSG, "У персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " уже есть игровой пропуск в город, проверьте ид." );
        return;
    }
    else if( answerI == 0 )
    {
        activation.opAssign( request.GetValue() + 1 );
        player.Say( SAY_NETMSG, "Чарсет персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " одобрен." );
        Log_GM( player, player.ParamBase[ ST_VAR1 ], GM_ACTIVATION, 0, citizenship.GetValue(), 0 );
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
            f.close();
        }
        ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    else if( answerI == 1 )
    {
        activation.opAssign( request.GetValue() + 1 );
        citizenship.opAssign( 0 );
        player.Say( SAY_NETMSG, "Чарсет персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " одобрен." );
        Log_GM( player, player.ParamBase[ ST_VAR1 ], GM_ACTIVATION, 1, 0, 0 );
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
            f.close();
        }
        ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    else if( answerI == 2 )
    {
        activation.opAssign( request.GetValue() + 1 );
        citizenship.opAssign( 11 );
        player.Say( SAY_NETMSG, "Чарсет персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " одобрен." );
        Log_GM( player, player.ParamBase[ ST_VAR1 ], GM_ACTIVATION, 2, 0, 0 );
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
            f.close();
        }
        ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    else if( answerI == 3 )
    {
        activation.opAssign( request.GetValue() + 1 );
        citizenship.opAssign( 12 );
        player.Say( SAY_NETMSG, "Чарсет персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " одобрен." );
        Log_GM( player, player.ParamBase[ ST_VAR1 ], GM_ACTIVATION, 3, 0, 0 );
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
            f.close();
        }
        ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    else if( answerI == 4 )
    {
        activation.opAssign( request.GetValue() + 1 );
        citizenship.opAssign( 13 );
        player.Say( SAY_NETMSG, "Чарсет персонажа " + GetPlayerName( player.ParamBase[ ST_VAR1 ] ) + " одобрен, но только для режима выживания." );
        Log_GM( player, player.ParamBase[ ST_VAR1 ], GM_ACTIVATION, 4, 0, 0 );
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
            f.close();
        }
        ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
}

void unsafe_CharsetComment( Critter& player, int skill, int p1, int p2, string@ message, int[] @ p4 )
{
    if( message.length() != 0 )
    {
        file f;
        if( f.open( "adventurers\\" + player.ParamBase[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "-------------------------------------------------------- \n" + message + "\n" + "\n" );
            f.close();
        }
    }
}

void answer_GM_PANNEL_SELF_ID( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 старт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 приключенец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 выживание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 аркада" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 тест" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 13, "answer_GM_PANNEL_SELF_ID_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "4 - богатый гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "10 - изгой" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_CHARLIST" );
        player.Say( SAY_SAY_TITLE, "Введите Ид" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_INVENTORY" );
        player.Say( SAY_SAY_TITLE, "Введите Ид" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан по Ид" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_UNBAN" );
        player.Say( SAY_SAY_TITLE, "РазБан по Ид" );
    }
    if( answerI == 6 )
    {
        unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void ask_GM_PANNEL_SELF_ID_BAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.ParamBase[ ST_VAR1 ] = number;

        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_BAN_TIME" );
        player.Say( SAY_SAY_TITLE, "на Часов" );
    }
}

void ask_GM_PANNEL_SELF_ID_BAN_TIME( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int crId = player.ParamBase[ ST_VAR1 ];
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, crId, number, 0 );
        if( valid( GetCritter( crId ) ) )
            KickId( player, crId, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( crId ) + "(" + crId + ")" + " заблокирован на " + number + " часов" );
    }
}

void ask_GM_PANNEL_SELF_ID_UNBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        UnbanId( player, number, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( number ) + "(" + number + ")" + " разблокирован" );
    }
}

void ask_GM_PANNEL_SELF_ID_INVENTORY( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
        {
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
            return;
        }
		player.ParamBase[ ST_LAST_CONT_ID ] = 0;
        player.ShowContainer( ( GetCritter( number ) ), null, TRANSFER_FAR_CRIT );
    }
}

void ask_GM_PANNEL_SELF_ID_CHARLIST( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        file f;
        if( f.open( "adventurers\\" + number + ".txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    player.RunClientScript( "client_main@loger", 0, 5, number, word, null );
                }
                else
                {
                    f.readLine( word );
                    player.RunClientScript( "client_main@loger", 1, 5, number, word, null );
                }
            }
            player.Say( SAY_NETMSG, "чарлист игрока " + GetPlayerName( number ) + "  " + number + " записан" );
            f.close();
        }
        else
            Log( "can't open!" );
    }
}

void answer_GM_PANNEL_SELF_ID_MODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ParamBase[ ST_VAR1 ] = 0;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - старт фракц" );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = 1;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - приключенец" );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ ST_VAR1 ] = 2;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - выживание" );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = 3;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - аркада" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = 4;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - тест" );
    }
}

void ask_GM_PANNEL_SELF_ID_MODES( Critter& player, uint answerI, string& answerS )
{
    int mode = player.ParamBase[ ST_VAR1 ];
    if( answerS.length() > 0 )
    {
        int      number = 0;
        StrToInt( answerS, number );
        Critter@ target = GetCritter( number );
        if( !valid( target ) )
        {
            player.Say( SAY_NETMSG, "персонажа " + number + " нет онлайн " );
            return;
        }
        target.ParamBase[ QST_GAMEMODE ] = mode;
        player.Say( SAY_NETMSG, "вы изменили игровой режим игрока " + GetPlayerName( player.Id ) + " с номером " + number + " на " + mode );
        Log_factions( player, number, 0, mode, null, null );

        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 старт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 приключенец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 выживание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 аркада" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 тест" );
    }
}

void answer_GM_PANNEL_SELF_ID_FACTIONS( Critter& player, uint answerI, string& answerS )
{

    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_FACTIONS" );
    if( answerI == 0 )
    {
        player.ParamBase[ ST_VAR1 ] = 0;
        player.Say( SAY_SAY_TITLE, "Ид - убрать фракции" );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = 1;
        player.Say( SAY_SAY_TITLE, "Ид - в администрацию" );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ ST_VAR1 ] = 2;
        player.Say( SAY_SAY_TITLE, "Ид - в полицию" );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = 3;
        player.Say( SAY_SAY_TITLE, "Ид - в мафию" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = 4;
        player.Say( SAY_SAY_TITLE, "Ид - в мутанты" );
    }
    if( answerI == 5 )
    {
        player.ParamBase[ ST_VAR1 ] = 5;
        player.Say( SAY_SAY_TITLE, "Ид - в форт" );
    }
    if( answerI == 6 )
    {
        player.ParamBase[ ST_VAR1 ] = 6;
        player.Say( SAY_SAY_TITLE, "Ид - в рейдеры" );
    }
    if( answerI == 7 )
    {
        player.ParamBase[ ST_VAR1 ] = 10;
        player.Say( SAY_SAY_TITLE, "Ид - чужак" );
    }
    if( answerI == 8 )
    {
        player.ParamBase[ ST_VAR1 ] = 11;
        player.Say( SAY_SAY_TITLE, "Ид - врем.гость" );
    }
    if( answerI == 9 )
    {
        player.ParamBase[ ST_VAR1 ] = 12;
        player.Say( SAY_SAY_TITLE, "Ид - гость" );
    }
    if( answerI == 10 )
    {
        player.ParamBase[ ST_VAR1 ] = 13;
        player.Say( SAY_SAY_TITLE, "Ид - гражданин" );
    }
    if( answerI == 11 )
    {
        player.ParamBase[ ST_VAR1 ] = 14;
        player.Say( SAY_SAY_TITLE, "Ид - богатый" );
    }
    if( answerI == 12 )
    {
        player.ParamBase[ ST_VAR1 ] = 21;
        player.Say( SAY_SAY_TITLE, "Ид - изгой" );
    }
}

void ask_GM_PANNEL_SELF_ID_FACTIONS( Critter& player, uint answerI, string& answerS )
{
    int mode = player.ParamBase[ ST_VAR1 ];
    if( answerS.length() > 0 )
    {
        int      number = 0;
        StrToInt( answerS, number );
        Critter@ target = GetCritter( number );
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, number );
        GameVar@ faction = GetLocalVar( LVAR_faction, number );
        string   name = GetPlayerName( number );
        if( mode < 10 )
        {
            faction.opAssign( mode );
            player.Say( SAY_NETMSG, "вы изменили фракцию игрока " + name + " с номером " + number + " на " + mode );
            Log_factions( player, number, 2, mode, null, null );
        }
        else
        {
            citizenship.opAssign( mode - 10 );
            player.Say( SAY_NETMSG, "вы изменили пропуск игрока " + name + " с номером " + number + " на " + mode );
            Log_factions( player, number, 1, mode, null, null );
        }

        player.ShowScreen( SCREEN_DIALOGBOX, 13, "answer_GM_PANNEL_SELF_ID_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "4 - богатый гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "10 - изгой" );
    }
}

void answer_GM_PANNEL_SELF_LOG( Critter& cr, uint answerI, string& answerS )
{
    if( !valid( cr ) )
        return;
    if( answerI == 0 )
    {
        file f;
        if( f.open( "logs\\help_pleads.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 0, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 0, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 1 )
    {
        file f;
        if( f.open( "logs\\warnings.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 1, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 1, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 2 )
    {
        file f;
        if( f.open( "logs\\killings.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 2, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 2, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 3 )
    {
        file f;
        if( f.open( "logs\\factions.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 3, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 3, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 4 )
    {
        file f;
        if( f.open( "save\\bans\\qbans.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 4, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 4, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 5 )
    {
        file f;
        if( f.open( "save\\bans\\crims.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 8, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 8, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 9 && isGM( cr ) )
    {
        cr.ShowScreen( SCREEN_DIALOGBOX, 13, "answer_GM_PANNEL_SELF_LOG_CLEAN" );
        cr.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - очистка help" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - очистка warn" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - очистка kill" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - очистка factions" );
    }
    if( answerI == 10 )
    {
        unsafe_GM_PANNEL_SELF( cr, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_LOG_CLEAN( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        file f;
        if( f.open( "logs\\help_pleads.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 1 )
    {
        file f;
        if( f.open( "logs\\warnings.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 2 )
    {
        file f;
        if( f.open( "logs\\killings.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 3 )
    {
        file f;
        if( f.open( "logs\\factions.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
}

void answer_GM_PANNEL_SELF_MYMODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, player.Id, 0, 0, null, null );
    }
    if( answerI == 1 )
    {
        if( player.ModeBase[ MODE_INVULNERABLE ] == 0 )
            player.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            player.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
    if( answerI == 2 )
    {
        if( player.ParamBase[ QST_VISION ] == 0 /*&& player.ParamBase[ MODE_NO_PVP ] == 1*/)
            player.ParamBase[ QST_VISION ] = 200;
        else
            player.ParamBase[ QST_VISION ] = 0;
			
    }
    if( answerI == 3 )
    {
        if( player.ModeBase[ MODE_NO_PVP ] == 0 )
            player.ModeBase[ MODE_NO_PVP ] = 1;
        else
            player.ModeBase[ MODE_NO_PVP ] = 0;
			/*player.ParamBase[ QST_VISION ] = 0;*/
    }
    if( answerI == 4 )
    {
        sinf( player, 0, 119, 0 );
    }
    if( answerI == 5 )
    {
        unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_TOWNMODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ war_mode = GetGlobalVar( GVAR_inf_modoc_war_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_WAR" );
        player.Say( SAY_DIALOGBOX_TEXT, "воен положение, текущее - " + war_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 -чужаки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 #чужаки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 defcon 4" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 defcon 5" );
    }
    if( answerI == 1 )
    {
        GameVar@ guards_mode = GetGlobalVar( GVAR_inf_modoc_guards_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 2, "answer_GM_PANNEL_SELF_TOWNMODES_GUARD" );
        player.Say( SAY_DIALOGBOX_TEXT, "активность гвардии, текущий - " + guards_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    }
    if( answerI == 2 )
    {
        GameVar@ races_mode = GetGlobalVar( GVAR_inf_modoc_races_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 2, "answer_GM_PANNEL_SELF_TOWNMODES_RACES" );
        player.Say( SAY_DIALOGBOX_TEXT, "расизм, текущий - " + races_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    }
    if( answerI == 3 )
    {
        GameVar@ border_mode = GetGlobalVar( GVAR_inf_modoc_border_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_SELF_TOWNMODES_GATES" );
        player.Say( SAY_DIALOGBOX_TEXT, "шлюз, текущий - " + border_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 обычный" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 спец проп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 нет гостей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 карантин1" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 карантин2" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 открыть город" );
    }
    if( answerI == 4 )
    {
        GameVar@ Reg = GetGlobalVar( GVAR_inf_modoc_reg );       // регистрация
        if( Reg.GetValue() == 0 )
            Reg.opAssign( 1 );
        else
            Reg.opAssign( 0 );
    }
    if( answerI == 5 )
    {
        unsafe_GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_TOWNMODES_WAR( Critter& player, uint answerI, string& answerS )
{
    GameVar@ war_mode = GetGlobalVar( GVAR_inf_modoc_war_mode );
    war_mode.opAssign( answerI );

    player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_WAR" );
    player.Say( SAY_DIALOGBOX_TEXT, "воен положение, текущее - " + war_mode.GetValue() );
    player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 -чужаки" );
    player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 #чужаки" );
    player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 defcon 4" );
    player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 defcon 5" );
}

void answer_GM_PANNEL_SELF_TOWNMODES_GUARD( Critter& player, uint answerI, string& answerS )
{
    GameVar@ guards_mode = GetGlobalVar( GVAR_inf_modoc_guards_mode );
    guards_mode.opAssign( answerI );
}

void answer_GM_PANNEL_SELF_TOWNMODES_RACES( Critter& player, uint answerI, string& answerS )
{
    GameVar@ races_mode = GetGlobalVar( GVAR_inf_modoc_races_mode );
    races_mode.opAssign( answerI );
}

void answer_GM_PANNEL_SELF_TOWNMODES_GATES( Critter& player, uint answerI, string& answerS )
{
    GameVar@ border_mode = GetGlobalVar( GVAR_inf_modoc_border_mode );
    border_mode.opAssign( answerI );

    player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_SELF_TOWNMODES_GATES" );
    player.Say( SAY_DIALOGBOX_TEXT, "шлюз, текущий - " + border_mode.GetValue() );
    player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 обычный" );
    player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 спец проп" );
    player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 нет гостей" );
    player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 карантин1" );
    player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 карантин2" );
    player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 открыть город" );
}

void unsafe_GM_PANNEL_CRITTER_PLAYER( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
		GM_PANNEL_CRITTER_PLAYER( player, crId, param1, param2, param3, param4 );
}

void GM_PANNEL_CRITTER_PLAYER( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( !isGM( player ) ) return;
    
	Critter@ cr = GetCritter( crId );
	if( cr is null )
		return;
	player.StatBase[ ST_VAR0 ] = cr.Id;
	player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER" );
	player.Say( SAY_DIALOGBOX_TEXT, "Действия с персонажем " + crId + ".\n" + 
		" CRTYPE " + cr.StatBase[ST_BASE_CRTYPE] + " W " + cr.StatBase[ST_WALK_TIME] + " R " + cr.StatBase[ST_RUN_TIME] +
		( cr.ParamBase[ CR_FIXED_SPEED ] != 0 ? " FIXED " : "" ) );
	if( cr.ParamBase[ QST_GAMEMODE ] == GAME_START )
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode START" );
	else if( cr.ParamBase[ QST_GAMEMODE ] == GAME_ADVENTURE )
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode Adventure" );
	else if( cr.ParamBase[ QST_GAMEMODE ] == GAME_SURVIVAL )
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode SURVIVAL" );
	else if( cr.ParamBase[ QST_GAMEMODE ] == GAME_ARCADE )
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode ARCADE" );
	else if( cr.ParamBase[ QST_GAMEMODE ] == GAME_TEST )
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode TEST" );
	else
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "ошибка режима" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Параметры" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Модерация" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Инвентарь" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Поощрения" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Эффект" );			
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Поднять/уронить" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Кнокнуть на ОД" );
	player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Выдать предмет №" );
}

import void unsafe_sleep( Critter& player, int isBack, int isRemote, int param2, string@ param3, int[] @ param4 ) from "general_unsafe";
void answer_GM_PANNEL_CRITTER_PLAYER( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_CRITTER_PLAYER_GAMEMODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий режим =" + cr.ParamBase[ QST_GAMEMODE ] + " , выберите новый режим игры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 Mode START" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 Mode Adventure" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 Mode SURVIVAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 Mode ARCADE" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 Mode TEST" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 1 )
    {
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, cr.Id );
        GameVar@ faction = GetLocalVar( LVAR_faction, cr.Id );
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_STATS" );
		
		string[] SPECIAL_names = { "S", "P", "E", "C", "I", "A", "L" };
		string description = "";
		for( uint i = 0; i < SPECIAL_names.length(); i++ )
		{
			//Убрал, т.к. не влезало всё в 1 строку.
			//description += SPECIAL_names[i] + cr.Param[ ST_STRENGTH + i ] + ":" + cr.ParamBase[ ST_STRENGTH + i ] + " ";
			description += SPECIAL_names[i] + cr.Param[ ST_STRENGTH + i ] + " ";
		}
		description += "\nLVL " + cr.StatBase[ ST_LEVEL ] + " EXP " + cr.StatBase[ ST_EXPERIENCE ] + " SP " + cr.StatBase[ ST_UNSPENT_SKILL_POINTS ] + " PP " + cr.StatBase[ ST_UNSPENT_PERKS ];
		
        player.Say( SAY_DIALOGBOX_TEXT, description );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "SPECIAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "SKILLS" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Травмы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Трейты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Скин/бодитайп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Фр=" + faction.GetValue() + ",Пр=" + citizenship.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Доп парам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Лексема" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Hard_Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "назад" );
    }
    if( answerI == 3 )
    {
		player.ParamBase[ ST_LAST_CONT_ID ] = 0;
        player.ShowContainer( cr, null, TRANSFER_FAR_CRIT );
    }
    if( answerI == 4 )
    {
		ShowScreen_PlayerGift( player, cr );
	}
    if( answerI == 5 )
    {
		int t,h,m,s;
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_EFFECTS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Черный экран 30c" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Белый экран 30с" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Красный экран 30с" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Черный экран Н 25c" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Белый экран Н 25с" );
		player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Красный экран Н 25с" );
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Глубокий сон [" + player.ParamBase[CR_VAL8] + "]" );
		t = player.ParamBase[CR_FITNESS]; h = t / 60 / 60; m = ( t / 60 ) % 60; s = t % 60;
		player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Фитнесс [" + h + ":" + m + ":" + s + "]" );
		t = player.ParamBase[CR_RELAXED]; h = t / 60 / 60; m = ( t / 60 ) % 60; s = t % 60;
		player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Отдых [" + h + ":" + m + ":" + s + "]" );
	}
	if( answerI == 6 )
	{
		unsafe_sleep( cr, Random( 0, 1 ), 1, 0, null, null );
		player.Say( SAY_NETMSG, "Цель " + ( cr.ParamBase[ CR_SLEEPING_STATE ] != 0 ? "не сможет подняться" : "скоро поднимется" ) + "." );
		GM_PANNEL_CRITTER_PLAYER( player, player.StatBase[ ST_VAR0 ], 0, 0, null, null );
	}
	if( answerI == 7 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "item@GmPistol_knockdown" );
        player.Say( SAY_SAY_TITLE, "Количество ОД:" );
	}
	if( answerI == 8 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@say_GM_GIVE_ITEM" );
        player.Say( SAY_SAY_TITLE, "Укажите PID:" );
		player.ParamBase[ CR_VAL0 ] = 0;
	}
}

void say_GM_GIVE_ITEM( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.StatBase[ ST_VAR0 ] );
    if( cr is null ) return;

	int number = 0;
	if( !StrToInt( answerS, number ) || number <= 0 )
	{
		player.Say( SAY_NETMSG, "Неверное число." );
		answer_GM_PANNEL_CRITTER_PLAYER( player, 8, "" );
		return;
	}
	if( player.ParamBase[ CR_VAL0 ] == 0 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@say_GM_GIVE_ITEM" );
		player.Say( SAY_SAY_TITLE, "Количество:" );
		player.ParamBase[ CR_VAL0 ] = number; //pid
	}
	else
	{
		cr.AddItem( player.ParamBase[ CR_VAL0 ], number );
		player.ParamBase[ CR_VAL0 ] = 0;
		GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
	}
}

void ShowScreen_PlayerGift( Critter& player, Critter& cr )
{
	player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT" );
	player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "+Опыт" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Дать карму" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Карма-перки" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "+Хп" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "-Хп" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "+перк" );
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "-перк" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Full heal" );
	player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Медосмотр" );
	player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "WALK " +cr.StatBase[ST_WALK_TIME] );
	player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "RUN " + cr.StatBase[ST_RUN_TIME] );
	player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ( cr.ParamBase[ CR_FIXED_SPEED ] != 0 ? "" : "UN" ) + "FIXED SPEED" );
	player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "назад" );
}

void answer_GM_PANNEL_CRITTER_PLAYER_EFFECTS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
    if( answerI == 0 )
    {
		FlushScreen( cr, COLOR_BLACK, 0, 30000 );
    }
    if( answerI == 1 )
    {
		FlushScreen( cr, COLOR_WHITE, 0, 30000 );
    }
    if( answerI == 2 )
    {
		FlushScreen( cr, COLOR_RED, 0, 30000 );
    }
   if( answerI == 3 )
    {
		FlushScreen( cr, COLOR_BLACK, COLOR_BLACK, 25000 );
    }
   if( answerI == 4 )
    {
		FlushScreen( cr, COLOR_WHITE, COLOR_WHITE, 25000 );
    }
   if( answerI == 5 )
    {
		FlushScreen( cr, COLOR_RED, COLOR_RED, 25000 );
    }
	if( answerI == 6 )
	{
		if( player.GetTimeEvents( CTE_SLEEPING, null, null, null ) == 0 || !player.IsKnockout() || player.IsDead() || player.IsNpc() )
		{
			player.Say( SAY_NETMSG, "Цель должна спать." );
			return;
		}
		cr.ParamBase[CR_VAL8] = ( cr.ParamBase[CR_VAL8] == 0 ? 1 : 0 );
		if( cr.ParamBase[CR_VAL8] == 1 )
		{
			player.Say( SAY_NETMSG, "Цель засыпает." );
			cr.Say( SAY_NETMSG, "Если вы пролежите не вставая полчаса - то полностью восстановите накопившуюся усталость." );
			DeepSleep( cr );
		}
		else 
		{
			player.Say( SAY_NETMSG, "Вы не дали цели уснуть." );
			cr.Say( SAY_NETMSG, "Ваш сон был прерван. Вы не смогли отдохнуть, и чувствуете себя разбито." );
			cr.ParamBase[ CR_RELAXED ] = 0;
		}	
	}
	if( answerI == 7 )
	{
		player.ParamBase[CR_VAL0] = CR_FITNESS;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_setTimingParam" );
        player.Say( SAY_SAY_TITLE, "Установить фитнесс в секундах:" );
	}
	if( answerI == 8 )
	{
		if( player.GetTimeEvents( CTE_SLEEPING, null, null, null ) == 0 || !player.IsKnockout() || player.IsDead() || player.IsNpc() )
		{
			player.Say( SAY_NETMSG, "Цель должна спать." );
			return;
		}
		player.ParamBase[CR_VAL0] = CR_RELAXED;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_setTimingParam" );
        player.Say( SAY_SAY_TITLE, "Установить отдых в секундах:" );
	}
}	

void ask_setTimingParam( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() < 1 ) return;

	Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
	if( cr is null )
		return;

	int number = 0;
	if( !StrToInt( answerS, number ) || number <= 0 ) return;
	
	int param = player.ParamBase[CR_VAL0]; player.ParamBase[CR_VAL0] = 0;
	if( param == 0 ) return;
	
	int t,h,m,s;
	cr.ParamBase[ param ] = number;
	t = cr.ParamBase[ param ]; h = t / 60 / 60; m = ( t / 60 ) % 60; s = t % 60;
	player.Say( SAY_NETMSG, "Вы установили значение в " + h + ":" + m + ":" + s + "." );
}

//import void FullHeal( Critter& cr ) from "gm";
void FullHeal( Critter& cr ) //exported
{
	cr.StatBase[ ST_CURRENT_HP ] = cr.Stat[ ST_MAX_LIFE ];
	
	cr.ParamBase[ST_BLOOD_TOXIC] = 0;	
	cr.ParamBase[BP_BLOOD_LOSS] = 0;	
	cr.ParamBase[ST_BLEED] = 0;
	
	cr.StatBase[ST_HUNGER] = 100;
	cr.StatBase[ST_THRIST] = 100;
	cr.StatBase[ST_DYSPNEA] = 100;
	
	cr.StatBase[ST_POISONING_LEVEL] = 0;
	cr.StatBase[ST_RADIATION_LEVEL] = 0;
	cr.ParamBase[ CR_DIRTINESS ] = 0;
	
	cr.DamageBase[ DAMAGE_EYE ] = 0;
	cr.DamageBase[ DAMAGE_RIGHT_ARM ] = 0;
	cr.DamageBase[ DAMAGE_LEFT_ARM ] = 0;
	cr.DamageBase[ DAMAGE_RIGHT_LEG ] = 0;
	cr.DamageBase[ DAMAGE_LEFT_LEG ] = 0;
	
	ChangeStatus( cr, CR_STATUS_HEAVY_DMG, 0, false );
	ChangeStatus( cr, CR_STATUS_BULLET_OVER, 0, false );
	ChangeStatus( cr, CR_STATUS_BLOOD_TOXIC, 0, false );
}

void answer_GM_PANNEL_CRITTER_PLAYER_GIFT( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
    if( answerI == 0 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_EXPERIENCE;
		player.ParamBase[ ST_VAR2 ] = 0;		
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );

		float luckMultiplier = cr.Stat[ ST_LUCK ] * 100 / 15;
		float bonus_mul = ( cr.Stat[ ST_CHARISMA ] + cr.Stat[ ST_INTELLECT ] / 2 + cr.Stat[ ST_PERCEPTION ] / 2 ) * 0.15;
		if( cr.Trait[ TRAIT_SEX_APPEAL ] != 0 )
			bonus_mul += 0.5;
        player.Say( SAY_SAY_TITLE, "Опыт [ х" + bonus_mul + " : " + luckMultiplier + " % ]" );
    }		
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_KARMA;
		player.ParamBase[ ST_VAR2 ] = 0;		
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );
        player.Say( SAY_SAY_TITLE, "Карма" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 18, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_KARMA" );
        player.Say( SAY_DIALOGBOX_TEXT, "Карма-перки персонажа:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.KarmaBase[ KARMA_BERSERKER ] + " - каннибал" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.KarmaBase[ KARMA_CHAMPION ] + " - Посейдон" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.KarmaBase[ KARMA_CHILDKILLER ] + " - детоубийца" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.KarmaBase[ KARMA_SEXPERT ] + " - сексэксперт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.KarmaBase[ KARMA_PRIZEFIGHTER ] + " - боксер" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.KarmaBase[ KARMA_GIGOLO ] + " - сутенер" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.KarmaBase[ KARMA_GRAVE_DIGGER ] + " - могильщик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.KarmaBase[ KARMA_MARRIED ] + " - женатый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.KarmaBase[ KARMA_PORN_STAR ] + " - порнозвезда" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.KarmaBase[ KARMA_SLAVER ] + " - работорговец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.KarmaBase[ KARMA_VIRGIN_WASTES ] + " - девственник" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "" + cr.KarmaBase[ KARMA_MAN_SALVATORE ] + " - Молох" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "" + cr.KarmaBase[ KARMA_MAN_BISHOP ] + " - якудза" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "" + cr.KarmaBase[ KARMA_MAN_MORDINO ] + " - член Ши" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "" + cr.KarmaBase[ KARMA_MAN_WRIGHT ] + " - бандос" );
        player.Say( SAY_DIALOGBOX_BUTTON( 15 ), "" + cr.KarmaBase[ KARMA_SEPARATED ] + " - склады" );
        player.Say( SAY_DIALOGBOX_BUTTON( 16 ), "" + cr.KarmaBase[ KARMA_PEDOBEAR ] + " - педобир" );
        player.Say( SAY_DIALOGBOX_BUTTON( 17 ), "" + cr.KarmaBase[ KARMA_VC_GUARDSMAN ] + " - СКБ" );
		return;
    }	
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_CURRENT_HP;
		player.ParamBase[ ST_VAR2 ] = 0;		
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );
        player.Say( SAY_SAY_TITLE, "Хп" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_CURRENT_HP;
		player.ParamBase[ ST_VAR2 ] = 1;		
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );
        player.Say( SAY_SAY_TITLE, "Хп" );
    }		
    if( answerI == 5 )
    {
		player.ParamBase[ ST_VAR1 ] = PERK_BEGIN;
		player.ParamBase[ ST_VAR2 ] = 0;
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        for(uint i=1; i<11; i++)
        {
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.ParamBase[ ST_VAR1 ]+i)*10+1);
        }
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );
    }
    if( answerI == 6 )
    {
		player.ParamBase[ ST_VAR1 ] = PERK_BEGIN;
		player.ParamBase[ ST_VAR2 ] = 1;
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        for(uint i=1; i<11; i++)
        {
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.ParamBase[ ST_VAR1 ]+i)*10+1);
        }
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );
    }
    if( answerI == 7 ) //Отхил всех повреждений и восстановление крови
    {
		FullHeal( cr );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " отхилил персонажа " + cr.Name + " " + cr.Id, null );
    }
	if( answerI == 8 )
	{
		ProccessDoctorSkill( player, cr, true );
	}
    if( answerI == 9 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_WALK_TIME;
		player.ShowScreen( SCREEN_SAY, 0, "gm@answer_setVal" );
        player.Say( SAY_SAY_TITLE, "WALK" );
    }

    if( answerI == 10 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_RUN_TIME;
		player.ShowScreen( SCREEN_SAY, 0, "gm@answer_setVal" );
        player.Say( SAY_SAY_TITLE, "RUN" );
    }

    if( answerI == 11 )
    {
		cr.ParamBase[ CR_FIXED_SPEED ] = cr.ParamBase[ CR_FIXED_SPEED ] == 0 ? 1 : 0;
		answer_GM_PANNEL_CRITTER_PLAYER( player, 4, "" );
    }

    if( answerI == 12 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
    }
}

void answer_setVal( Critter& player, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( player.Stat[ ST_VAR0 ] );
    int      parameter = player.Stat[ ST_VAR1 ];
    if( !valid( target ) )
        return;
    if( answerS.length() > 0 )
    {
        int number = 0;
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " установил параметр " + parameter + " c " + target.ParamBase[ parameter ] + " у игрока " + target.Name + " " + target.Id + " -V- (НАЧАЛО) ", null );
        StrToInt( answerS, number );
        target.ParamBase[ parameter ] = number;
        player.Say( SAY_NETMSG, "Вы изменили параметр " + parameter + " на " + number + " у игрока " + target.Id + "." );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " изменил параметр " + parameter + " на " + number + " -^- (КОНЕЦ)", null );
		ChangeCritterSpeed(target);
	}
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_KARMA( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
	cr.KarmaBase[KARMA_BEGIN + answerI] = cr.Karma[KARMA_BEGIN + answerI] == 0 ? 1 : 0;
	answer_GM_PANNEL_CRITTER_PLAYER_GIFT( player, 2, "" );
}


void answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
    if( answerI == 0 && player.ParamBase[ ST_VAR1 ] > PERK_BEGIN + 10 )
    {
		player.ParamBase[ ST_VAR1 ] -= 11;
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        for(uint i=1; i<11; i++)
        {
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.ParamBase[ ST_VAR1 ]+i)*10+1);
        }
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );		
    }
    if( answerI == 11 && player.ParamBase[ ST_VAR1 ] < PERK_END - 10 )
    {
		player.ParamBase[ ST_VAR1 ] += 11;
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        for(uint i=1; i<11; i++)
        {
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.ParamBase[ ST_VAR1 ]+i)*10+1);
        }
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );		
    }	
	
	
	else if( player.Stat[ ST_VAR2 ] == 0 )
	{
	cr.ParamBase[ player.ParamBase[ ST_VAR1 ] + answerI] ++;
	int perkId = player.ParamBase[ ST_VAR1 ] + answerI;	
	player.Say( SAY_NETMSG, "вы увеличили перк " + perkId + " на 1 у игрока " + cr.Id );
	unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " увеличил перк " + perkId + " на +1 " + " у игрока " + cr.Name + " " + cr.Id, null );
	}
	else
	{
	cr.ParamBase[ player.ParamBase[ ST_VAR1 ] + answerI] --;
	int perkId = player.ParamBase[ ST_VAR1 ] + answerI;
	player.Say( SAY_NETMSG, "вы отняли перк " + perkId + " на 1 у игрока " + cr.Id );
	unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " отнял перк " + perkId + " на -1 " + " у игрока " + cr.Name + " " + cr.Id, null );
	}	
}

void ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD( Critter& player, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( player.Stat[ ST_VAR0 ] );
    int parameter = player.Stat[ ST_VAR1 ];
    if( !valid( target ) )
        return;
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
		if( player.Stat[ ST_VAR2 ] == 0 )
			{
			unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " прибавил к параметру " + parameter + " cо знач. " + target.ParamBase[ parameter ] + " у игрока " + target.Name + " " + target.Id + " -V- (НАЧАЛО)", null );
			target.ParamBase[ parameter ] += number;
			player.Say( SAY_NETMSG, "вы увеличили параметр " + parameter + " на " + number + " у игрока " + target.Id );
			unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " прибавил к параметру " + parameter + "  +" + number + " -^- (КОНЕЦ)", null );
			}
        else
			{
			unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " уменьшил у параметра " + parameter + " cо знач. " + target.ParamBase[ parameter ] + " у игрока " + target.Name + " " + target.Id + " -V- (НАЧАЛО)", null );
			target.ParamBase[ parameter ] -= number;
			player.Say( SAY_NETMSG, "вы уменьшили параметр " + parameter + " на " + number + " у игрока " + target.Id );
			unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " уменьшил у параметра " + parameter + "  -" + number + " -^- (КОНЕЦ)", null );
			}
		ChangeCritterSpeed(target);
	}
	GM_PANNEL_CRITTER_PLAYER( player, target.Id, 0, 0, null, null );
}


void answer_GM_PANNEL_CRITTER_PLAYER_GAMEMODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    cr.ParamBase[ QST_GAMEMODE ] = answerI;
    Log_factions( player, cr.Id, 0, answerI, null, null );
}

void answer_GM_PANNEL_CRITTER_PLAYER_BANS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        Warn( player, cr.Id, 0, 0 );
    }
    if( answerI == 1 )
    {
        KickId( player, cr.Id, 0, 0 );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_BANS_KILL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Убить предельно жестоким способом" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Просто смерть" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Вырыв бока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Разрыв Очередью" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "очередью" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "в прах" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "в куски" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "огонь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "в соплю" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "пополам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBANIP" );
        player.Say( SAY_SAY_TITLE, "Бан по IP" + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 6 )
    {
        UnbanId( player, cr.Id, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " разблокирован" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
    if( answerI == 7 )
    {
        GM_HardBanId( player, cr.Id );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по системе" );
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );		
    }
    if( answerI == 8 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_BANS_KILL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null ) return;

    if( answerI == 9 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
		return;
    }	
	
	killbytype( player, answerI, 0, 0, null, null );
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_UNBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        KickBanIdIp( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по IP на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBANIP( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        KickBanIdIp( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по IP на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, cr.Id, number, 1 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + "заблокирован на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
	
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_DIALOGBOX_TEXT, "SPECIAL персонажа:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.ParamBase[ ST_STRENGTH ] + " - сила" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.ParamBase[ ST_PERCEPTION ] + " - восприятие" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.ParamBase[ ST_ENDURANCE ] + " - выносливость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.ParamBase[ ST_CHARISMA ] + " - харизма" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.ParamBase[ ST_INTELLECT ] + " - интеллект" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.ParamBase[ ST_AGILITY ] + " - ловкость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.ParamBase[ ST_LUCK ] + " - удача" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 19, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Навыки персонажа:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "[НАЗАД]" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.SkillBase[ SK_SMALL_GUNS ] + " - легкое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.SkillBase[ SK_BIG_GUNS ] + " - тяжелое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.SkillBase[ SK_ENERGY_WEAPONS ] + " - энерго" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.SkillBase[ SK_UNARMED ] + " - рукопашная" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.SkillBase[ SK_MELEE_WEAPONS ] + " - холодное" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.SkillBase[ SK_THROWING ] + " - метание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.SkillBase[ SK_FIRST_AID ] + " - санитар" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.SkillBase[ SK_DOCTOR ] + " - доктор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.SkillBase[ SK_SNEAK ] + " - скрытность" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.SkillBase[ SK_LOCKPICK ] + " - взлом" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "" + cr.SkillBase[ SK_STEAL ] + " - кража" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "" + cr.SkillBase[ SK_TRAPS ] + " - ловушки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "" + cr.SkillBase[ SK_SCIENCE ] + " - наука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "" + cr.SkillBase[ SK_REPAIR ] + " - ремонт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 15 ), "" + cr.SkillBase[ SK_SPEECH ] + " - разговор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 16 ), "" + cr.SkillBase[ SK_BARTER ] + " - торговля" );
        player.Say( SAY_DIALOGBOX_BUTTON( 17 ), "" + cr.SkillBase[ SK_GAMBLING ] + " - игра" );
        player.Say( SAY_DIALOGBOX_BUTTON( 18 ), "" + cr.SkillBase[ SK_OUTDOORSMAN ] + " - скиталец" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_DAMAGES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Травмы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.DamageBase[ DAMAGE_EYE ] + " - травма глаза" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.DamageBase[ DAMAGE_RIGHT_ARM ] + " - правая рука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.DamageBase[ DAMAGE_LEFT_ARM ] + " - левая рука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.DamageBase[ DAMAGE_RIGHT_LEG ] + " - правая нога" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.DamageBase[ DAMAGE_LEFT_LEG ] + " - левая нога" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + FLAG( cr.StatBase[ ST_CRSTATUS ], CR_STATUS_BULLET_OVER ) + " - пулевое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + FLAG( cr.StatBase[ ST_CRSTATUS ], CR_STATUS_HEAVY_DMG ) + " - тяжелое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.StatBase[ ST_BLOOD_TOXIC ] + " - заражение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.ParamBase[ BP_BLOOD_LOSS ] + " - кровопотеря" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.StatBase[ ST_BLEED ] + " - кровотечение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.ParamBase[ CR_DIRTINESS ] + " - грязь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "Медосмотр" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Режимы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.ModeBase[ MODE_NO_PVP ] + " - нопвп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.ModeBase[ MODE_INVULNERABLE ] + " - неуязвимость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.ModeBase[ MODE_NO_LOOT ] + " - нелутаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.ModeBase[ MODE_NO_STEAL ] + " - неворуемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.ModeBase[ MODE_NO_PUSH ] + " - непихаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.ModeBase[ MODE_NO_WALK ] + " - стоять" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.ModeBase[ MODE_NO_RUN ] + " - нет бега" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] + " - нет травм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.ModeBase[ MODE_NO_KNOCK ] + " - несбиваемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.ParamBase[ QST_MEDIUM ] + " - пси-способности" );
		player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.ModeBase[ MODE_UNLIMITED_AMMO ] + " - беск. патроны" );  //проверка на всевидимость, отключение
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 16, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_TRAITS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Трейты персонажа:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.TraitBase[ TRAIT_FAST_METABOLISM ] + " - метаболик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.TraitBase[ TRAIT_BRUISER ] + " - крушила" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.TraitBase[ TRAIT_SMALL_FRAME ] + " - хиляк" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.TraitBase[ TRAIT_ONE_HANDER ] + " - однорукий" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.TraitBase[ TRAIT_FINESSE ] + " - точность" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.TraitBase[ TRAIT_KAMIKAZE ] + " - камикадзе" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.TraitBase[ TRAIT_HEAVY_HANDED ] + " - громила" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.TraitBase[ TRAIT_FAST_SHOT ] + " - скорострел" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.TraitBase[ TRAIT_BLOODY_MESS ] + " - маньяк" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.TraitBase[ TRAIT_JINXED ] + " - невезучий" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.TraitBase[ TRAIT_GOOD_NATURED ] + " - добродушие" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "" + cr.TraitBase[ TRAIT_CHEM_RELIANT ] + " - спортсмен" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "" + cr.TraitBase[ TRAIT_CHEM_RESISTANT ] + " - наркоман" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "" + cr.TraitBase[ TRAIT_SEX_APPEAL ] + " - чуткость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "" + cr.TraitBase[ TRAIT_SKILLED ] + " - умелец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 15 ), "" + cr.TraitBase[ TRAIT_NIGHT_PERSON ] + " - сова" );
	}
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.StatBase[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.StatBase[ ST_BODY_TYPE ] + " - бодитайп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.StatBase[ ST_BASE_CRTYPE ] + " - скин вручную" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "стандартный" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "дикари" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "гражданские" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "бандитские" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "разное" );
    }
    if( answerI == 6 )
    {
        GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, cr.Id );
        GameVar@ faction = GetLocalVar( LVAR_faction, cr.Id );
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущая фракция - " + faction.GetValue() + ". Текущий пропуск - " + citizenship.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "4 - богатый гражданин" );
    }
    if( answerI == 7 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_PARAM" );
        player.Say( SAY_DIALOGBOX_TEXT, "Дополнительные параметры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.ParamBase[ ST_CURRENT_HP ] + " Текущее хп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.ParamBase[ ST_MAX_LIFE ] + " макс хп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.ParamBase[ ST_AGE ] + " возраст" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.ParamBase[ ST_GENDER ] + " пол" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + (100-cr.StatBase[ ST_DYSPNEA ]) + " удушье" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + (100-cr.StatBase[ ST_HUNGER ]) + " голод" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Скорость ^ [" + cr.Param[ CR_HUNGER_SPEED ] + "]" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + (100-cr.StatBase[ ST_THRIST ]) + " жажда" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Скорость ^ [" + cr.Param[ CR_THIRST_SPEED ] + "]" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.StatBase[ ST_POISONING_LEVEL ] + " отравление" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.StatBase[ ST_RADIATION_LEVEL ] + " радиация" );
    }
    if( answerI == 8 )
    {
        ShowInputBoxScreen( player, "gm@unsafe_Description#Приметы", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    if( answerI == 9 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_PARAM( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
    if( answerI == 0 )
    {
        player.ToLife();
        player.ParamBase[ ST_VAR1 ] = ST_CURRENT_HP;
        player.Say( SAY_SAY_TITLE, "Хп" );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_MAX_LIFE;
        player.Say( SAY_SAY_TITLE, "Макс Хп" );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_AGE;
        player.Say( SAY_SAY_TITLE, "Возраст" );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_GENDER;
        player.Say( SAY_SAY_TITLE, "Пол" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_DYSPNEA;
        player.Say( SAY_SAY_TITLE, "Удушье" );
    }
    if( answerI == 5 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_HUNGER;
        player.Say( SAY_SAY_TITLE, "Голод" );
    }
    if( answerI == 6 )
    {
        player.ParamBase[ ST_VAR1 ] = CR_HUNGER_SPEED;
        player.Say( SAY_SAY_TITLE, "Частота в секундах:" );
	}
    if( answerI == 7 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_THRIST;
        player.Say( SAY_SAY_TITLE, "Жажда" );
    }
    if( answerI == 8 )
    {
        player.ParamBase[ ST_VAR1 ] = CR_THIRST_SPEED;
        player.Say( SAY_SAY_TITLE, "Частота в секундах:" );
	}
    if( answerI == 9 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_POISONING_LEVEL;
        player.Say( SAY_SAY_TITLE, "Отравление" );
    }
    if( answerI == 10 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_RADIATION_LEVEL;
        player.Say( SAY_SAY_TITLE, "Радиация" );
    }
    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
}

void unsafe_Description( Critter& player, int skill, int p1, int p2, string@ message, int[] @ p4 )
{
    if( message.length() != 0 )
    {
        Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
        if( cr is null )
            return;
        cr.SetLexems( message );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_DAMAGES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.ParamBase[ DAMAGE_EYE ] == 0 )
            cr.ParamBase[ DAMAGE_EYE ] = 1;
        else
            cr.ParamBase[ DAMAGE_EYE ] = 0;

		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
    }
    else if( answerI == 1 )
    {
        if( cr.ParamBase[ DAMAGE_RIGHT_ARM ] == 0 )
            cr.ParamBase[ DAMAGE_RIGHT_ARM ] = 1;
        else
            cr.ParamBase[ DAMAGE_RIGHT_ARM ] = 0;

		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
    }
    else if( answerI == 2 )
    {
        if( cr.ParamBase[ DAMAGE_LEFT_ARM ] == 0 )
            cr.ParamBase[ DAMAGE_LEFT_ARM ] = 1;
        else
            cr.ParamBase[ DAMAGE_LEFT_ARM ] = 0;

		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
    }
    else if( answerI == 3 )
    {
        if( cr.ParamBase[ DAMAGE_RIGHT_LEG ] == 0 )
            cr.ParamBase[ DAMAGE_RIGHT_LEG ] = 1;
        else
            cr.ParamBase[ DAMAGE_RIGHT_LEG ] = 0;

		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
    }
    else if( answerI == 4 )
    {
        if( cr.ParamBase[ DAMAGE_LEFT_LEG ] == 0 )
            cr.ParamBase[ DAMAGE_LEFT_LEG ] = 1;
        else
            cr.ParamBase[ DAMAGE_LEFT_LEG ] = 0;

		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
    }
	
	if( answerI == 5 )
	{
		ChangeStatus( cr, CR_STATUS_BULLET_OVER, 0, !FLAG( cr.StatBase[ ST_CRSTATUS ], CR_STATUS_BULLET_OVER ) );
		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
	}
	if( answerI == 6 )
	{
		ChangeStatus( cr, CR_STATUS_HEAVY_DMG, 0, !FLAG( cr.StatBase[ ST_CRSTATUS ], CR_STATUS_HEAVY_DMG ) );
		answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
		return;
	}
	if( answerI == 7 )
	{
        player.ParamBase[ ST_VAR1 ] = ST_BLOOD_TOXIC;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Заражение:" );
	}
	if( answerI == 8 )
	{
        player.ParamBase[ ST_VAR1 ] = BP_BLOOD_LOSS;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Кровопотеря:" );
	}
	if( answerI == 9 )
	{
        player.ParamBase[ ST_VAR1 ] = ST_BLEED;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Кровотечение:" );
	}
	if( answerI == 10 )
	{
        player.ParamBase[ ST_VAR1 ] = CR_DIRTINESS;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Грязь:" );
	}
	if( answerI == 11 )
	{
		ProccessDoctorSkill( player, cr, true );
	}
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий бодитайп - " + cr.ParamBase[ ST_BODY_TYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мужчина" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 женщина" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 ребенок" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 супермутант" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 гуль" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 брамин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 радскорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "7 крыса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "8 летун" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "9 кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "10 робот" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "11 пес" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "12 мантис" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "13 коготь смерти" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "14 растение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 15 ), "15 BT_GECKO" );
        player.Say( SAY_DIALOGBOX_BUTTON( 16 ), "16 BT_ALIEN" );
        player.Say( SAY_DIALOGBOX_BUTTON( 17 ), "17 BT_GIANT_ANT" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS" );
        player.Say( SAY_SAY_TITLE, "Номер скина" );
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
        cr.StatBase[ ST_BASE_CRTYPE ] = cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F;
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.ParamBase[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "62 Дикарь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "64 сулик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "110 патлатый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "120 лысый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "61 Дикарка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "63 Дикарка хв." );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_CIVIL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.ParamBase[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "33 Блондинка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "36 Девушка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "37 Шлюха" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "39 Негр в кр." );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "40 свитер" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "41 рубашка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "42 Коротышка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "43 Бомж сгорбленный" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "48 Караванщик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "72 костюм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "73 Китти" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "77 Вышибала" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "57 Доктор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "89 Ученый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "91 Вик" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BATTLE" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.ParamBase[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "9 Негр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "34 Бандитка панк" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "35 Мет. жен" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "45 Бандит" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "82 Китаец бед" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "92 Китаец кр." );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "93 Китаец син." );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "94 Китайка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "87 Полицейский" );
    }
    if( answerI == 6 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_MISC" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.ParamBase[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "16 собака" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "17 мистер хенди" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "65 растение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "66 робот боевой" );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_CIVIL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        cr.ChangeCrType( 33 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 33;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 36 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 36;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 37 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 37;
    }
    if( answerI == 3 )
    {
        cr.ChangeCrType( 39 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 39;
    }
    if( answerI == 4 )
    {
        cr.ChangeCrType( 40 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 40;
    }
    if( answerI == 5 )
    {
        cr.ChangeCrType( 41 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 41;
    }
    if( answerI == 6 )
    {
        cr.ChangeCrType( 42 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 42;
    }
    if( answerI == 7 )
    {
        cr.ChangeCrType( 43 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 43;
    }
    if( answerI == 8 )
    {
        cr.ChangeCrType( 48 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 48;
    }
    if( answerI == 9 )
    {
        cr.ChangeCrType( 72 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 72;
    }
    if( answerI == 10 )
    {
        cr.ChangeCrType( 73 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 73;
    }
    if( answerI == 11 )
    {
        cr.ChangeCrType( 77 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 77;
    }
    if( answerI == 12 )
    {
        cr.ChangeCrType( 57 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 57;
    }
    if( answerI == 13 )
    {
        cr.ChangeCrType( 89 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 89;
    }
    if( answerI == 14 )
    {
        cr.ChangeCrType( 91 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 91;
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BATTLE( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        cr.ChangeCrType( 9 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 9;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 34 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 34;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 35 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 35;
    }
    if( answerI == 3 )
    {
        cr.ChangeCrType( 45 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 45;
    }
    if( answerI == 4 )
    {
        cr.ChangeCrType( 82 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 82;
    }
    if( answerI == 5 )
    {
        cr.ChangeCrType( 92 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 92;
    }
    if( answerI == 6 )
    {
        cr.ChangeCrType( 93 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 93;
    }
    if( answerI == 7 )
    {
        cr.ChangeCrType( 94 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 94;
    }
    if( answerI == 8 )
    {
        cr.ChangeCrType( 87 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 87;
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_MISC( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;

	if( answerI == 0 )
    {
        cr.ChangeCrType( 16 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 16;
		cr.StatBase[ ST_BODY_TYPE ] = BT_DOG;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 17 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 17;
		cr.StatBase[ ST_BODY_TYPE ] = BT_ROBOT;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 65 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 65;
		cr.StatBase[ ST_BODY_TYPE ] = BT_PLANT;
    }
    if( answerI == 3 )
    {
        cr.ChangeCrType( 66 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 66;
		cr.StatBase[ ST_BODY_TYPE ] = BT_ROBOT;
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int      number = 0;
        if( !StrToInt( answerS, number ) || number < 0 || number > 500 )
		{
            player.Say( SAY_NETMSG, "Введите число от 1 до 500." );
            return;
		}
        Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
        if( !valid( cr ) )
        {
            player.Say( SAY_NETMSG, "Персонажа №" + player.ParamBase[ ST_VAR0 ] + " нет онлайн." );
            return;
        }
        cr.ChangeCrType( number );
        cr.StatBase[ ST_BASE_CRTYPE ] = number;
        player.Say( SAY_NETMSG, "Скин персонажа №" + player.ParamBase[ ST_VAR0 ] + " был изменен на '" + number + "'." );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    cr.ParamBase[ ST_BODY_TYPE ] = answerI;
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_TRAITS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
	cr.TraitBase[TRAIT_BEGIN + answerI] = cr.Trait[TRAIT_BEGIN + answerI] == 0 ? 1 : 0;
	answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 4, "" );
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.ModeBase[ MODE_NO_PVP ] == 0 )
            cr.ModeBase[ MODE_NO_PVP ] = 1;
        else
            cr.ModeBase[ MODE_NO_PVP ] = 0;
			/*player.ParamBase[ QST_VISION ] = 0;*/
    }
    if( answerI == 1 )
    {
        if( cr.ModeBase[ MODE_INVULNERABLE ] == 0 )
            cr.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            cr.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
    if( answerI == 2 )
    {
        if( cr.ModeBase[ MODE_NO_LOOT ] == 0 )
            cr.ModeBase[ MODE_NO_LOOT ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOT ] = 0;
    }
    if( answerI == 3 )
    {
        if( cr.ModeBase[ MODE_NO_STEAL ] == 0 )
            cr.ModeBase[ MODE_NO_STEAL ] = 1;
        else
            cr.ModeBase[ MODE_NO_STEAL ] = 0;
    }
    if( answerI == 4 )
    {
        if( cr.ModeBase[ MODE_NO_PUSH ] == 0 )
            cr.ModeBase[ MODE_NO_PUSH ] = 1;
        else
            cr.ModeBase[ MODE_NO_PUSH ] = 0;
    }
    if( answerI == 5 )
    {
        if( cr.ModeBase[ MODE_NO_WALK ] == 0 )
            cr.ModeBase[ MODE_NO_WALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_WALK ] = 0;
    }
    if( answerI == 6 )
    {
        if( cr.ModeBase[ MODE_NO_RUN ] == 0 )
            cr.ModeBase[ MODE_NO_RUN ] = 1;
        else
            cr.ModeBase[ MODE_NO_RUN ] = 0;
    }
    if( answerI == 7 )
    {
        if( cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] == 0 )
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 0;
    }
    if( answerI == 8 )
    {
        if( cr.ModeBase[ MODE_NO_KNOCK ] == 0 )
            cr.ModeBase[ MODE_NO_KNOCK ] = 1;
        else
            cr.ModeBase[ MODE_NO_KNOCK ] = 0;
		
    }
    if( answerI == 9 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES_MEDIUM" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий - " + cr.ParamBase[ QST_MEDIUM ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - нет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - мастер зверей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - безликий" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - голос" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - притворщик" );
    }
	
    if( answerI == 10 )
    {
        if( cr.ModeBase[ MODE_UNLIMITED_AMMO ] > 0 )
            cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 0;
        else
			cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;
		
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES_MEDIUM( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = QST_MEDIUM;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Ид" );
    }
	else cr.ParamBase[ QST_MEDIUM ] = answerI;
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_FACTIONS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    GameVar@ citizenship = GetLocalVar( LVAR_modoc_citizenship, cr.Id );
    GameVar@ faction = GetLocalVar( LVAR_faction, cr.Id );
    if( answerI == 0 )
    {
        faction.opAssign( 0 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 0, null, null );
    }
    if( answerI == 1 )
    {
        faction.opAssign( 1 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 1, null, null );
    }
    if( answerI == 2 )
    {
        faction.opAssign( 2 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 2, null, null );
    }
    if( answerI == 3 )
    {
        faction.opAssign( 3 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 3, null, null );
    }
    if( answerI == 4 )
    {
        faction.opAssign( 4 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 4, null, null );
    }
    if( answerI == 5 )
    {
        faction.opAssign( 5 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 5, null, null );
    }
    if( answerI == 6 )
    {
        faction.opAssign( 6 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, 6, null, null );
    }
    if( answerI == 7 )
    {
        citizenship.opAssign( 0 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 0, null, null );
    }
    if( answerI == 8 )
    {
        citizenship.opAssign( 1 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 1, null, null );
    }
    if( answerI == 9 )
    {
        citizenship.opAssign( 2 );
        RestartFactions( cr, 0, 0, 0 );
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 2, null, null );
    }
    if( answerI == 10 )
    {
        citizenship.opAssign( 3 );
        Item@ pass = cr.AddItem( PID_MODOC_DOCUMENTS, 1 );
        pass.Val1 = cr.Id;
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        player.ShowScreen( SCREEN_SAY, 0, "handcuffs@PassportLex" );
        player.Say( SAY_SAY_TITLE, "Имя в документы" );
        player.StatBase[ ST_VAR3 ] = pass.Id;
        RestartFactions( cr, 0, 0, 0 );
        Log_factions( player, cr.Id, 1, 3, null, null );
    }
    if( answerI == 11 )
    {
        citizenship.opAssign( 4 );
        Item@ pass = cr.AddItem( PID_MODOC_DOCUMENTS, 1 );
        pass.Val1 = cr.Id;
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        player.ShowScreen( SCREEN_SAY, 0, "handcuffs@PassportLex" );
        player.Say( SAY_SAY_TITLE, "Имя в документы" );
        player.StatBase[ ST_VAR3 ] = pass.Id;
        RestartFactions( cr, 0, 0, 0 );
        Log_factions( player, cr.Id, 1, 4, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
	
    if( answerI == 0 )
    {
		answer_GM_PANNEL_CRITTER_PLAYER( player, 1, "" );
		return;
    }
	
	string[] skill_names = {
		"Легкое", "Тяжелое", "Энерго", "Рукопашная", "Холодное", "Метание", "Санитар", "Доктор", "Скрытность", 
		"Взлом", "Воровство", "Ловушки", "Наука", "Ремонт", "Разговор", "Торговля", "Азартные игры", "Скиталец"
	};

	player.ParamBase[ ST_VAR1 ] = 200 + answerI - 1;

	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
	player.Say( SAY_SAY_TITLE, skill_names[answerI - 1] );
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
		
    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
	
    if( answerI == 0 )
    {
        player.ParamBase[ ST_VAR1 ] = 0;
        player.Say( SAY_SAY_TITLE, "Сила" );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = 1;
        player.Say( SAY_SAY_TITLE, "Восприятие" );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ ST_VAR1 ] = 2;
        player.Say( SAY_SAY_TITLE, "Выносливость" );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = 3;
        player.Say( SAY_SAY_TITLE, "Харизма" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = 4;
        player.Say( SAY_SAY_TITLE, "Интеллект" );
    }
    if( answerI == 5 )
    {
        player.ParamBase[ ST_VAR1 ] = 5;
        player.Say( SAY_SAY_TITLE, "Ловкость" );
    }
    if( answerI == 6 )
    {
        player.ParamBase[ ST_VAR1 ] = 6;
        player.Say( SAY_SAY_TITLE, "Удача" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL( Critter& player, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( player.Stat[ ST_VAR0 ] );
    int      parameter = player.Stat[ ST_VAR1 ];
    if( !valid( target ) )
        return;
    if( answerS.length() > 0 )
    {
        int number = 0;
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " изменил параметр " + parameter + " c " + target.ParamBase[ parameter ] + " у игрока " + target.Name + " " + target.Id + " -V- (НАЧАЛО) ", null );
        StrToInt( answerS, number );
		
		if( parameter == ST_DYSPNEA || parameter == ST_THRIST || parameter == ST_HUNGER )
			target.ParamBase[ parameter ] = 100 - number;
		else
			target.ParamBase[ parameter ] = number;
		
        player.Say( SAY_NETMSG, "Вы изменили параметр " + parameter + " на " + number + " у игрока " + target.Id + "." );
		unsafe_log_2( player, 0, 0, 0, player.Name + " " + player.Id + " изменил параметр " + parameter + " на " + number + " -^- (КОНЕЦ)", null );
		
		if( parameter == ST_BLOOD_TOXIC )
			ChangeStatus( target, CR_STATUS_BLOOD_TOXIC, 0, number > 0 );
		if( parameter == ST_BLEED )
			ChangeStatus( target, CR_STATUS_BLEED, 0, number > 0 );

		ChangeCritterSpeed(target);
        if( parameter >= 0 && parameter <= 6 )
        {
			answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 0, "" );
        }
        if( parameter >= 200 && parameter <= 217 )
		{
			answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 1, "" );
		}
        if( parameter == ST_CURRENT_HP || parameter == ST_MAX_LIFE || parameter == ST_AGE || parameter == ST_GENDER 
		|| parameter == ST_DYSPNEA || parameter == ST_THRIST || parameter == ST_HUNGER || parameter == ST_POISONING_LEVEL || parameter == ST_RADIATION_LEVEL )
        {
			answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 7, "" );

		}
		if( parameter == ST_BLOOD_TOXIC || parameter == BP_BLOOD_LOSS || parameter == ST_BLEED || parameter == CR_DIRTINESS )
			answer_GM_PANNEL_CRITTER_PLAYER_STATS( player, 2, "" );
    }
}

void unsafe_GM_PANNEL_CRITTER_NPC( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_PANNEL_CRITTER_NPC( player, crId, param1, param2, param3, param4 );
}

void GM_PANNEL_CRITTER_NPC( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@ cr = GetCritter( crId );
    if( cr is null || !isGM( player ) )
        return;

	player.StatBase[ ST_VAR0 ] = crId;
	player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_NPC" );
	player.Say( SAY_DIALOGBOX_TEXT, "НПЦ, protoId - " + cr.GetProtoId() + ", диалог - " + cr.ParamBase[ ST_DIALOG_ID ] + ".\n" +
		"CRTYPE " + cr.StatBase[ST_BASE_CRTYPE] + " W " + cr.StatBase[ST_WALK_TIME] + " R " + cr.StatBase[ST_RUN_TIME] +
		( cr.ParamBase[ CR_FIXED_SPEED ] != 0 ? " FIXED " : "" ) );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Параметры" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "НПЦ-Параметры" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Инвентарь" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Лечь/встать" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Кнокнуть на ОД" );
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Выдать предмет №" );
}

void answer_GM_PANNEL_CRITTER_NPC( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.StatBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_CRITTER_NPC_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Режимы НПЦ:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.ModeBase[ MODE_NO_HOME ] + " - нет дом гекса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.ModeBase[ MODE_NO_ENEMY_STACK ] + " - не запоминает врагов" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.ModeBase[ MODE_NO_LOOT ] + " - нелутаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.ModeBase[ MODE_NO_STEAL ] + " - неворуемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.ModeBase[ MODE_NO_PUSH ] + " - непихаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.ModeBase[ MODE_NO_WALK ] + " - стоять" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.ModeBase[ MODE_NO_RUN ] + " - нет бега" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] + " - нет травм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.ModeBase[ MODE_NO_KNOCK ] + " - несбиваемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.ModeBase[ MODE_NO_BARTER ] + " - неторгует" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.ModeBase[ MODE_BARTER_ONLY_CASH ] + " - только наличные" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "" + cr.ModeBase[ MODE_NO_TALK ] + " - не разговаривает" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "" + cr.ModeBase[ MODE_UNLIMITED_AMMO ] + " - беск патроны" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "" + cr.ModeBase[ MODE_INVULNERABLE ] + " - неуязвимость" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_STATS" );
		
		string[] SPECIAL_names = { "S", "P", "E", "C", "I", "A", "L" };
		string description = "Параметры, protoId - " + cr.GetProtoId() + ", диалог - " + cr.ParamBase[ ST_DIALOG_ID ] + "\n";
		for( uint i = 0; i < SPECIAL_names.length(); i++ )
		{
			//Убрал, т.к. не влезало всё в 1 строку.
			//description += SPECIAL_names[i] + cr.Param[ ST_STRENGTH + i ] + ":" + cr.ParamBase[ ST_STRENGTH + i ] + " ";
			description += SPECIAL_names[i] + cr.Param[ ST_STRENGTH + i ] + " ";
		}
		description += "\nLVL " + cr.StatBase[ ST_LEVEL ] + " EXP " + cr.StatBase[ ST_EXPERIENCE ] + " SP " + cr.StatBase[ ST_UNSPENT_SKILL_POINTS ] + " PP " + cr.StatBase[ ST_UNSPENT_PERKS ];
		
		player.Say( SAY_DIALOGBOX_TEXT, description );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "SPECIAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "SKILLS" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Травмы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Трейты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Скин/бодитайп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Фракция / Пропуски " );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Доп парам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Лексема" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_CRITTER_NPC_STATS" );
        player.Say( SAY_DIALOGBOX_TEXT, "НПЦ параметры, protoId - " + cr.GetProtoId() + ", диалог - " + cr.ParamBase[ ST_DIALOG_ID ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.ParamBase[ ST_DIALOG_ID ] + "Диалог" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.ParamBase[ ST_AI_ID ] + "AI ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.ParamBase[ ST_NPC_ROLE ] + "NPC ROLE" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.ParamBase[ MERC_MASTER_ID ] + "хозяин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.ParamBase[ ST_TEAM_ID ] + "TEAM_ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 3 )
    {
		player.ParamBase[ ST_LAST_CONT_ID ] = 0;
        player.ShowContainer( cr, null, TRANSFER_FAR_CRIT );
    }
    else if( answerI == 4 )
    {
		unsafe_sleep( cr, Random( 0, 1 ), 1, 0, null, null );
		player.Say( SAY_NETMSG, "Цель " + ( cr.ParamBase[ CR_SLEEPING_STATE ] != 0 ? "не сможет подняться" : "скоро поднимется" ) + "." );
		GM_PANNEL_CRITTER_NPC( player, player.StatBase[ ST_VAR0 ], 0, 0, null, null );
    }
    else if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "item@GmPistol_knockdown" );
    }
	else if( answerI == 6 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@say_GM_GIVE_ITEM" );
        player.Say( SAY_SAY_TITLE, "Укажите PID:" );
		player.ParamBase[ CR_VAL0 ] = 0;
	}
}

void answer_GM_PANNEL_CRITTER_NPC_STATS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ToLife();
        player.ParamBase[ ST_VAR1 ] = ST_DIALOG_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "DIALOG_ID" );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_AI_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "AI_ID" );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_NPC_ROLE;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "NPC_ROLE" );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ ST_VAR1 ] = MERC_MASTER_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "MERC_MASTER_ID" );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ ST_VAR1 ] = ST_TEAM_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "TEAM_ID" );
    }
    if( answerI == 5 )
    {
        GM_PANNEL_CRITTER_NPC( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_NPC_MODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.ParamBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.ModeBase[ MODE_NO_HOME ] == 0 )
            cr.ModeBase[ MODE_NO_HOME ] = 1;
        else
            cr.ModeBase[ MODE_NO_HOME ] = 0;
    }
    if( answerI == 1 )
    {
        if( cr.ModeBase[ MODE_NO_ENEMY_STACK ] == 0 )
            cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 1;
        else
            cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 0;
    }
    if( answerI == 2 )
    {
        if( cr.ModeBase[ MODE_NO_LOOT ] == 0 )
            cr.ModeBase[ MODE_NO_LOOT ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOT ] = 0;
    }
    if( answerI == 3 )
    {
        if( cr.ModeBase[ MODE_NO_STEAL ] == 0 )
            cr.ModeBase[ MODE_NO_STEAL ] = 1;
        else
            cr.ModeBase[ MODE_NO_STEAL ] = 0;
    }
    if( answerI == 4 )
    {
        if( cr.ModeBase[ MODE_NO_PUSH ] == 0 )
            cr.ModeBase[ MODE_NO_PUSH ] = 1;
        else
            cr.ModeBase[ MODE_NO_PUSH ] = 0;
    }
    if( answerI == 5 )
    {
        if( cr.ModeBase[ MODE_NO_WALK ] == 0 )
            cr.ModeBase[ MODE_NO_WALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_WALK ] = 0;
    }
    if( answerI == 6 )
    {
        if( cr.ModeBase[ MODE_NO_RUN ] == 0 )
            cr.ModeBase[ MODE_NO_RUN ] = 1;
        else
            cr.ModeBase[ MODE_NO_RUN ] = 0;
    }
    if( answerI == 7 )
    {
        if( cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] == 0 )
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 0;
    }
    if( answerI == 8 )
    {
        if( cr.ModeBase[ MODE_NO_KNOCK ] == 0 )
            cr.ModeBase[ MODE_NO_KNOCK ] = 1;
        else
            cr.ModeBase[ MODE_NO_KNOCK ] = 0;
    }
    if( answerI == 9 )
    {
        if( cr.ModeBase[ MODE_NO_BARTER ] == 0 )
            cr.ModeBase[ MODE_NO_BARTER ] = 1;
        else
            cr.ModeBase[ MODE_NO_BARTER ] = 0;
    }
    if( answerI == 10 )
    {
        cr.ModeBase[ MODE_BARTER_ONLY_CASH ] = ( cr.ModeBase[ MODE_BARTER_ONLY_CASH ] + 1 ) % 3;
    }
    if( answerI == 11 )
    {
        if( cr.ModeBase[ MODE_NO_TALK ] == 0 )
            cr.ModeBase[ MODE_NO_TALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_TALK ] = 0;
    }
    if( answerI == 12 )
    {
        if( cr.ModeBase[ MODE_UNLIMITED_AMMO ] == 0 )
            cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;
        else
            cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 0;
    }
    if( answerI == 13 )
    {
        if( cr.ModeBase[ MODE_INVULNERABLE ] == 0 )
            cr.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            cr.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
	answer_GM_PANNEL_CRITTER_NPC( player, 0, "" );
}


void unsafe_GM_PANNEL_ITEM( Critter& player, int itemId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
		GM_PANNEL_ITEM( player, itemId, param1, param2, param3, param4 );
}

//import void GM_PANNEL_ITEM( Critter& player, int itemId, int param1, int param2, string@ param3, int[] @ param4 ) from "gm"; 
void GM_PANNEL_ITEM( Critter& player, int itemId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( !isGM( player ) ) return;
    
    Item@ item = GetItem( itemId );
	if( item is null )
		return;
	player.StatBase[ ST_VAR0 ] = itemId;
	
	bool isCont = item.GetType() == ITEM_TYPE_CONTAINER;
	player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_ITEM" );
	player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID = " + item.GetProtoId() + ", ид = " + itemId + ", количество: " + item.GetCount() + "\nСостояние: " + item.Deterioration );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "переменные" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "назначить скрипт" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Изменить № описания" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Изменить картинку" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Флаги №1" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Флаги №2" );
	if( isCont )
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Содержимое" );
	else
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Сломать на %" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Лексема" );
}

uint[] ItemFlags = 
{
	ITEM_HIDDEN								,// 0x00000001 )
	ITEM_FLAT                                ,// 0x00000002 )
	ITEM_NO_BLOCK                            ,// 0x00000004 )
	ITEM_SHOOT_THRU                          ,// 0x00000008 )
	ITEM_LIGHT_THRU                          ,// 0x00000010 )
	ITEM_TWO_HANDS                           ,// 0x00000080 )
	ITEM_BIG_GUN                             ,// 0x00000100 )
	ITEM_ALWAYS_VIEW                         ,// 0x00000200 )
	ITEM_HAS_TIMER                           ,// 0x00000400 )
	ITEM_BAD_ITEM                            ,// 0x00000800 )
	ITEM_NO_HIGHLIGHT                        ,// 0x00001000 )
	ITEM_SHOW_ANIM                           ,// 0x00002000 )
	ITEM_SHOW_ANIM_EXT                       ,// 0x00004000 )
	ITEM_LIGHT                               ,// 0x00008000 )
	ITEM_GECK                                ,// 0x00010000 )
	
	// Group2
	ITEM_TRAP                                ,// 0x00020000 )
	ITEM_NO_LIGHT_INFLUENCE                  ,// 0x00040000 )
	ITEM_NO_LOOT                             ,// 0x00080000 )
	ITEM_NO_STEAL                            ,// 0x00100000 )
	ITEM_GAG                                 ,// 0x00200000 )
	ITEM_COLORIZE                            ,// 0x00400000 )
	ITEM_COLORIZE_INV                        ,// 0x00800000 )
	ITEM_CAN_USE_ON_SMTH                     ,// 0x01000000 )
	ITEM_CAN_LOOK                            ,// 0x02000000 )
	ITEM_CAN_TALK                            ,// 0x04000000 )
	ITEM_CAN_PICKUP                          ,// 0x08000000 )
	ITEM_CAN_USE                             ,// 0x10000000 )
	ITEM_HOLODISK                            ,// 0x20000000 )
	ITEM_RADIO                               // 0x40000000 )
};

string[] ItemFlagsName = 
{
	"HIDDEN"								,// 0x00000001 )
	"FLAT"                                ,// 0x00000002 )
	"NO_BLOCK"                            ,// 0x00000004 )
	"SHOOT_THRU"                          ,// 0x00000008 )
	"LIGHT_THRU"                          ,// 0x00000010 )
	"TWO_HANDS"                           ,// 0x00000080 )
	"BIG_GUN"                             ,// 0x00000100 )
	"ALWAYS_VIEW"                         ,// 0x00000200 )
	"HAS_TIMER"                           ,// 0x00000400 )
	"BAD_ITEM"                            ,// 0x00000800 )
	"NO_HIGHLIGHT"                        ,// 0x00001000 )
	"SHOW_ANIM"                           ,// 0x00002000 )
	"SHOW_ANIM_EXT"                       ,// 0x00004000 )
	"LIGHT"                              ,// 0x00008000 )
	"GECK"                                ,// 0x00010000 )
	
	// Group2
	"TRAP"                                ,// 0x00020000 )
	"NO_LIGHT_INFLUENCE"                  ,// 0x00040000 )
	"NO_LOOT"                             ,// 0x00080000 )
	"NO_STEAL"                            ,// 0x00100000 )
	"GAG"                                 ,// 0x00200000 )
	"COLORIZE"                            ,// 0x00400000 )
	"COLORIZE_INV"                        ,// 0x00800000 )
	"CAN_USE_ON_SMTH"                     ,// 0x01000000 )
	"CAN_LOOK"                            ,// 0x02000000 )
	"CAN_TALK"                            ,// 0x04000000 )
	"CAN_PICKUP"                          ,// 0x08000000 )
	"CAN_USE"                             ,// 0x10000000 )
	"HOLODISK"                           ,// 0x20000000 )
	"RADIO"                               // 0x40000000 )
};

import void GM_brokeItem( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 ) from "debug";

void show_GM_VAL_PANNEL( Critter& player, Item& item )
{
	player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_ITEM_VALS" );
	player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+item.Val0 +" Val0" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+item.Val1 +" Val1" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+item.Val2 +" Val2" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+item.Val3 +" Val3" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+item.Val4 +" Val4" );
	player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+item.Val5 +" Val5" );
	player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+item.Val6 +" Val6" );
	player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+item.Val7 +" Val7" );
	player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+item.Val8 +" Val8" );
	player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+item.Val9 +" Val9" );
	player.Say( SAY_DIALOGBOX_BUTTON( 10 ), ""+item.LockerId +" Locker id" );
	player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ""+item.LockerComplexity +" Complexity" );
	player.Say( SAY_DIALOGBOX_BUTTON( 12 ), ""+item.LockerCondition +" Condition" );
	player.Say( SAY_DIALOGBOX_BUTTON( 13 ), ""+item.Info +" Info" );
}

void answer_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( item is null ) return;
    if( answerI == 0 )
    {
		show_GM_VAL_PANNEL( player, item );
    }
	if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 3, "answer_GM_PANNEL_ITEM_SCRIPT" );
        player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "верстак");
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "печка");
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "УДАЛИТЬ ОБЪЕКТ");
    }
	if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM_DESC" );
        player.Say( SAY_SAY_TITLE, "Info #" );
	}
	if( answerI == 3 )
	{
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM_PICTURE" );
        player.Say( SAY_SAY_TITLE, "Picture PID #:" );
	}
	if( answerI == 4 )
	{
		player.ShowScreen( SCREEN_DIALOGBOX, 16, "answer_GM_PANNEL_ITEM_Flags0" );
		player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "[НАЗАД]" );
		for( uint i = 0; i < 15; i++ )
			player.Say( SAY_DIALOGBOX_BUTTON( i+1 ), ItemFlagsName[i] + ": " + FLAG( item.Flags, ItemFlags[i] ) );
	}
	if( answerI == 5 )	
	{
		player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_ITEM_Flags1" );
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "[НАЗАД]" );
		player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
		for( uint i = 0; i < 14; i++ )
			player.Say( SAY_DIALOGBOX_BUTTON( i+1 ), ItemFlagsName[ i + 15 ] + ": " + FLAG( item.Flags, ItemFlags[i + 15] ) );
	}
	if( answerI == 6 )
	{
		if( item.GetType() == ITEM_TYPE_CONTAINER )
		{
			player.ParamBase[ ST_LAST_CONT_ID ] = item.Id;
			player.ShowContainer( null, item, TRANSFER_FAR_CONT );
		}
		else
		{
			player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM_BREAK" );
			player.Say( SAY_SAY_TITLE, "Сломать на %:" );
		}
	}
	if( answerI == 7 )
	{
		player.Say( SAY_NETMSG, "Что в этом предмете особенного?" );
		player.StatBase[ ST_LAST_DOOR_ID ] = item.Id;
		player.StatBase[ ST_LAST_CONT_ID ] = item.Accessory;
		ShowInputBoxScreen( player, "main@unsafe_MakeDescLex#Описание:", 0, INPUTBOX_CLOSE_ON_ENTER );
	}
}

void ask_GM_PANNEL_ITEM_BREAK( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( item is null ) return;
	
	int number = 0;
	if( answerS.length() < 1 || !StrToInt( answerS, number ) )
		return;
	
	GM_brokeItem( player, item.Id, number * 100, 0, null, null );
}

void setItemFlags( Critter& player, uint n )
{
    Item@ item = GetItem( player.Stat[ ST_VAR0 ] );
    if( @item is null ) return;
	if( FLAG( item.Flags, ItemFlags[n] ) )
		UNSETFLAG( item.Flags, ItemFlags[n] );
	else SETFLAG( item.Flags, ItemFlags[n] );
}

void answer_GM_PANNEL_ITEM_Flags0( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
	{
		GM_PANNEL_ITEM( player, player.StatBase[ ST_VAR0 ], 0, 0, null, null );
		return;
	}
	setItemFlags( player, answerI-1 );
	answer_GM_PANNEL_ITEM( player, 4, "" );
}

void answer_GM_PANNEL_ITEM_Flags1( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
	{
		int[] vals = {};
		GM_PANNEL_ITEM( player, player.StatBase[ ST_VAR0 ], 0, 0, "", vals );
		return;
	}
    setItemFlags( player, (answerI-1) + 15 );
	answer_GM_PANNEL_ITEM( player, 5, "" );
}

void ask_GM_PANNEL_ITEM_DESC( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( item is null ) return;
	
	int number = 0;
	if( answerS.length() < 1 || !StrToInt( answerS, number ) )
		return;
	
	item.Info = 1;
	item.Val9 = number;
	item.Update();
	player.Say( SAY_NETMSG, "Теперь этот объет имеет описание №" + item.Val9 + "." );
}

void ask_GM_PANNEL_ITEM_PICTURE( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( item is null ) return;
	
	int number = 0;
	if( answerS.length() < 1 || !StrToInt( answerS, number ) || number <= 0 )
		return;
	
	uint hash = 0;
	ProtoItem@ proto = GetProtoItem( number );
	if( @proto !is null )
		hash = proto.PicMap;
	
	if( hash != 0 )
		unsafe_GM_ChangeItemPicture( player, item.Id, hash, 0, null, null );
	else
		player.Say( SAY_NETMSG, "Такой объект не найден." );

	GM_PANNEL_ITEM( player, item.Id, 0, 0, null, null );
}

import void MakeFurnace( Critter& player, int id, int p1, int p2 ) from "test";

void answer_GM_PANNEL_ITEM_SCRIPT( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( item is null )
		return;

    if( answerI == 0 )
    {
		//if( item.GetProtoId() != 157 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		SetWorkbench( player, item.Id, 0, 0 );
    }
	if( answerI == 1 )
	{
		MakeFurnace( player, player.StatBase[ ST_VAR0 ], 0, 0 );
	}
	if( answerI == 2 ) 
	{
		DeleteItem( item );
	}
}

void answer_GM_PANNEL_ITEM_VALS( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( item is null )
		return;
	player.ParamBase[ ST_VAR1 ] = answerI;
	player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM" );
	player.Say( SAY_SAY_TITLE, "Val"+answerI);
}

void ask_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
	if( item is null ) return;

    if( answerS.length() > 0 )
    {
        int val_number = player.StatBase[ ST_VAR1 ];
        int number = 0;
        StrToInt( answerS, number );
		switch( val_number )
		{
			case  0: item.Val0=number;  break;
			case  1: item.Val1=number;  break;
			case  2: item.Val2=number;  break;
			case  3: item.Val3=number;  break;
			case  4: item.Val4=number;  break;
			case  5: item.Val5=number;  break;
			case  6: item.Val6=number;  break;
			case  7: item.Val7=number;  break;
			case  8: item.Val8=number;  break;
			case  9: item.Val9=number;  break;
			case  10: item.LockerId=number; break;
			case  11: item.LockerComplexity=number; break;
			case  12: item.LockerCondition=number; break;
			case  13: item.Info=number; break;	  
		}
		item.Update();
		
        player.Say( SAY_NETMSG, "Вы изменили val" + val_number + " на " + number + " у предмета " + item.Id + "." );

		show_GM_VAL_PANNEL( player, item );
    }
}


void unsafe_GM_PANNEL_HEX( Critter& player, int hexX, int hexY, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
		GM_PANNEL_HEX( player, hexX, hexY, param2, param3, param4 );
}


void GM_PANNEL_HEX( Critter& player, int hexX, int hexY, int param2, string@ param3, int[] @ param4 )
{
	player.ParamBase[ MERC_LOSE_DIST ] = hexX;
	player.ParamBase[ MERC_MASTER_DIST ] = hexY;
	//string[] data = { "answer_GM_PANNEL_HEX", "Действия с пустым гексом x " + hexX + " y " + hexY, "Спаун НПЦ", "Повтор спауна НПЦ", "Спаун группы", "Спецэффект", "Спаун предмета" }; //TODO: Спаун ~desc
	string[] data = { "answer_GM_PANNEL_HEX", "Действия с пустым гексом x " + hexX + " y " + hexY, "Повтор спауна НПЦ", "Спаун НПЦ", "Спаун предмета", "ФРИЗ РП" };
	DIALOG_MENU( player, data );
}

/*
	TODO: Рандомизация.
	{ "Поведение", "Спаун НПЦ", "Повтор НПЦ", "Спаун Группы" }
	TODO: Спаун группы спаунит заодно доп лут в контейнерах / на земле.
	НПЦ - Категория - Прототип - Сила(бонусы) - Лут/дроп
	Группа - Категория - Подвид - Имя набора - Мощность(количество+сила+лут НПЦ)
*/

/*
//Поведения:
string[] behaviors = { "mob@_MobInit" };

class PackedItem
{ //Предмет в пачке. Name должен быть коротким, т.к. будет перечислен в маленьком окошке.
	string Name;
	uint Pid;
	uint Count;
	uint Deterioration;
	bool InHand;
	bool IsArmor;
	
	// //TODO: Рандомизация лута.
	// uint Chance; //Шанс появления предмета в инвентаре.
	// //Количество:
	// uint minCount;
	// uint maxCount;
	// //Качество:
	// uint minDet;
	// uint maxDet;
	
	// //Как альтернатива - добавить предметам стоимость в "баллах", и в зависимости от ролла, спаунить "объём, который можно купить на них".
	// uint Cost;
	
	PackedItem( string name, uint pid, uint count, uint deterioration, bool inHand, bool isArmor )
	{
		Name = name;
		Pid = pid;
		Count = count;
		Deterioration = deterioration;
		InHand = inHand;
		IsArmor = isArmor;
	}
}


class WeaponPack
{ //Набор вещей, "пачка".
	string Name;
	PackedItem[] items;
	
	WeaponPack( string name )
	{
		Name = name;
		items.resize(0);
	}
	
	WeaponPack Add( PackedItem item )
	{
		return this;
	}
}

class BonusParam
{
	string Name;
	uint Num;
	uint Val;
	
	BonusParam( string name, uint num, uint val )
	{
		Name = name;
		Num = num;
		Val = val;
	}
}

class BonusPack
{
	string Name;
	BonusParam[] Params;
	
	BonusPack( string name )
	{
		Name = name;
	}
	
}

class SpawnCrit
{
	//Паки: { {Пак1}, {Пак2} };
	uint pid;
	string name;
	WeaponPack[] weapons; 
	BonusPack] bonuses;
}

class CritGroup
{
	string Name;
	SpawnCrit[] crits
	CritGroup( string name )
	{
		Name = name;
	}
}
 */
bool SpawnCritInited = false;

void Init_SpawnCritters() {
	if(SpawnCritInited) return;
	
	SpawnCritInited = true;
}

//int[] params = { ST_DIALOG_ID, obj.DialogId, ST_BAG_ID, BAG_Empty, ST_TEAM_ID, teamId, ST_REPLICATION_TIME, -1 };
//Critter @ npc = map.AddNpc( pid, tempX, tempY, DIR Random( 0, 5 ), params, items, "mob@_MobInit" );

void gun( Critter& player, int p0, int p1, int p2 )
{
}

void answer_GM_PANNEL_HEX( Critter& player, uint answerI, string& answerS )
{
	//player.Say( SAY_NETMSG, "В разработке, уж простите, это сложная хрень." );
	// unsafe_GM_PANNEL_HEX( player, player.ParamBase[ CR_HEXX ], player.ParamBase[ CR_HEXY ], 0, null, null );
	// return;
    int 
        hexX = player.ParamBase[ MERC_LOSE_DIST ],
        hexY = player.ParamBase[ MERC_MASTER_DIST ],
		//param = player.ParamBase[ CR_VAL0 ];
		type = player.ParamBase[ MERC_DEFEND_MASTER ],
        weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
        AI_type = player.ParamBase[ MERC_TYPE ],
        bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
        bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];
    
	if( answerI == 0 )
    {
        Map@ map = player.GetMap();
		if( valid(map) )
			GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 1 )
    {
        string plead;
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_HEX_SPAWN" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите тип спавна нпц, АИ=" + AI_type + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "АИ = " + AI_type );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "животные" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "монстры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "гражданские" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "разное" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "бонус хп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "бонус дмг" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "бонус скил" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "назад" );
    }
	if( answerI == 2 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_ADD_ITEM_HEX" );
		player.Say( SAY_SAY_TITLE, "PID предмета:" );
	}
	if( answerI == 3 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_STOP_ALL" );
		player.Say( SAY_SAY_TITLE, "Радиус:" );
		player.ParamBase[ CR_VAL0 ] = 0;
	}
}

import void unsafe_GM_stop( Critter& player, int radius, int delay, int, string@, int[]@ coord ) from "general_unsafe";

void ask_GM_STOP_ALL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.StatBase[ ST_VAR0 ] );
    if( cr is null ) return;

	int number = 0;
	if( !StrToInt( answerS, number ) || number <= 0 )
	{
		player.Say( SAY_NETMSG, "Неверное число." );
		answer_GM_PANNEL_HEX( player, 3, "" );
		return;
	}
	if( player.ParamBase[ CR_VAL0 ] == 0 )
	{
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_STOP_ALL" );
		player.Say( SAY_SAY_TITLE, "ОД:" );
		player.ParamBase[ CR_VAL0 ] = number; //радиус
	}
	else
	{
		int[] cord = { player.ParamBase[ MERC_LOSE_DIST ], player.ParamBase[ MERC_MASTER_DIST ] };
		unsafe_GM_stop( player, player.ParamBase[ CR_VAL0 ], number, 0, null, cord );
		player.ParamBase[ CR_VAL0 ] = 0;
	}
}

void ask_GM_ADD_ITEM_HEX( Critter& player, uint answerI, string& answerS )
{
	int	pid = 0,
		hexX = player.ParamBase[ MERC_LOSE_DIST ],
		hexY = player.ParamBase[ MERC_MASTER_DIST ];
	
	Map@ map = player.GetMap(); if(!valid(map)) return;
	Item@ item;
	
	if( StrToInt( answerS, pid ) && pid > 0 )
	{
		@item = map.AddItem( hexX, hexY, pid, 1 );
		if( !valid(item) )
		{
			player.Say( SAY_NETMSG, "Не удалось." );
			return;
		}
		GM_PANNEL_ITEM( player, item.Id, 0, 0, null, null );
	}
	else
	{
		player.Say( SAY_NETMSG, "Айди предмета некорректен." );
		answer_GM_PANNEL_HEX( player, 2, "" );
	}
}

void answer_GM_PANNEL_HEX_SPAWN( Critter& player, uint answerI, string& answerS )
{
    int AI_type = player.ParamBase[ MERC_TYPE ],
        weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
        bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
        bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_HEX_SPAWN_AI" );
        player.Say( SAY_DIALOGBOX_TEXT, "АИ, текущее - " + player.ParamBase[ MERC_TYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - контроль" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - животн" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - агрессия" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - охрана" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - лидер" );
		player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 - миньон" );
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 - болванка" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_HEX_SPAWN_ANIMAL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид животного, АИ=" + AI_type + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "крыса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "мантис" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "муравей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "свинокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "кротокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "большой кротокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "гекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "золотой гекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "собака" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "малый скорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "большой скорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "брамин" );
		player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "хищ.цвет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_HEX_SPAWN_MONSTER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид монстра, АИ=" + AI_type + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "чужой" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "малый коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "большой коготь" );
		player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "серый коготь" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "огнегекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "летун" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "болотник" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_HEX_SPAWN_RAIDER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид рейдера, АИ=" + AI_type + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill + ", оружие=" + weapon );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "кан.+нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "кан.+копье" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "кан.ж +нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "кан.ж +мяч" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "рейдер+дубин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "рейдер+нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "рейдер+винтов" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "рейдер+пистолет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "рейдерша+пистолет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "рейдерша+копье" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "рейдерша+пп" );
    }
    if( answerI == 4 )
    {
        player.Say( SAY_NETMSG, "В разработке." );
    }
    if( answerI == 5 )
    {
        player.Say( SAY_NETMSG, "В разработке." );
    }
    if( answerI == 6 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_HEX_SPAWN_RANDOM" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид криттера, АИ=" + AI_type + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill + ", оружие=" + weapon );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Муз. автомат" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "ББ пуст. Ж" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "ББ пуст. М" );
		player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "ББ сер. Ж" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "ББ сер. М" );
		player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "ББ кра. Ж" );
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "ББ кра. М" );
    }
    if( answerI == 7 )
    {
        player.ParamBase[ ST_VAR1 ] = MERC_CANCEL_TIME;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус хп" );
    }
    if( answerI == 8 )
    {
        player.ParamBase[ ST_VAR1 ] = MERC_CANCEL_ON_GLOBAL;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус дмг" );
    }
    if( answerI == 9 )
    {
        player.ParamBase[ ST_VAR1 ] = MERC_WAIT_FOR_MASTER;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус скилл" );
    }
    if( answerI == 10 )
    {
        GM_PANNEL_HEX( player, player.ParamBase[ MERC_LOSE_DIST ], player.ParamBase[ MERC_MASTER_DIST ], 0, null, null );
    }

}

void answer_GM_PANNEL_HEX_EFFECTS( Critter& player, uint answerI, string& answerS ) //Дождь
{
	Map@  map = player.GetMap();
	if( !valid(map) ) return;
	
    if( answerI > 0 )
		map.PlaySound( "Groza_1.ogg" );
	else
		map.PlaySound( "DULL.ogg" );//Не работает, как хотелось бы.
	map.SetRain( answerI * 50 );
}

void answer_GM_PANNEL_MUSIC( Critter& player, uint answerI, string& answerS ) //Музыка
{
	Map@  map = player.GetMap();
	PlayMusic( map, music_names[answerI], 1, 1 );
}

void answer_GM_PANNEL_HEX_SPAWN_AI( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ParamBase[ MERC_TYPE ] = 0;
        player.Say( SAY_NETMSG, "Режим спавна - контроль." );
    }
    if( answerI == 1 )
    {
        player.ParamBase[ MERC_TYPE ] = 1;
        player.Say( SAY_NETMSG, "Режим спавна - животное." );
    }
    if( answerI == 2 )
    {
        player.ParamBase[ MERC_TYPE ] = 2;
        player.Say( SAY_NETMSG, "Режим спавна - атака." );
    }
    if( answerI == 3 )
    {
        player.ParamBase[ MERC_TYPE ] = 3;
        player.Say( SAY_NETMSG, "Режим спавна - охрана." );
    }
    if( answerI == 4 )
    {
        player.ParamBase[ MERC_TYPE ] = 4;
        player.Say( SAY_NETMSG, "Режим спавна - лидер." );
    }
    if( answerI == 5 )
    {
        player.ParamBase[ MERC_TYPE ] = 5;
        player.Say( SAY_NETMSG, "Режим спавна - миньон." );
    }	
    if( answerI == 6 )
    {
        player.ParamBase[ MERC_TYPE ] = 6;
        player.Say( SAY_NETMSG, "Режим спавна - болванка." );
    }
}

void answer_GM_PANNEL_HEX_SPAWN_ANIMAL( Critter& player, uint answerI, string& answerS )
{
    if( answerI >= 0 && answerI <= 12 )
    {
        Map@ map = player.GetMap();
        player.ParamBase[ MERC_DEFEND_MASTER ] = answerI + 310;
        player.ParamBase[ MERC_ASSIST_MASTER ] = 0;

        int type = player.ParamBase[ MERC_DEFEND_MASTER ],
            weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
            AI_type = player.ParamBase[ MERC_TYPE ],
            hexX = player.ParamBase[ MERC_LOSE_DIST ],
            hexY = player.ParamBase[ MERC_MASTER_DIST ],
            bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
            bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
            bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];

        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    else if( answerI == 13 )
        GM_PANNEL_HEX( player, player.ParamBase[ MERC_LOSE_DIST ], player.ParamBase[ MERC_MASTER_DIST ], 0, null, null );
}

void answer_GM_PANNEL_HEX_SPAWN_MONSTER( Critter& player, uint answerI, string& answerS )
{
    if( answerI >= 0 && answerI <= 7 )
    {
        Map@ map = player.GetMap();
        player.ParamBase[ MERC_DEFEND_MASTER ] = answerI + 323;
        player.ParamBase[ MERC_ASSIST_MASTER ] = 0;

        int type = player.ParamBase[ MERC_DEFEND_MASTER ],
            weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
            AI_type = player.ParamBase[ MERC_TYPE ],
            hexX = player.ParamBase[ MERC_LOSE_DIST ],
            hexY = player.ParamBase[ MERC_MASTER_DIST ],
            bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
            bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
            bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];

        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    else if( answerI == 8 )
        GM_PANNEL_HEX( player, player.ParamBase[ MERC_LOSE_DIST ], player.ParamBase[ MERC_MASTER_DIST ], 0, null, null );
}

void answer_GM_PANNEL_HEX_SPAWN_RAIDER( Critter& player, uint answerI, string& answerS )
{
    int type = player.ParamBase[ MERC_DEFEND_MASTER ],
        weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
        AI_type = player.ParamBase[ MERC_TYPE ],
        hexX = player.ParamBase[ MERC_LOSE_DIST ],
        hexY = player.ParamBase[ MERC_MASTER_DIST ],
        bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
        bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];

    if( answerI == 0 )
    {
        Map@ map = player.GetMap();
        type = 335;
        if( weapon == 0 )
        {
            weapon = PID_REVKNIFE1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REVKNIFE2;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 1 )
    {
        Map@ map = player.GetMap();
        type = 335;
        if( weapon == 0 )
        {
            weapon = PID_SPEAR;
            if( Random( 0, 5 ) == 0 )
                weapon = PID_SPEAK_P;
        }
		
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 2 )
    {
        Map@ map = player.GetMap();
        type = 336;
        if( weapon == 0 )
        {
            weapon = PID_REVKNIFE1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REVKNIFE2;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 3 )
    {
        Map@ map = player.GetMap();
        type = 336;
        if( weapon == 0 )
        {
            weapon = PID_REV_BALL1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REV_BALL2;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 4 )
    {
        Map@ map = player.GetMap();
        type = 337;
        if( weapon == 0 )
        {
            weapon = PID_IRON_PROD;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_CHAIN;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 5 )
    {
        Map@ map = player.GetMap();
        type = 337;
        if( weapon == 0 )
        {
            weapon = PID_KNIFE;
            if( Random( 0, 3 ) == 0 )
                weapon = PID_SWITCHBLADE;
            else if( Random( 0, 2 ) == 0 )
                weapon = PID_SHIV;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 6 )
    {
        Map@ map = player.GetMap();
        type = 337;
        if( weapon == 0 )
        {
            weapon = PID_PISTOL_LOW;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REVOLVER_LOW;
            else if( Random( 0, 1 ) == 0 )
                weapon = PID_ZIP_GUN;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 7 )
    {
        Map@ map = player.GetMap();
        type = 337;
        if( weapon == 0 )
        {
            weapon = PID_SPRINGER_RIFLE;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REV_RIFLE_LOW;
            else if( Random( 0, 5 ) == 0 )
                weapon = PID_GECKO_LOW;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 8 )
    {
        Map@ map = player.GetMap();
        type = 338;
        if( weapon == 0 )
        {
            weapon = PID_PISTOL_LOW;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REVOLVER_LOW;
            else if( Random( 0, 1 ) == 0 )
                weapon = PID_ZIP_GUN;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 9 )
    {
        Map@ map = player.GetMap();
        type = 338;
        if( weapon == 0 )
        {
            weapon = PID_SPEAR;
            if( Random( 0, 5 ) == 0 )
                weapon = PID_SPEAK_P;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 10 )
    {
        Map@ map = player.GetMap();
        type = 338;
        if( weapon == 0 )
            weapon = PID_DRUM_GUN_LOW;
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
}

void answer_GM_PANNEL_HEX_SPAWN_MUTANT( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
    }
}

void answer_GM_PANNEL_HEX_SPAWN_RANDOM( Critter& player, uint answerI, string& answerS )
{
    int type = player.ParamBase[ MERC_DEFEND_MASTER ],
        weapon = player.ParamBase[ MERC_ASSIST_MASTER ],
        AI_type = player.ParamBase[ MERC_TYPE ],
        hexX = player.ParamBase[ MERC_LOSE_DIST ],
        hexY = player.ParamBase[ MERC_MASTER_DIST ],
        bonus_hp = player.ParamBase[ MERC_CANCEL_TIME ],
        bonus_dmg = player.ParamBase[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.ParamBase[ MERC_WAIT_FOR_MASTER ];

    if( answerI == 0 )
    {
        Map@ map = player.GetMap();
        type = 536;
		player.ParamBase[ MODE_NO_KNOCK ] = 1;
		player.ParamBase[ MODE_NO_WALK ] = 1;
		player.ParamBase[ MODE_NO_PUSH ] = 1;
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 1 )
    {
        Map@ map = player.GetMap();
        type = 530;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 2 )
    {
        Map@ map = player.GetMap();
        type = 531;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 3 )
    {
        Map@ map = player.GetMap();
        type = 528;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 4 )
    {
        Map@ map = player.GetMap();
        type = 529;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 5 )
    {
        Map@ map = player.GetMap();
        type = 540;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 6 )
    {
        Map@ map = player.GetMap();
        type = 541;
        if( weapon == 0 )
        {
            if( Random( 0, 15 ) == 0 )
                weapon = PID_10MM_PISTOL;
            else if( Random( 0, 15 ) == 1 )
                weapon = PID_ASSAULT_RIFLE;
			else if( Random( 0, 15 ) == 2 )
				weapon = PID_HUNTING_RIFLE;
			else if( Random( 0, 15 ) == 3 )
				weapon = PID_LASER_PISTOL_LOW2;
			else if( Random( 0, 15 ) == 4 )
				weapon = PID_14mm_BIGGUN2_LOW;
			else if( Random( 0, 15 ) == 5 )
				weapon = PID_ASSAULT_RIFLE;
            else if( Random( 0, 15 ) == 6 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 7 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 8 )
				weapon = PID_SNIPER_RIFLE;
			else if( Random( 0, 15 ) == 9 )
				weapon = PID_CATTLE_PROD;
			else if( Random( 0, 15 ) == 10 )
				weapon = PID_POWER_FIST;
            else if( Random( 0, 15 ) == 11 )
                weapon = PID_LASER_RIFLE_LOW;
			else if( Random( 0, 15 ) == 12 )
				weapon = PID_SAWED_OFF_SHOTGUN;
			else if( Random( 0, 15 ) == 13 )
				weapon = PID_SUPER_SLEDGE;
			else if( Random( 0, 15 ) == 14 )
				weapon = PID_RIPPER;
			else if( Random( 0, 15 ) == 15 )
				weapon = PID_FRAG_GRENADE;
        }
        GM_SPAWN( player, map, type, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
}


void Log_Killings( Critter& player, int target, int param1, int param2, string@ param3, int[] @ param4 )
{
    file f;
    if( f.open( "logs\\killings.txt", "a" ) >= 0 )
    {
        string type;
        if( player.Param[ QST_GAMEMODE ] == GAME_START )
            type = "Старт";
        else if( player.Param[ QST_GAMEMODE ] == GAME_ADVENTURE )
            type = "Прикл.";
        else if( player.Param[ QST_GAMEMODE ] == GAME_SURVIVAL )
            type = "Выжив.";
        else if( player.Param[ QST_GAMEMODE ] == GAME_ARCADE )
            type = "Аркада";
        else if( player.Param[ QST_GAMEMODE ] == GAME_TEST )
            type = "Тест";
        if( isGM( player ) )
            type += " ГМ";
        else if( player.GetAccess() > ACCESS_MODER )
            type += " Админ";
        else
            type = "ошибка";
        string type2;
        if( GetCritter( target ).Param[ QST_GAMEMODE ] == GAME_START )
            type2 = "Старт";
        else if( GetCritter( target ).Param[ QST_GAMEMODE ] == GAME_ADVENTURE )
            type2 = "Прикл.";
        else if( GetCritter( target ).Param[ QST_GAMEMODE ] == GAME_SURVIVAL )
            type2 = "Выжив.";
        else if( GetCritter( target ).Param[ QST_GAMEMODE ] == GAME_ARCADE )
            type2 = "Аркада";
        else if( GetCritter( target ).Param[ QST_GAMEMODE ] == GAME_TEST )
            type2 = "Тест";
        else
            type = "ошибка";
        string date = TimeToString( player );
        Map@   map = player.GetMap();
        string place;
        if( map.GetProtoId() == 1 )
            place = "богатый район";
        else if( map.GetProtoId() == 4 )
            place = "административный";
        else if( map.GetProtoId() == 6 )
            place = "рабочий район";
        else if( map.GetProtoId() == 9 )
            place = "бедный район";
        else if( map.GetProtoId() == 10 )
            place = "ворота модока";
        else if( map.GetProtoId() == 13 )
            place = "лесопилка модока";
        else
            place = map.GetProtoId();
        f.writeString( "" + date + "\t" + place + "\t" + type + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " убил " + type2 + " " + "\t" + target + "\t" + GetPlayerName( target ) + "\n" );
        f.close();
        Critter@[] crs;
        GetAllPlayers( crs );
        string str = "|0xFFFF0000 <|0xFFFFFF00 " + type  + " " + GetPlayerName( player.Id ) + " (" + player.Id + ")  " + " убил " + type2 + " " + GetPlayerName( target ) + " (" + target + ")|0xFFFF0000 > |0xFFBB33CC ";
        for( uint i = 0, j = crs.length(); i < j; i++ )
        {
            if( crs[ i ] is null or !isGM( crs[ i ] ) )
                continue;
            crs[ i ].Say( SAY_NETMSG, str );
        }
    }
}

void Log_GM( Critter& player, int crId, int action, int param0, int param1, int param2 )
{
    string   crname;
    Critter@ cr = GetCritter( crId );
    if( cr !is null )
        crname = GetPlayerName( crId );
    string date = TimeToString( player );

    if( action == GM_ACTIVATION )
    {
        string pass;
        if( param0 == 0 )
        {
            if( param1 == 0 )
                pass = "чужака";
            if( param1 == 11 )
                pass = "гостя";
            if( param1 == 12 )
                pass = "гражданина";
        }
        else if( param0 == 1 )
            pass = "принудительно чужака";
        else if( param0 == 2 )
            pass = "принудительно гостя";
        else if( param0 == 3 )
            pass = "принудительно гражданина";
        else if( param0 == 4 )
            pass = "принудительно выживальца";

        file f;
        if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "r" ) < 0 )
        {
            if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "w" ) >= 0 )
            {
                f.close();
            }
            else
                Log( "cant create log file for GM , ID = " + player.Id );
        }
        if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + " активировал " + crId + " " + crname + " как " + pass + "\n" );
            f.close();
        }
        if( f.open( "logs\\gm\\activations.txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " активировал " + crId + " " + crname + " как " + pass + "\n" );
            f.close();
        }
    }
}

void Log_Crims( Critter& player, int target, int param1, int param2, string@ param3, int[] @ param4 )
{
    file f;
    if( f.open( "logs\\crims.txt", "a" ) >= 0 )
    {
        string date = TimeToString( player );
        f.writeString( "" + date + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " лутал охотки с гвардов" + "\n" );
        f.close();
    }
}

void Log_Lockpick( Critter& player, int lock, int force, int succes, string@ param3, int[] @ param4 )
{
    string type;
    if( player.Param[ QST_GAMEMODE ] == GAME_START )
        type = "Старт";
    else if( player.Param[ QST_GAMEMODE ] == GAME_ADVENTURE )
        type = "Прикл.";
    else if( player.Param[ QST_GAMEMODE ] == GAME_SURVIVAL )
        type = "Выжив.";
    else if( player.Param[ QST_GAMEMODE ] == GAME_ARCADE )
        type = "Аркада";
    else if( player.Param[ QST_GAMEMODE ] == GAME_TEST )
        type = "Тест";
    if( isGM( player ) )
        type += " ГМ";
    else if( player.GetAccess() > ACCESS_MODER )
        type += " Админ";
    else
        type = "ошибка";
    Map@   map = player.GetMap();
    string place;
    if( map.GetProtoId() == 1 )
        place = "богатый район";
    else if( map.GetProtoId() == 4 )
        place = "административный";
    else if( map.GetProtoId() == 6 )
        place = "рабочий район";
    else if( map.GetProtoId() == 9 )
        place = "бедный район";
    else if( map.GetProtoId() == 10 )
        place = "ворота модока";
    else if( map.GetProtoId() == 13 )
        place = "лесопилка модока";
    else
        place = map.GetProtoId();
    string date = TimeToString( player );

    Item@  locker = GetItem( lock );
    string compl = locker.LockerComplexity;

    if( force == 0 )
    {
        file f;
        if( f.open( "logs\\lockpick.txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " вскрывал замок " + lock + " сложностью " + compl +" в " + "\t" + place + "\n" );
            f.close();
        }
    }
    if( force == 0 && succes == 1 )
    {
        file f;
        if( f.open( "logs\\lockpick.txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " успешно вскрыл замок " + lock + " сложностью " + compl +" в " + "\t" + place + "\n" );
            f.close();
        }
    }
    if( force == 1 )
    {
        file f;
        if( f.open( "logs\\lockpick.txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " ломал замок " + lock + " сложностью " + compl +" в " + "\t" + place + "\n" );
            f.close();
        }
    }
}

void Log_Steal( Critter& player, int target, int item, int succes, string@ param3, int[] @ param4 )
{
    string type;
    if( player.Param[ QST_GAMEMODE ] == GAME_START )
        type = "Старт";
    else if( player.Param[ QST_GAMEMODE ] == GAME_ADVENTURE )
        type = "Прикл.";
    else if( player.Param[ QST_GAMEMODE ] == GAME_SURVIVAL )
        type = "Выжив.";
    else if( player.Param[ QST_GAMEMODE ] == GAME_ARCADE )
        type = "Аркада";
    else if( player.Param[ QST_GAMEMODE ] == GAME_TEST )
        type = "Тест";
    if( isGM( player ) )
        type += " ГМ";
    else if( player.GetAccess() > ACCESS_MODER )
        type += " Админ";
    else
        type = "ошибка";
    Map@   map = player.GetMap();
    string place;
    if( map.GetProtoId() == 1 )
        place = "богатый район";
    else if( map.GetProtoId() == 4 )
        place = "административный";
    else if( map.GetProtoId() == 6 )
        place = "рабочий район";
    else if( map.GetProtoId() == 9 )
        place = "бедный район";
    else if( map.GetProtoId() == 10 )
        place = "ворота модока";
    else if( map.GetProtoId() == 13 )
        place = "лесопилка модока";
    else
        place = map.GetProtoId();
    string   date = TimeToString( player );

    string   targetname = "";
    Critter@ cr = GetCritter( target );
    if( cr.IsPlayer() )
        targetname = GetPlayerName( target );

    file f;
    if( f.open( "logs\\steal.txt", "a" ) >= 0 )
    {
        f.writeString( "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " украл у " + "\t" + target + "\t" + targetname + " предмет " + item + " в " + "\t" + place + "\n" );
        f.close();
    }
}

void Log_factions( Critter& player, int crId, int mode, int level, string@ param3, int[] @ param4 )
{
    string type;
    string acces;
    if( isGM( player ) )
        acces = "ГМ  ";
    else if( player.GetAccess() > ACCESS_MODER )
        acces = "Админ  ";
    string date = TimeToString( player );
    file   f;
    if( f.open( "logs\\factions.txt", "a" ) >= 0 )
    {
        if( mode == 0 )              // режимы игры
        {
            if( level == 0 )
                type = "Старт";
            else if( level == 1 )
                type = "Прикл.";
            else if( level == 2 )
                type = "Выжив.";
            else if( level == 3 )
                type = "Аркада";
            else if( level == 4 )
                type = "Тест";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил режим игры -  " + crId + "\t" + GetPlayerName( crId ) + "\t" + "\t на   " + type + "\n" );
        }
        else if( mode == 1 )              // доступ в город
        {
            if( level == 0 )
                type = "Чужой";
            else if( level == 1 )
                type = "врем. гость";
            else if( level == 2 )
                type = "гость";
            else if( level == 3 )
                type = "гражданин";
            else if( level == 4 )
                type = "богатый гражданин";
            else if( level == 10 )
                type = "изгой";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил пропуск -  " + crId + "\t" + GetPlayerName( crId ) + "\t" + "\t на   " + type + "\n" );
        }
        else if( mode == 2 )              // фракции
        {
            if( level == 0 )
                type = "без фракции";
            else if( level == 1 )
                type = "администрация";
            else if( level == 2 )
                type = "полиция";
            else if( level == 3 )
                type = "мафия";
            else if( level == 4 )
                type = "мутанты";
            else if( level == 5 )
                type = "форт";
            else if( level == 6 )
                type = "рейдеры";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил фракцию -  " + crId + "\t" + GetPlayerName( crId ) + "\t" + "\t на   " + type + "\n" );
        }
        f.close();
    }
}

// ban

import void BanId( Critter& player, int id, int hours, int kick ) from "banhammer";
import void KickId( Critter& player, int id, int, int ) from "banhammer";
import void KickBanIdIp( Critter& player, int id, int hours, int mask_level ) from "banhammer";
import void UnbanId( Critter& player, int id, int, int ) from "banhammer";
import void GetIps( Critter& player, int id, int, int ) from "banhammer";
import void GM_HardBanId( Critter& player, int id ) from "banhammer";

void unsafe_banid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		banid( player, param0, param1, param2, param3, param4 );
}

void banid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    BanId( player, param0, param1, param2 );
}

void unsafe_kickid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		kickid( player, param0, param1, param2, param3, param4 );
}

void kickid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    KickId( player, param0, 0, 0 );
}

void unsafe_kickbanipid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		kickbanipid( player, param0, param1, param2, param3, param4 );
}

void kickbanipid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    KickBanIdIp( player, param0, param1, param2 );
}

void unsafe_unbanid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		unbanid( player, param0, param1, param2, param3, param4 );
}

void unbanid( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    UnbanId( player, param0, 0, 0 );
}

void unsafe_getips( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		getips( player, param0, param1, param2, param3, param4 );
}

void getips( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    GetIps( player, param0, 0, 0 );
}

void unsafe_statcompareradius( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		statcompareradius( player, param0, param1, param2, param3, param4 );
}

void statcompareradius( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@[] crs;

    // int findType = 0;

    if( player.GetMap().GetCrittersHex( player.HexX, player.HexY, param1, FIND_ALL | FIND_ONLY_PLAYERS, crs ) > 0 )
    {
        CrittersStatCompare( player, crs, uint16( param0 ) );
    }
}

void unsafe_statcompare( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		statcompare( player, param0, param1, param2, param3, param4 );
}

void statcompare( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@[] crs;
    for( uint8 i = 0, j = param4.length(); i < j; ++i )
    {
        Critter@ cr = GetCritter( param4[ i ] );
        if( cr is null )
            continue;
        crs.insertLast( cr );
    }
    CrittersStatCompare( player, crs, uint16( param0 ) );
}

void CrittersStatCompare( Critter& player, Critter@[]& crs, uint16 stat )
{
    // if(stat > STAT_END || stat < STAT_BEGIN) {cr.Say(Say_NETMSG, "не верный стат."); return;}

    uint16 minVal = 0, maxVal = 0;
    uint   minId = 0, maxId = 0;

    for( uint16 i = 0, j = crs.length(); i < j; ++i )
    {
        uint16 statVal = crs[ i ].Param[ stat ];
        if( statVal > maxVal )
        {
            minVal = statVal;
            minId = crs[ i ].Id;
        }
        else if( statVal < minVal )
        {
            minVal = statVal;
            minId = crs[ i ].Id;
        }
    }

    player.Say( SAY_NETMSG, "стат : " + stat + "\nминимальное значение : " + minVal + " id : " + minId + "\nмаксимальное значени : " + maxVal + " id : " + minId );
}


void unsafe_killbytype( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		killbytype( player, param0, param1, param2, param3, param4 );
}

void killbytype( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@ target = GetCritter( param0 );
    if( target is null )
    {
        player.Say( SAY_NETMSG, "Цель не обнаружена." );
        return;
    }

    uint16 deadType = 0;
    if( param1 > 0 && param1 < 9 )
        deadType = ANIM2_DEAD_BLOODY_SINGLE - 1 + param1;
    else
        deadType = ( Random( 0, 1 ) > 0 ? ANIM2_DEAD_FRONT : ANIM2_DEAD_BACK );

    target.ToDead( deadType, null );
}

void unsafe_GM_teleport_to_next_player( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_teleport_to_next_player( player, param0, param1, param2, param3, param4 );
}

void GM_teleport_to_next_player( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    Critter@[] crs;
    GetAllPlayers( crs );
    if( player.StatBase[ ST_VAR0 ] >= crs.length() )
		{
        player.StatBase[ ST_VAR0 ] = 0;
		player.EraseTimeEvents( 7);
		}
    Critter@ daddy = crs[ player.StatBase[ ST_VAR0 ] ];
    if( not valid( daddy ) )
    {
        player.Say( SAY_NETMSG, "Цель не обнаружена." );
        player.StatBase[ ST_VAR0 ]++;
        return;
    }
    player.StatBase[ ST_VAR0 ]++;
    if( daddy.Id == player.Id )
        return;
    Map@ map = daddy.GetMap();
    if( not valid( map ) )
    {
        player.Say( SAY_NETMSG, "Игрок " + GetPlayerName( daddy.Id ) + " на глобале." );
        return;
    }
    else if( map.GetProtoId() == 90 )
    {
        player.Say( SAY_NETMSG, "Игрок " + GetPlayerName( daddy.Id ) + " на карте обучения." );
        return;
    }
    else if( map.GetProtoId() == 92 )
    {
        player.Say( SAY_NETMSG, "Игрок " + GetPlayerName( daddy.Id ) + " на стартовой карте." );
        return;
    }
	uint[] rates;
	player.GetTimeEvents( 7, null, null, rates );
    for( uint ii = 0; ii < rates.length(); ii++ )
    {
		if( rates[ii] == daddy.Id )
			{
			player.Say( SAY_NETMSG, "Игрока " + GetPlayerName( daddy.Id ) + " уже просматривали ранее." );
			return;
			}
    }	

    uint8 temp_dir = Random( 0, 5 );
    for( uint i = 0; i < 6; i++ )
    {
        uint16 hexX = daddy.HexX, hexY = daddy.HexY;
        map.MoveHexByDir( hexX, hexY, ( temp_dir + i ) % 6, Random( 3, 5 ) );
        if( not map.IsHexPassed( hexX, hexY ) ) continue;
		Location@ loc = map.GetLocation();
		if(!valid(loc)) return;
		player.SetWorldPos(loc.WorldX, loc.WorldY);
        player.TransitToMap( map.Id, hexX, hexY, 0 );
        player.Say( SAY_NETMSG, "Вы прыгнули к игроку " + GetPlayerName( daddy.Id ) + " " + daddy.Id + "." );
		Critter@[] critters;
		map.GetCrittersHex( hexX, hexY, 20, FIND_ALL | FIND_ONLY_PLAYERS, critters );
		for( uint j = 0; j < critters.length(); j++ )
			player.AddTimeEvent("cte_visited", REAL_SECOND( 30 ), 7, critters[j].Id );
        break;
    }
}

uint cte_visited( Critter& cr, int identifier, uint& rate )
{
        return 0;
}


void unsafe_GM_CONTROLPANNEL_CRITTER( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_CONTROLPANNEL_CRITTER( player, crId, param1, param2, param3, param4 );
}

void GM_CONTROLPANNEL_CRITTER( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( isGM( player ) )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF" );
        player.Say( SAY_DIALOGBOX_TEXT, "ГМ ПАНЕЛЬ" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы себя" );
    }
}

void unsafe_GM_CONTROLPANNEL_HEX( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		GM_CONTROLPANNEL_HEX( player, crId, param1, param2, param3, param4 );
}

void GM_CONTROLPANNEL_HEX( Critter& player, int crId, int param1, int param2, string@ param3, int[] @ param4 )
{
	player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF" );
	player.Say( SAY_DIALOGBOX_TEXT, "ГМ ПАНЕЛЬ" );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы себя" );
}

/*
        case 1:	NPC1=NPC_PID_RegularRat; break;
        case 2:	NPC1=NPC_PID_Mantis; break;
        case 3:	NPC1=NPC_PID_Ant; break;
        case 4:	NPC1=NPC_PID_Molerat; break;
        case 5:	NPC1=NPC_PID_GreaterMolerat; break;
        case 6:	NPC1=NPC_PID_MutatedMolerat; break;
        case 7:	NPC1=NPC_PID_SmallSilverGecko; break;
        case 8:	NPC1=NPC_PID_GoldenGecko; break;
        case 9:	NPC1=NPC_PID_WildDog; break;
        case 10: NPC1=NPC_PID_SmallRadscorpion; break;
        case 11: NPC1=NPC_PID_LargeRadscorpion; break;
        case 12: NPC1=NPC_PID_WildBrahmin; break;
        case 13: NPC1=NPC_PID_Alien; break;
        case 14: NPC1=NPC_PID_SmToughDeathclaw; break;
        case 15: NPC1=NPC_PID_ToughDeathclaw; break;
        case 16: NPC1=NPC_PID_Centaur; break;
        case 17: NPC1=NPC_PID_Floater; break;
        case 18: NPC1=NPC_PID_FireGecko; break;
        case 19: NPC1=NPC_PID_MeanCentaur; break;
        case 20: NPC1=NPC_PID_MaleCannibal; break;
        case 21: NPC1=NPC_PID_FemaleCannibal; break;
        case 22: NPC1=NPC_PID_RaiderMale; break;
        case 23: NPC1=NPC_PID_RaiderFemale; break;
        case 24: NPC1=NPC_PID_MaleSlaver; break;
        case 25: NPC1=NPC_PID_FemaleSlaver; break;
        case 26: NPC1=NPC_PID_MauraderMale; break;
        case 27: NPC1=NPC_PID_MauraderFemale; break;
        case 28: NPC1=NPC_PID_ToughGhoul; break;
        case 29: NPC1=NPC_PID_ToughNightkin; break;
        case 30: NPC1=NPC_PID_HealthyMaleSlave; break;
        case 31: NPC1=NPC_PID_HealthyFemaleSlave; break;
        case 32: NPC1=NPC_PID_MaleOrphan; break;
        case 33: NPC1=NPC_PID_FemaleOrphan; break;
        case 34: NPC1=NPC_PID_HomesteaderMale; break;
        case 35: NPC1=NPC_PID_HomesteaderFemale; break;

                        case 0: weapon2 = 0; break;
                        case 1: weapon2 = PID_REVKNIFE1; break;
                        case 2: weapon2 = PID_REVFIST1; break;
                        case 3: weapon2 = PID_SPEAK_P; break;
                        case 4: weapon2 = PID_KNIFE; break;
                        case 5: weapon2 = PID_CHAIN; break;
                        case 6: weapon2 = PID_CROWBAR; break;
                        case 7: weapon2 = PID_SPEAR; break;
                        case 8: weapon2 = PID_SHIV; break;
                        case 9: weapon2 = PID_SWITCHBLADE; break;
                        case 10: weapon2 = PID_REVOLVER_LOW; break;
                        case 11: weapon2 = PID_PISTOL_LOW; break;
                        case 12: weapon2 = PID_SHOTPISTOL_LOW; break;
                        case 13: weapon2 = PID_REV_RIFLE_LOW; break;
                        case 14: weapon2 = PID_SPRINGER_RIFLE; break;
                        case 15: weapon2 = PID_ZIP_GUN; break;
                        case 16: weapon2 = PID_SNIPER_GUN_LOW; break;
                        case 17: weapon2 = PID_SMOKE_GUN_LOW; break;
                        case 18: weapon2 = PID_DRUM_GUN_LOW; break;
                        case 19: weapon2 = PID_BIGGUN_LOW; break;
                        case 20: weapon2 = PID_10MM_PISTOL; break;
                        case 21: weapon2 = PID_9MM_MAUSER; break;
                        case 22: weapon2 = PID_DESERT_EAGLE; break;
                        case 23: weapon2 = PID_HUNTING_RIFLE; break;

 */


import void GM_MobInit( Critter& npc ) from "mob";
import void GM_MobBossInit( Critter& npc ) from "mob";
import void GM_MobMinionInit( Critter& npc ) from "mob";
import void GM_InitCommonGuard( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 ) from "guards";
import bool AddAttackPlane( Critter& npc, uint priority, Critter& target, bool run ) from "npc_planes";

//import void GM_SPAWN( Critter& player, Map& map, int type, int weapon, int AI_type, uint16 hexX, uint16 hexY, int bonus_hp, int bonus_dmg, int bonus_skill ) from "gm";
void GM_SPAWN( Critter& player, Map& map, int type, int weapon, int AI_type, uint16 hexX, uint16 hexY, int bonus_hp, int bonus_dmg, int bonus_skill ) //exported
{
    Critter@ cr = map.AddNpc( type, hexX, hexY, Random( 0, 5 ), null, null, null );
    if( valid( cr ) )
    {
        cr.SetEvent( CRITTER_EVENT_DEAD, "_OnDeadEvent" );
        cr.StatBase[ ST_AI_ID ] = 207;
        cr.ParamBase[ MERC_TYPE ] = 10;
        cr.ParamBase[ MERC_MASTER_ID ] = player.Id;
        cr.StatBase[ ST_REPLICATION_TIME ] = __FullSecond + REAL_HOUR( 2 );
        cr.ModeBase[ MODE_NO_HOME ] = 0;
        cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;

        cr.ParamBase[ ST_MAX_LIFE ] = cr.ParamBase[ ST_MAX_LIFE ] + bonus_hp;
        cr.ParamBase[ ST_MELEE_DAMAGE ] = cr.ParamBase[ ST_MELEE_DAMAGE ] + bonus_dmg;
        cr.ParamBase[ SK_SMALL_GUNS ] = cr.ParamBase[ SK_SMALL_GUNS ] + bonus_skill;
        cr.ParamBase[ SK_BIG_GUNS ] = cr.ParamBase[ SK_BIG_GUNS ] + bonus_skill;
        cr.ParamBase[ SK_ENERGY_WEAPONS ] = cr.ParamBase[ SK_ENERGY_WEAPONS ] + bonus_skill;
        cr.ParamBase[ SK_UNARMED ] = cr.ParamBase[ SK_UNARMED ] + bonus_skill;
        cr.ParamBase[ SK_MELEE_WEAPONS ] = cr.ParamBase[ SK_MELEE_WEAPONS ] + bonus_skill;
        cr.ParamBase[ SK_THROWING ] = cr.ParamBase[ SK_THROWING ] + bonus_skill;

		player.ParamBase[ MERC_MASTER_ID ] = cr.Id;
		
        if( weapon > 0 )
            cr.AddItem( weapon, 1 );
    }
    if( AI_type == 0 && valid( player ) )
    {
        gmcontrolMob( player, cr.Id, 0, 0, null, null );
    }
    else if( AI_type == 1 )
    {
        GM_MobInit( cr );
    }
    else if( AI_type == 2 )
    {
        Critter@[] players, guards;
        Map@ map = player.GetMap();
        if( valid( player ) && valid( cr ) && map.GetCritters( 0, FIND_LIFE_AND_KO | FIND_ONLY_PLAYERS, players ) > 0 )
        {
            for( uint j = 0, jj = players.length(); j < jj; j++ )
            {
                if( players[ j ].Id != cr.ParamBase[ MERC_MASTER_ID ] || isGM( players[ j ] ) )
                {
                    AddAttackPlane( cr, 0, players[ j ], __RunOnCombat );
                    cr.AddEnemyInStack( players[ j ].Id );
                }
            }
        }
    }
    else if( AI_type == 3 )
    {
        GM_InitCommonGuard( player, cr.Id, 0, 0, null, null );
    }
    else if( AI_type == 4 )
    {
	GM_MobBossInit( cr );
    }
    else if( AI_type == 5 )
    {
	GM_MobMinionInit( cr );
    }	
}

void gmcontrolMob( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    player.RunClientScript( "client_gui@_SetControlCritters", param0, 0, 0, null, null );
}

void _OnDeadEvent( Critter& dead, Critter@ killer )
{
    dead.AddTimeEvent( "cte_deleteCorpse", __FullSecond + REAL_HOUR( 2 ), CTE_DELETECORPSE );
}

uint cte_deleteCorpse( Critter& dead, int identifier, uint& rate )
{
    DeleteNpc( dead );
    return 0;
}

string TimeToString( Critter& player )
{
    uint16 year = 0;
    uint16 month = 0;
    uint16 dayOfWeek = 0;
    uint16 day = 0;
    uint16 hour = 0;
    uint16 minute = 0;
    uint16 second = 0;
    uint16 milliseconds = 0;
    GetTime( year, month, day, dayOfWeek, hour, minute, second, milliseconds );
    return "" + ( day > 9 ? ( "" + day ) : ( "0" + day ) ) + "." + ( month > 9 ? ( "" + month ) : ( "0" + month ) ) + "." + year + " " + ( hour > 9 ? ( "" + hour ) : ( "0" + hour ) ) + ":" + ( minute > 9 ? ( "" + minute ) : ( "0" + minute ) );
}


import void arcadehiveinsert( Critter& cr, uint16 x, uint16 y, uint8 type ) from "arcade_menu";
import void arcadehivelist( Critter& cr ) from "arcade_menu";
import void arcadehiveclear( Critter& cr ) from "arcade_menu";
import void arcadehivedelone( Critter& cr, uint8 index ) from "arcade_menu";

void unsafe_hiveadd( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		hiveadd( player, param0, param1, param2, param3, param4 );
}

void hiveadd( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    arcadehiveinsert( player, param0, param1, param2 );
}

void unsafe_hivedel( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		hivedel( player, param0, param1, param2, param3, param4 );
}

void hivedel( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    arcadehivedelone( player, param0 );  // , param1, param2);
}

void unsafe_hivelist( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( isGM( player ) )
		hivelist( player, param0, param1, param2, param3, param4 );
}

void hivelist( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    arcadehivelist( player );  // param0, param1, param2);
}

import int CellLocationCreate( int pid, int x, int y, int force ) from "globalmap_group";
import int CellLocationCreate( int pid, int x, int y, int wild, int livetime, int force ) from "globalmap_group";
import int CellLocationMove( int x, int y, int x1, int y1 ) from "globalmap_group";
import int CellLocationDelete( int x, int y ) from "globalmap_group";
import int CellLocationSize( int x, int y, int sizeX, int sizeY ) from "globalmap_group";


void unsafe_cell_create_wild( Critter& player, int x, int y, int p2, string@ message, int[] @ p4 )
{
	if( isGM( player ) )
		cell_create_wild( player, x, y, p2, message, p4 );
}

void cell_create_wild( Critter& cr, int x, int y, int p2, string@ message, int[] @ p4 )
{
    CellLocationCreate( p4[ 0 ], p4[ 1 ], p4[ 2 ], p4[ 3 ], p4[ 4 ], p4[ 5 ] );
}

void unsafe_cell_create( Critter& player, int x, int y, int p2, string@ message, int[] @ p4 )
{
	if( isGM( player ) )
		cell_create( player, x, y, p2, message, p4 );
}

void cell_create( Critter& cr, int x, int y, int p2, string@ message, int[] @ p4 )
{
    CellLocationCreate( p4[ 0 ], p4[ 1 ], p4[ 2 ], p4[ 3 ] );
}

void unsafe_cell_move( Critter& player, int x, int y, int p2, string@ message, int[] @ p4 )
{
	if( isGM( player ) )
		cell_move( player, x, y, p2, message, p4 );
}

void cell_move( Critter& cr, int x, int y, int p2, string@ message, int[] @ p4 )
{
    CellLocationMove( p4[ 0 ], p4[ 1 ], p4[ 2 ], p4[ 3 ] );
}

void unsafe_cell_del( Critter& player, int x, int y, int p2, string@ message, int[] @ p4 )
{
	if( isGM( player ) )
		cell_del( player, x, y, p2, message, p4 );
}

void cell_del( Critter& cr, int x, int y, int p2, string@ message, int[] @ p4 )
{
    cr.Say( SAY_NETMSG, "code : " + CellLocationDelete( p4[ 0 ], p4[ 1 ] ) );
}

void unsafe_cell_size( Critter& player, int x, int y, int p2, string@ message, int[] @ p4 )
{
	if( isGM( player ) )
		cell_size( player, x, y, p2, message, p4 );
}

void cell_size( Critter& cr, int x, int y, int p2, string@ message, int[] @ p4 )
{
    cr.Say( SAY_NETMSG, "code : " + CellLocationSize( p4[ 0 ], p4[ 1 ], p4[ 2 ], p4[ 3 ] ) );
}

import void AccountDataBaseCheck(string accountPass) from "accessdb";
import void AcconuntDataBaseAuth(Critter& cr, string accountPass) from "accessdb";

void unsafe_getaccess( Critter& player, int param0, int param1, int param2, string@ accountPass, int[] @ param4 )
{
	//player.Say(SAY_NORM, ""+accountPass);
	//AccountDataBaseCheck(accountPass);
	AcconuntDataBaseAuth(player, accountPass);
}
