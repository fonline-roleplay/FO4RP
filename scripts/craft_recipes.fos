#ifndef CRAFT_RECIPES
#define CRAFT_RECIPES

#include "_utils.fos"
#include "json_h.fos"
#include "serializator.fos"
#include "strtoint.fos"

class CraftRecipe
{
	// Tools needed in craft
	uint16[]	Tools;

	// Items needed in craft
	uint16[]	Resources;
	uint[]		ResourcesCount;

	// Output Items
	uint16[]	Output;
	uint[]		OutputCount;

	// Other
	uint Profession = 0;
	uint Tier = 0;

	CraftRecipe@ SetResourcesPids(uint16[] pids)
	{
		this.Resources = pids;
		return this;
	}

	CraftRecipe@ SetResourcesCounts(uint[] counts)
	{
		this.ResourcesCount = counts;
		return this;
	}

	CraftRecipe@ SetToolPids(uint16[] pids)
	{
		this.Tools = pids;
		return this;
	}

	CraftRecipe@ SetOutputPids(uint16[] pids)
	{
		this.Output = pids;
		return this;
	}

	CraftRecipe@ SetOutputCounts(uint[] counts)
	{
		this.OutputCount = counts;
		return this;
	}

	CraftRecipe@ SetProfession(uint profession)
	{
		this.Profession = profession;
		return this;
	}

	CraftRecipe@ SetTier(uint tier)
	{
		this.Tier = tier;
		return this;
	}
}

class CraftList
{
	CraftRecipe@[] Recipes;
	uint Len = 0;

	CraftList@ Add(CraftRecipe@ newEntry)
	{
		this.Recipes.insertLast(newEntry);
		Len = Recipes.length();
		return this;
	}

	CraftRecipe@ GetByPID(uint pid)
	{
		if(pid >= Len) return null;
		return Recipes[pid];
	}
}

bool isMainCraftListInited = false;
CraftList MainCraftList;

void InitCraftList()
{
	if(isMainCraftListInited) return;

	#include "_crafts.fos"

	JSON@ craftJson = JSONParse(craftList);
	_JSON_ForEach(craftJson, @ParseCraft);

	isMainCraftListInited = true;
}

void ParseCraft(JSON@ craft, uint index)
{
    CraftRecipe currRecipe;

	uint16[] toolPids;
	for(uint i = 0, len = craft["Tools"].length(); i < len; i++)
	{
		if(!craft["Tools"][i].isString()) continue;
		string toolString = "";
		craft["Tools"][i] >> toolString;
		toolString = substring(toolString, 1, toolString.length() - 2);
		
		uint16 toolPid = 0;
		StrToInt(toolString, toolPid);
		if(toolPid == 0) continue;

		toolPids.insertLast(toolPid);
	}
	currRecipe.SetToolPids(toolPids);

	uint16[] resPids;
	uint[] resCounts;

	string[] resKeys = craft["Resources"].getKeys();
	for(uint i = 0, len = resKeys.length(); i < len; i++)
	{	
		uint16 pid = 0;

		string currKey = resKeys[i];
		string pidStr = substring(currKey, 1, currKey.length() - 2);
		StrToInt(pidStr, pid);
		
		uint count = 0;
		craft["Resources"][currKey] >> count;

		if(pid == 0 || count == 0) continue;
		resPids.insertLast(pid);
		resCounts.insertLast(count);
	}
	currRecipe.SetResourcesPids(resPids);
	currRecipe.SetResourcesCounts(resCounts);

	uint16[] outPids;
	uint[] outCounts;

	string[] outKeys = craft["Output"].getKeys();
	for(uint i = 0, len = outKeys.length(); i < len; i++)
	{	
		uint16 pid = 0;

		string currKey = outKeys[i];
		string pidStr = substring(currKey, 1, currKey.length() - 2);
		StrToInt(pidStr, pid);
		
		uint count = 0;
		craft["Output"][currKey] >> count;

		if(pid == 0 || count == 0) continue;
		outPids.insertLast(pid);
		outCounts.insertLast(count);
	}
	currRecipe.SetOutputPids(outPids);
	currRecipe.SetOutputCounts(outCounts);

	string profStr = "";
	craft["Profession"] >> profStr;
	profStr = substring(profStr, 1, profStr.length() - 2);
	uint prof = 0;
	StrToInt(profStr, prof);
	currRecipe.SetProfession(prof);

	uint tier = 0;
	craft["Tier"] >> tier;
	currRecipe.SetTier(tier);
	
	#ifdef __CLIENT

	string toolsStr = "";
	for(uint i = 0, len = currRecipe.Tools.length(); i < len; i++)
	{
		toolsStr += " " + currRecipe.Tools[i];
	}
	string resStr = "";
	for(uint i = 0, len = currRecipe.Resources.length(); i < len; i++)
	{
		resStr += " " + currRecipe.Resources[i];
	}
	for(uint i = 0, len = currRecipe.ResourcesCount.length(); i < len; i++)
	{
		resStr += " " + currRecipe.ResourcesCount[i];
	}
	string outStr = "";
	for(uint i = 0, len = currRecipe.Output.length(); i < len; i++)
	{
		outStr += " " + currRecipe.Output[i];
	}
	for(uint i = 0, len = currRecipe.OutputCount.length(); i < len; i++)
	{
		outStr += " " + currRecipe.OutputCount[i];
	}

	Message("Tools: " + toolsStr + 
			"\nRes: " + resStr + 
			"\nOut: " + outStr + 
			"\nProf: " + currRecipe.Profession + 
			"\nTier: " + currRecipe.Tier );
	
	#endif

	MainCraftList.Add(currRecipe);
}

#endif // CRAFT_RECIPES