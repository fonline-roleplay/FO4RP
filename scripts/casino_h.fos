#ifndef CASINO_H
#define CASINO_H

#define MIN_BET                ( 25 ) 	// amount if use from hand
#define MAX_BET                ( 100 ) 	// amount if use from inv

#define SLOT_MACH_TYPE 			Val3

#define SLOT_CURRENCY_CAPS		( 1 )
#define SLOT_CURRENCY_COINS 	( 0 )

const uint16[] Cards = { PID_CARDS_CLUBS_02, PID_CARDS_CLUBS_03, PID_CARDS_CLUBS_04, PID_CARDS_CLUBS_05, PID_CARDS_CLUBS_06, PID_CARDS_CLUBS_07, PID_CARDS_CLUBS_08, PID_CARDS_CLUBS_09, PID_CARDS_CLUBS_10,
						 PID_CARDS_CLUBS_JACK, PID_CARDS_CLUBS_QUEEN, PID_CARDS_CLUBS_KING, PID_CARDS_CLUBS_ACE, PID_CARDS_DIAMONDS_02, PID_CARDS_DIAMONDS_03, PID_CARDS_DIAMONDS_04, PID_CARDS_DIAMONDS_05, 
						 PID_CARDS_DIAMONDS_06, PID_CARDS_DIAMONDS_07, PID_CARDS_DIAMONDS_08, PID_CARDS_DIAMONDS_09, PID_CARDS_DIAMONDS_10, PID_CARDS_DIAMONDS_JACK, PID_CARDS_DIAMONDS_QUEEN, 
						 PID_CARDS_DIAMONDS_KING, PID_CARDS_DIAMONDS_ACE, PID_CARDS_HEARTS_02, PID_CARDS_HEARTS_03, PID_CARDS_HEARTS_04, PID_CARDS_HEARTS_05, PID_CARDS_HEARTS_06, PID_CARDS_HEARTS_07, 
						 PID_CARDS_HEARTS_08, PID_CARDS_HEARTS_09, PID_CARDS_HEARTS_10, PID_CARDS_HEARTS_JACK, PID_CARDS_HEARTS_QUEEN, PID_CARDS_HEARTS_KING, PID_CARDS_HEARTS_ACE, PID_CARDS_SPADES_02, 
						 PID_CARDS_SPADES_03, PID_CARDS_SPADES_04, PID_CARDS_SPADES_05, PID_CARDS_SPADES_06, PID_CARDS_SPADES_07, PID_CARDS_SPADES_08, PID_CARDS_SPADES_09, PID_CARDS_SPADES_10, 
						 PID_CARDS_SPADES_JACK, PID_CARDS_SPADES_QUEEN, PID_CARDS_SPADES_KING, PID_CARDS_SPADES_ACE, PID_CARDS_JOKER_01, PID_CARDS_JOKER_02 };

	#ifndef CASINO
		import bool SlotMachineCheck( Critter& cr, Item@ cash, Item@ target ) from "casino";
		import void StartMenuSlotMachine( Critter& cr, Item& target) from "casino";
		import void DiceUse( Critter& cr, Item& item ) from "casino";
		import void CoinUse( Critter& cr, Item& item ) from "casino";
		import bool CardsUse( Critter& cr, Item& deck, Item& table ) from "casino";
		import bool CardsUse( Critter& cr, Item& deck, Critter& targetCr ) from "casino";
		import bool ShuffleDeck( Critter& cr, Item& deck ) from "casino";
		import bool TransferToCardsHand( Critter& cr, Item& card, Item& cardsHand ) from "casino";
		import bool TransferFromCardsHand( Critter& cr, Item& card, Item& cardsHand ) from "casino";
		import bool ShowCardSHand( Critter& cr, Item& cardsHand, Item& table ) from "casino";
		import void ShowCard( Critter& cr, Item& card ) from "casino";
		import void CheckCardsHand( Critter& cr, Item& cardsHand ) from "casino";
		import void StartMenuCard( Critter& cr, Item& target ) from "casino";
	#endif //CASINO
	
shared class Roll
{
	uint dices;
	uint edges;
	
	Roll( uint dices, uint edges )
	{
		this.dices = dices;
		this.edges = edges;
		
		reroll();
	}
	
	uint result;
	uint reroll()
	{
		result = 0;
		for( uint i = 1; i <= dices; i++ )
			result += Random( 1, edges );
		
		return result;
	}
	
	bool failed( uint difficulty )
	{
		return difficulty > result;
	}
	
	bool succeed( uint difficulty )
	{
		return difficulty <= result;
	}
	
	string toString()
	{//Format: 1d5=10
		return dices + "d" + edges + "=" + result;
	}
}	

#endif //CASINO_H