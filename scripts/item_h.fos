\#ifndef ITEM_H
#define ITEM_H

	#define ITEM_STATE			Val0
	#define ITEM_CHARGE			Val1
	#define ITEM_EVENT			Val3
	
	const string[] FluteSounds = { "flute.wav", "flute2.wav", "flute3.wav", "flute4.wav", "flute4.wav" };
	const string[] HarmonicaSounds = { "harmonica_1.ogg", "harmonica_2.ogg", "harmonica_3.ogg", "harmonica_4.ogg", "harmonica_5.ogg" };
	
	const uint[] guitars = {PID_BASS1, PID_BASS2, PID_BASS3, PID_BASS4, PID_BASS5};
	
	#ifndef ITEM_MODULE
		import bool FluteUse( Critter& cr ) from "item";
		import bool HarmonicaUse( Critter& cr ) from "item";
		import bool ShivUse( Critter& cr, Item@ shiv, Item@ targetItem ) from "item";
		import bool OilLampUse( Critter& cr, Item@ item ) from "item";
		import bool FlashlightUse( Critter& cr, Item@ item ) from "item";
		import bool FlareUse( Critter& cr, Item@ item ) from "item";
		import bool TowelUse( Critter& cr, Item@ item ) from "item";
		import bool TowelWash( Critter& cr, Item@ item, Scenery@ targetScen ) from "item";
		import void SetWorkbench( Critter& cr, int item_Id, int p1, int p2 ) from "item";
		import bool e_WorkBenchPick( Item& item, Critter& cr, int skill ) from "item";
		import bool ChargeFlashlight( Critter& cr, Item& battery, Item& flashlight ) from "item";
		import bool ChargeLamp( Critter& cr, Item& oil, Item& lamp ) from "item";
		import bool TransferToBowl( Critter& cr, Item& targetItem, Item& cont ) from "item";
		import bool TransferFromBowl( Critter& cr, Item& targetItem, Item& cont ) from "item";
		import bool TryUseCompass(Critter& cr, Item& compass) from "item"; 
		import bool TryPlayGuitar(Item@ guitar, Critter@ player) from "item";
		import bool TryReadHolodisk(Item@ holodisk, Critter@ cr) from "item";
	#endif //ITEM_MODULE
	
#endif // ITEM_H