#ifndef TELEPORTS_MODULE
#define TELEPORTS_MODULE

#include "_utils.fos"
#include "teleports_h.fos"

import uint CountMapPlayers( Map@ map ) from "manager";

//~run teleports go 0 0 0
void go( Critter& cr, int p0, int p1, int p2 )
{
	ShowTeleports(cr);
}

void ShowTeleports( Critter& cr )
{
	InitTeleports();
	iMenuHandler@ handler = MenuTeleports( "", teleports, null );
	iDialogBox@ menu = OpenMenu( cr, "Select", handler );
}

class MenuTeleports: CenteredMenuHandler
{
	bool isRoot;
	bool redrawing;
	string fullName;
	Teleport@ teleport;
	MenuTeleports@ parent;
	
	MenuTeleports( string fullName, Teleport@ teleport, MenuTeleports@ parent ) 
	{
		this.redrawing = true;
		this.isRoot = !valid(parent);
		this.fullName = fullName;
		@this.teleport = @teleport;
		@this.parent = @parent;
	}

	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		if( !redrawing )
		{
			return false;
		}
		
		uint l = teleport.list();
		for( uint n = 0; n < l; n++ )
		{
			if( menu.ButtonMsg( STR_LEX_NAME , "$name" + teleport.online(n) + " " + teleport.name(n) ) )
			{ 
				Teleport@ target = teleport.get(n);
				if( target.list() == 0 )
				{
					target.warp( cr );
					stopMenu();
					return false;
				}
				else
				{
					MenuTeleports@ new_menu = MenuTeleports( this.name(), target, this );
					new_menu.isRoot = false;
					return menu.OpenChild( this.name(), new_menu );
				}
			}
		}		
		
		if( !isRoot )
		{
			if( menu.ButtonMsg( STR_PREVIOUS ) )
			{
				return false;
			}
		}
		
		if( menu.ButtonMsg( STR_CLOSE_MENU_BUTTON ) )
		{
			stopMenu();			
			return false;
		}

		return true;
	}
	
	void stopMenu()
	{
		redrawing = false;
		
		MenuTeleports@ loopback = @parent;
		while( valid( loopback ) )
		{
			loopback.redrawing = false;
			@loopback = @loopback.parent;
		}
	}

	int getDescriptionFile()
	{
		return TEXTMSG_TEXT;
	}

	int getDescriptionLine()
	{
		return STR_TELEPORTS_MENU_MAIN;
	}
	
	string name() {
		return this.fullName + " " + this.teleport.name();
	}
	
	string@ Description( Critter& cr )
	{
		string info = "$name" + name();		
		
		return info;
	}
	
	bool ShouldRedraw( Critter& cr )
	{
		return true;
	}	
}

Teleport@ teleports;

void InitTeleports()
{
	if( valid( teleports ) )
	{
		return;
	}
	
	@teleports = 
		Teleport( "Teleports" )
		//English Segment Locations:
		.add( Teleport( "RU Session" )
			.add( Teleport( "Грин Дейл" )
				.add( "Рудник Грин",					540, 	0, 170, 270 )
				.add( "Грин Дейл",						541,	0, 596, 516 )
				.add( "Разбитый лагерь",				542,	0, 170, 270 )
				.add( "Радиорубка",						543,	0, 170, 270 )
				.add( "Болота Грин",					544,	0, 170, 270 )
				.add( "Озеро",							545,	0, 170, 270 )
				.add( "Дорога к вышке",					546,	0, 170, 270 )
				.add( "Заброшенная заправка",			547,	0, 170, 270 )
				.add( "Дорога в Грин Дейл",				548,	0, 170, 270 )
				.add( "Ферма",							549,	0, 170, 270 )
				.add( "Подстанция",						550,	0, 170, 270 )
				.add( "Тресина",						551,	0, 170, 270 )
				.add( "Пригород",						552,	0, 170, 270 )
				.add( "Дорога",							553,	0, 170, 270 )
				.add( "Лесорубка",						554,	0, 170, 270 )
				.add( "Свалка",							555,	0, 170, 270 )
				.add( "Станция Грин",					556,	0, 170, 270 )
				.add( "Мираж",							557,	0, 170, 270 )
				.add( "Торговый лагерь",				558,	0, 170, 270 )
				.add( "Форпост",						559,	0, 170, 270 )
				.add( "Лес",							560,	0, 170, 270 )
				.add( "Заброшенный лагерь",				561,	0, 170, 270 )
				.add( "Каньон",							562,	0, 170, 270 )
				)
			.add( Teleport( "Портленд" )
				.add( "Шахта Портленд",					563,	0, 170, 270 )
				.add( "Пересечение",					564,	0, 170, 270 )
				.add( "Руины городка",					565,	0, 170, 270 )
				.add( "Дыра",							566,	0, 170, 270 )
				.add( "Дорога в Портленд",				567,	0, 170, 270 )
				.add( "забошки потрелнда",				568,	0, 170, 270 )
				.add( "Станция",						569,	0, 170, 270 )
				.add( "Форт Портленд",					570,	0, 596, 516 )
				.add( "Руины",							571,	0, 170, 270 )
				.add( "Заброшенная шахта",				572,	0, 170, 270 )
				.add( "Руины при Портленде",			573,	0, 170, 270 )
				.add( "Забытая шахта",					574,	0, 170, 270 )
				)
			)
		.add( Teleport( "EN Session" )
			.add( "The Lake",					650,	0, 615, 515 )
			.add( "Northern Road",				651,	0, 615, 515 )
			.add( "Ruined Farms",				652,	0, 615, 515 )
			.add( "Western Cliffs",				653,	0, 615, 515 )
			.add( "Blaire",						654,	0, 615, 515 )
			.add( "Eastern Cliffs",				655,	0, 615, 515 )
			.add( "Desert",						656,	0, 615, 515 )
			.add( "Southern Road",				657,	0, 615, 515 )
			.add( "Red Rock",					658,	0, 615, 515 )
			.add( "Caravan Road NW",			663,	0, 170, 270 )
			.add( "Vault 23 Exterior",			659,	0, 170, 270 )
			.add( "Vault 28 Exterior",			660,	0, 170, 270 )
			.add( "Demo Vault Exterior",		661,	0, 170, 270 )
			)
		.add( Teleport( "Past Sessions" )
			.add( Teleport( "Perfection" )
				.add( "Perf entrance",					8, 		0, 170, 270 )
				.add( "Perfection",						8, 		1, 170, 270 )
				.add( "VC Camp",						400,	0, 400, 400 )
				.add( "The Swamp",						1, 		0, 170, 270 )
				.add( "The Notrhil",					5, 		0, 170, 270 )
				.add( "W Slope",						2, 		0, 170, 270 )
				.add( "W Slope Cave",					2, 		1, 200, 150 )
				.add( "W Slope Lab",					2, 		2, 120, 200 )
				.add( "Topside",						3, 		0, 170, 270 )
				.add( "E Slope",						4, 		0, 170, 270 )
				.add( "Swampforest",					6, 		0, 170, 270 )
				.add( "SW Slope",						7, 		0, 170, 270 )
				.add( "Recharge Station",				7, 		1,  50,  60 )
				.add( "SE Slope",						9, 		0, 170, 270 )
				.add( "The Hills",						10, 	0, 170, 270 )
				.add( "E Forest",						11, 	0, 170, 270 )
				.add( "The Turn",						12, 	0, 170, 270 )
				.add( "The Substation",					13, 	0, 170, 270 )
				.add( "Facilities",						13, 	1, 170, 270 )		
				.add( "Shops",							14, 	0, 170, 270 )
				.add( "Old Lab",						14, 	1, 170, 270 )		
				.add( "The Fringe",						15, 	0, 170, 270 )
				.add( "SE Forest",						16, 	0, 170, 270 )
				.add( "SE Forest Basement",				16, 	1, 180, 140 )
				.add( "The Crossroads",					17, 	0, 170, 270 )
				.add( "The Radio Hill",					18, 	0, 170, 270 )
				.add( "Coal Mine",						18, 	1, 325, 390 )
				.add( "Ruins",							19, 	0, 170, 270 )
				.add( "Broadway",						20, 	0, 170, 270 )
				.add( "S Forest",						21, 	0, 170, 270 )
				.add( "S Forest Basement",				21, 	1, 100, 110 )
				.add( "Motel",							22, 	0, 170, 270 )
				.add( "Motel Basement",					22, 	1, 170, 270 )
				.add( "The Runoff",						23, 	0, 170, 270 )
				.add( "The Camping",					24, 	0, 170, 270 )
				.add( "Base Camp",						25, 	0, 170, 270 )
				)
			.add( Teleport( "Клинтон" )
				.add( "Центральный округ",			360,	0, 486, 384 )
				.add( "Центральное Убежище",		360,	1, 483, 408 )
				.add( "Станция",					360,	2, 135, 161 )
				.add( "Второй этаж",				360,	3, 170, 270 )
				.add( Teleport( "Северный Клинтон" )
					.add( "Склады",					361,	0, 170, 270 )
					.add( "Подстанция",				362,	0, 170, 270 )
					.add( "Магазины",				363,	0, 170, 270 )
					.add( "Доки",					364,	0, 170, 270 )
					.add( "КПП",					365,	0, 170, 270 )
					.add( "Заправка",				366,	0, 170, 270 )
					.add( "Мэрия",					367,	0, 170, 270 )
					.add( "Библиотека",				368,	0, 170, 270 )
					)
				.add( Teleport( "Южный Клинтон" )
					.add( "Конвой",					369,	0, 170, 270 )
					.add( "Восточный Клинтон",		370,	0, 170, 270 )
					.add( "Отдел полиции",			371,	0, 170, 270 )
					.add( "Перекресток",			372,	0, 170, 270 )
					.add( "Железнодорожный переезд",373,	0, 170, 270 )
					.add( "Центр города",			374,	0, 170, 270 )
					.add( "Парк Клинтона",			375,	0, 170, 270 )
					.add( "Раскопки",				376,	0, 170, 270 )
					.add( "Старая Выработка",		498,	0, 170, 270 )
					.add( "Западное Побережье",		499,	0, 170, 270 )
					.add( "Руины",					500,	0, 170, 270 )
					.add( "Холм",					501,	0, 170, 270 )
					.add( "Бродвей",				502,	0, 170, 270 )
					.add( "Слив",					503,	0, 170, 270 )
					.add( "Лагерь",					504,	0, 170, 270 )
					.add( "Лагерь Центр",			505,	0, 170, 270 )
					)
				.add( Teleport( "Предместья" )
					.add( "Лес",					506,	0, 170, 270 )
					.add( "Свалка",					507,	0, 170, 270 )
					.add( "Южная автомагистраль",	508,	0, 170, 270 )
					.add( "Лес2",					509,	0, 170, 270 )
					.add( "Заправка",				510,	0, 170, 270 )
					.add( "Развилка",				511,	0, 170, 270 )
					.add( "Южный лес",				512,	0, 170, 270 )
					.add( "Лесная дорога",			513,	0, 170, 270 )
					.add( "Лес",					514,	0, 170, 270 )
					.add( "Утес",					515,	0, 170, 270 )
					.add( "Магистраль",				516,	0, 170, 270 )
					.add( "Лес",					517,	0, 170, 270 )
					.add( "Племенные могилы",		518,	0, 170, 270 )
					.add( "Пересечение",			519,	0, 170, 270 )
					.add( "Дорога в Фриско",		520,	0, 170, 270 )
					)
				.add( Teleport( "Южные Регионы" )	
					.add( "Каньон",					521,	0, 170, 270 )
					.add( "Радарная станция",		522,	0, 170, 270 )
					.add( "Шахтерский городок",		523,	0, 170, 270 )
					.add( "Город шахтеров",			524,	0, 170, 270 )
					.add( "Токсичная яма",			525,	0, 170, 270 )
					.add( "Ущелье",					526,	0, 170, 270 )
					.add( "Логово Смерти",			527,	0, 170, 270 )
					.add( "Склон",					528,	0, 170, 270 )
					.add( "Восточное Ущелье",		529,	0, 170, 270 )
					.add( "Западный склон",			530,	0, 170, 270 )
					.add( "Дорога",					531,	0, 170, 270 )
					.add( "Побережье",				532,	0, 170, 270 )
					.add( "Остров Дьявола",			533,	0, 170, 270 )
					.add( "Предгорья",				534,	0, 170, 270 )
					.add( "Рыбацкий лагерь",		535,	0, 170, 270 )
					.add( "Мост",					536,	0, 170, 270 )
					.add( "Утес",					537,	0, 170, 270 )
					)
				)
			.add( Teleport( "Riverdale" )	
				.add( Teleport( "Ривердейл" )
					.add( "Ривердейл",					35,		0, 474, 335 )
					.add( "Подземка",					35,		1, 480, 370 )
					.add( "2е этажи",					35,		2, 185, 160 )
					.add( "3й этаж",					35,		3, 152, 150 )
					.add( "Рудники",					40,		0, 170, 270 )
					.add( "Свинцовый Рудник",			41,		0, 170, 270 )
					)
				.add( Teleport( "Север" )
					.add( "Рыбацкий Лагерь",			48,		0, 170, 270 )
					.add( "Мост",						38,		0, 170, 270 )
					.add( "Утес",						39,		0, 170, 270 )
					.add( "Западный склон",				49,		0, 170, 270 )
					.add( "Дорога",						36,		0, 170, 270 )
					.add( "Побережье",					37,		0, 170, 270 )
					.add( "Токсичная Яма",				50,		0, 170, 270 )
					.add( "Токсичная Пещера",			50,		1, 175, 190 )
					.add( "Вход в Каньон",				51,		0, 170, 270 )
					.add( "Логово Смерти",				52,		0, 170, 270 )
					.add( "Логово, Пещера",				52,		1, 170, 270 )
					.add( "Каньон",						53,		0, 170, 270 )
					.add( "Племенные Могилы",			54,		0, 170, 270 )
					.add( "Храм Племени",				54,		1, 150, 200 )
					.add( "Перекресток",				55,		0, 170, 270 )
					.add( "Дорога на Шейди",			56,		0, 170, 270 )
					.add( "Западный Утес",				57,		0, 170, 270 )
					.add( "Выработанная Шахта",			62,		0, 170, 270 )
					)
				.add( Teleport( "Лоун Пайн" )
					.add( "Холмы",						42,		0, 170, 270 )
					.add( "Пляж",						43,		0, 170, 270 )
					.add( "Шахта Голдштейна",			44,		0, 170, 270 )
					.add( "Шахта, Вход",				44,		2, 170, 270 )
					.add( "Поселение Рабов",			44,		1, 170, 270 )
					.add( "Лоун Пайн",					45,		0, 170, 270 )
					.add( "Кладбище",					46,		0, 170, 270 )
					.add( "Катакомбы",					46,		1, 170, 270 )
					.add( "Промзона",					60,		0, 170, 270 )
					.add( "Центр",						61,		0, 170, 270 )
					.add( "Жилой Район",				62,		0, 170, 270 )
					)	
				.add( Teleport( "Шахтерский Город" )
					.add( "Радарная станция",			66,		0, 170, 270 )
					.add( "ШГ – Запад",					67,		0, 170, 270 )
					.add( "ШГ – Восток",				68,		0, 170, 270 )
					.add( "ШГ – Шахта",					68,		1, 170, 270 )
					.add( "ШГ – Урановый",				68,		2, 170, 270 )
					.add( "Восточный Склон",			69,		0, 170, 270 )
					.add( "Ущелье",						70,		0, 170, 270 )
					.add( "Остров Дьявола",				71,		0, 170, 270 )
					.add( "Предгорья",					72,		0, 170, 270 )
					)
				)
			.add( Teleport( "Poseidon" )
				.add( "Sun Deck",					110,	0, 224, 241 )
				.add( "Trading Deck",				110,	1, 195, 219 )
				.add( "Recreation Deck",			110,	2, 199, 216 )
				.add( "Industrial Deck",			110,	3, 264, 196 )
				.add( "Lowest Deck",				110,	4, 294, 201 )
				.add( "Tower in",					110,	5, 180, 255 )
				.add( "Mess Hall",					110,	6, 177, 242 )
				.add( "Barracks",					110,	7, 180, 255 )
				.add( "Planning Center",			110,	8, 180, 255 )
				.add( "Bridge",						110,	9, 180, 255 )
				)
			.add( Teleport( "Vault 66" )
				.add( "Level 1",					420,	0, 170, 270 )
				.add( "Level 2",					420,	1, 170, 270 )
				.add( "Level 3",					420,	2, 170, 270 )
				.add( "Level 4",					420,	3, 170, 270 )
				.add( "Crawler_in",					420,	4, 120, 150 )
				.add( "Crawler_out",				420,	5, 125, 86  )
				)
			.add( Teleport( "Events" )
				.add( "Launch site",				225,	0, 170, 270 )
				.add( "Shuttle",					226,	0, 170, 270 )
				)	
			.add( Teleport( "Silver Town" )
				.add( "Silverlake",					202,	0, 170, 270 )
				.add( "Silverlake_dn",				202,	1,  95,  75 )
				.add( "Silverlake_up",				202,	2,  80,  70 )
				.add( "Quarry",						200,	0, 170, 270 )
				.add( "Uranium Mine",				201,	0, 170, 270 )
				.add( "Downtown",					203,	0, 170, 270 )
				.add( "Warehouses",					204,	0, 170, 270 )
				.add( "Trailer Park",				205,	0, 170, 270 )
				.add( "Crossroads",					206,	0, 170, 270 )
				.add( "Waterplant",					207,	0, 170, 270 )
				)
			.add( Teleport( "Silver Mines" )
				.add( "Iron Mine",					200,	1, 435, 390 )
				.add( "Copper Mine",				200,	2, 190, 210 )
				.add( "Uranium Fever",				201,	2, 225, 240 )
				.add( "Coal Mine In",				212,	1, 170, 175 )
				)
			.add( Teleport( "Silver Suburbs" )
				.add( "Paradise Avenue",			208,	0, 170, 270 )
				.add( "Spider Hive",				209,	0, 170, 270 )
				.add( "Highway",					210,	0, 170, 270 )
				.add( "Hills",						211,	0, 170, 270 )
				.add( "Coal Mine",					212,	0, 170, 270 )
				.add( "Radio Tower",				213,	0, 170, 270 )
				.add( "South Interstate",			214,	0, 170, 270 )
				.add( "Road to Elbrus",				215,	0, 170, 270 )
				.add( "Elbrus",						216,	0, 170, 270 )
				.add( "Desert",						218,	0, 170, 270 )
				.add( "Ruined Mall",				219,	0, 170, 270 )
				.add( "Junkyard",					220,	0, 170, 270 )
				.add( "Hacienda",					221,	0, 170, 270 )
				.add( "Road to GasCO",				222,	0, 170, 270 )
				.add( "GasCO",						223,	0, 170, 270 )
				.add( "Hill road",					224,	0, 170, 270 )
				)
			)
		//General Tech Locations:
		.add( "Activation",							92,		0, 337, 184 )
		.add( "Sleep",								93,		0, 296, 178 )
		.add( "Haven",								95,		0, 129, 77  )
		.add( "Hell",								300,	0, 229, 177 )
		.add( "Arena1",								96,		0, 440, 510 )
		.add( "Arena2",								96,		1, 180, 270 )
		;
}
				
			/*	)
			.add( Teleport( "North Regions" )
				.add( "Swamp",						138,		0, 170, 270 )
				.add( "Old Church",					139,		0, 170, 270 )
				.add( "Forest Tribe",				130,		0, 170, 270 )
				.add( "Forest of Bones",			183,		0, 170, 270 )
				.add( "West Cliff",					159,		0, 170, 270 )
				.add( "Dogs Motel",					172,		0, 170, 270 )
				.add( "Abandoned Mine",				174,		0, 170, 270 )
				.add( "Tribal Burrial",				153,		0, 170, 270 )
				.add( "Crossroads",					155,		0, 170, 270 )
				.add( "Road to Shady",				157,		0, 170, 270 )
				)
			)
			*/

class Pos
{
	uint mapId;
	uint x;
	uint y;
	
	Pos( Map@ map, uint x, uint y )
	{
		this.mapId = valid( map ) ? map.Id : 0;
		this.x = x;
		this.y = y;
	}

	Pos( uint mapId, uint x, uint y )
	{
		this.mapId = mapId;
		this.x = x;
		this.y = y;
	}
	
	bool TransitToMap( Critter& cr )
	{
		if( mapId == 0 ) return false;
		
		Map@ map = GetMap( mapId );
		if( !valid( map ) ) return false;
		
		int attempt = 0;
		uint16 hexX = x, hexY = y;
		while( attempt < 10 )
		{
			if( !map.IsHexPassed( hexX, hexY ) )
			{
				map.MoveHexByDir( hexX, hexY, Random( 0, 5 ), 1 );
			}
			attempt++;
		}

		if( !map.IsHexPassed( hexX, hexY ) )
		{
			cr.Say( SAY_NETMSG, "|0xFFFF00 Hexes are busy." );
			return false;
		}
		
		cr.TransitToMap( mapId, hexX, hexY, cr.Dir );
		
		Location@ loc = map.GetLocation();
		if( valid(loc) )
		{
			cr.SetWorldPos( loc.WorldX, loc.WorldY );
		}
		else
		{
			cr.Say( SAY_NETMSG, "|0xFFFF00 You have no idea where you are." );
		}	
		return true;
	}
	
	uint online() 
	{
		if( mapId == 0 )
		{
			return 0;
		}
		
		Map@ map = GetMap( mapId );
		if( !valid( map ) )
		{
			return 0;
		}

		return CountMapPlayers( map );
	}
}

class Teleport
{
	Teleport[] _list;
	uint list() 
	{ 
		return _list.length(); 
	}
	
	Teleport@ get( uint n ) 
	{ 
		if( n < 0 || n >= list() ) 
		{
			Log( "[" + name() + "] " + "Attempt of getting teleport #" + n + "/" + list() + "." );
			return null; 
		}
		
		return _list[n];
	}
	
	string _name;
	string name() { return _name; }
	string name( uint n ) 
	{ 
		Teleport@ target = get(n);
		return valid( target ) ? target.name() : "N-A";
	}

	Teleport( string name )
	{
		init( name );
	}
	
	Teleport( string name, uint locPID, uint mapN, uint x, uint y )
	{
		init( name );
		
		Map@ map = GetLocationMap( locPID, mapN );
		@this._pos = Pos( map, x, y );
		
		if( !valid( map ) )
		{
			this._name += " #" + locPID + "-" + mapN;
		}
	}
	
	void init( string name )
	{
		this._name = name;
		this._list.resize(0);
		@this._pos = null;
	}
	
	Teleport@ add( string name )
	{
		return add( Teleport( name ) );
	}
	
	Teleport@ add( string name, uint locPID, uint mapN, uint x, uint y )
	{
		return add( Teleport( name, locPID, mapN, x, y ) );
	}
	
	Teleport@ add( Teleport teleport )
	{
		_list.insertLast( teleport );
		return this;
	}

	Pos@ _pos;
	Teleport@ pos( Pos@ pos )
	{
		@this._pos = @pos;
		return this;
	}

	Teleport@ pos( Map@ map, uint x, uint y )
	{
		return pos( Pos( map, x, y ) );
	}

	Teleport@ pos( uint mapId, uint x, uint y )
	{
		return pos( Pos( mapId, x, y ) );
	}

	uint posOnline() 
	{
		return valid(_pos) ? _pos.online() : 0;
	}

	uint online() 
	{ 
		uint result = posOnline();
		for( uint n = 0, l = list(); n < l; n++ )
		{
			result += online(n);
		}
		
		return result;
	}
	
	uint online( uint n ) 
	{ 
		Teleport@ target = get(n);
		return valid( target ) ? target.online() : 0;
	}

	bool warp( Critter& cr )
	{
		return _pos.TransitToMap( cr );
	}
}

void ShowPlayers( Critter& cr )
{
	OpenMenu( cr, "SelectPlayer", MenuPlayers() );
	cr.RunClientScript( "client_gui@SetPlayerMenuActive", 1, 0, 0, null, null );
	cr.StatBase[ST_VAR0] = -1;
}

void unsafe_stopPlayerMenu( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
	if( !isGM(player) )
	{
		return;
	}
	
	player.StatBase[ST_VAR0] = 0;
}

class MenuPlayers: CenteredMenuHandler
{
	bool MenuUpdate( Critter& cr, iDialogBox& menu )
	{
		if( cr.Stat[ST_VAR0] == 0 )
		{
			return false;
		}
		
		Critter@[] crs;
		uint count = GetAllPlayers( crs );
		for( uint n = 0; n < count; n++ )
		{
			string text;
			
			if( isGM( crs[n] ) )
			{
				text += "[GM]";
			}
			else if( crs[n].IsDead() )
			{
				text += "x_X";
			}
			else if( crs[n].IsKnockout() )
			{
				if( crs[n].Stat[ ST_CURRENT_HP ] > 0 )
				{
					text += "-_-";
				}
				else
				{
					text += "o_O";
				}
			}
			else
			{
				text += "^_^";
			}
			
			text += " " + GetPlayerName( crs[n].Id );
			
			if( menu.Button( text ) )
			{ 
				Map@ map = crs[n].GetMap();
				if( !valid( map ) )
				{
					cr.Say( SAY_NETMSG, "Target on Global Map, use #cr2me " + crs[n].Id + " to teleport it to self." );
				}
				
				Location@ loc = map.GetLocation();
				cr.SetWorldPos(loc.WorldX, loc.WorldY);

				uint16 hexX, hexY;
				do
				{
					hexX = crs[n].HexX;
					hexY = crs[n].HexY;
					
					map.MoveHexByDir( hexX, hexY, Random( 0, 5 ), Random( 3, 5 ) );
				}
				while( !map.IsHexPassed( hexX, hexY ) );
				
				cr.TransitToMap( map.Id, hexX, hexY, 0 );
				return false;
			}
		}
		
		if( menu.ButtonMsg( STR_CLOSE_MENU_BUTTON ) )
		{
			return false;
		}
		
		return true;
	}

	int getDescriptionFile()
	{
		return TEXTMSG_TEXT;
	}

	int getDescriptionLine()
	{
		return STR_TELEPORTS_MENU_MAIN;
	}
	
	string@ Description( Critter& cr )
	{
		Map@ map = cr.GetMap();
		uint count = CountMapPlayers( map );
		
		Critter@[] crs;
		uint online = GetAllPlayers(crs);
		
		string info = "$name" + "\n" 
					+ "Players Online: " + online + "\n" 
					+ "Players of Map: " + count;
		
		return info;
	}
	
	bool ShouldRedraw( Critter& cr )
	{
		return true;
	}	
}

#endif