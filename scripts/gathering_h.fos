// Author: Anuri
#ifndef GATHERING_H
#define GATHERING_H

	//=========GATHERING_MODIFIERS==========//
	#define ACTION_PAUSE_MIN		 	( 800 )
	#define ACTION_PAUSE_MAX		 	( 1700 )
	#define ACTION_PAUSE_BASE		 	( 1800 )
	#define ACTION_PAUSE_BONUS_RATE	 	( 100 )

	#define ACTION_FATIGUE_MIN        	( 5 )
	#define ACTION_FATIGUE_MAX       	( 15 )
	#define ACTION_FATIGUE_BASE			( 20 )
	#define ACTION_F_RATE_STR			( 1 )
	#define ACTION_F_RATE_END			( 1 )

	#define OBJECT_DPA_MIN				( 70 ) 		// DPA = Damage Per Action
	#define OBJECT_DPA_MAX				( 350 )
	#define OBJECT_DPA_BASE				( 50 )
	#define OBJECT_HP_BASE				( 1000 )

	#define PHASE_TIMEOUT_MIN		 	( 75 )
	#define PHASE_TIMEOUT_MAX		 	( 120 )
	#define PHASE_TIMEOUT_BASE		 	( 70 )
	#define PHASE_TIMEOUT_RATE 			( 5 )

	#define SKILL_ROLL_SIMPLIFIER		( 5 ) 		// injury difficulty multiplier 
	#define CRITICAL_FAILURE_BASE		( 11 ) 		// used for profit part of code

	#define ORE_TYPE					Val0		// 0 - rock, 1 - copper, 2 - led, 3 - minerals, 4 - coal, 5 - gold, 6 - iron, 7 - uranium
	#define	RESOURCE_CAPACITY			Val1 		// used as current HP of item
	#define RESOURCE_DNA				Val2		// used as PID for loot
	#define EVENT 						Val3 		// 
	#define ORIGINAL_TREE_PID			Val4		// original tree pid in slump
	#define TREE_REGROW_TIME			Val9 		// time before tree regrows

	#define MAP_ORE_SPAWN_TE   			( 13 )
	#define MAP_JUNK_SPAWN_TE  			( 14 )

	#define SKINNING_STR_MOD			( 1 )		// strength mod
	#define SKINNING_AGI_MOD			( 2 ) 		// agility mod
	#define SKINNING_BASE_DIFFICULTY	( 10 ) 		// base difficulty
	#define SKINNING_DIFFICULTY_MOD		( 10 )		// general skinning modifier

	#define INJURED_HP_DAMAGE			( 12 )		// Damge if doing gathering while being injured

	#define STASH_OWNER					Val2

	#define	ORE_TYPE_STONE				( 0 )
	#define	ORE_TYPE_COPPER				( 1 )
	#define	ORE_TYPE_LEAD				( 2 )
	#define	ORE_TYPE_MINERAL			( 3 )
	#define	ORE_TYPE_COAL				( 4 )
	#define	ORE_TYPE_GOLD				( 5 )
	#define	ORE_TYPE_METAL				( 6 )
	#define	ORE_TYPE_URANIUM			( 7 )

	const uint16[] ChoppingTools =		{ PID_AXE, PID_AXE2, PID_REVKNIFE2, PID_MACHETE, PID_SHOVEL, PID_SPADE, PID_SM_KNIFE };
	const uint16[] ScavengingTools =	{ PID_CROWBAR, PID_SHOVEL, PID_SPADE, PID_IRON_PROD, PID_MULTI_TOOL, PID_SUPER_TOOL_KIT };
	const uint16[] MiningTools =		{ PID_PRIMITIVE_SLEDGE, PID_SHOVEL, PID_SLEDGEHAMMER, PID_SUPER_SLEDGE, PID_PICKAXE, PID_DRILL, PID_SLEDGEHAMMER2, PID_SM_HAMMER, PID_SM_CLUB };
	const uint16[] SkinningTools = 		{ PID_KNIFE, PID_COMBAT_KNIFE, PID_GONZO, PID_THROWING_KNIFE, PID_SWITCHBLADE, PID_LIL_JESUS_WEAPON, PID_SCISSORS, PID_CUTTHROAT, PID_REVFIST1, PID_REVKNIFE1, PID_REVKNIFE2, PID_MACHETE, PID_AXE, PID_AXE2, PID_WAKIZASHI_BLADE, PID_HUNTING_KNIFE, PID_SM_KNIFE };
	const int[] SkinToolMods = 			{ 	  10, 			 20, 			20,	         5, 				-10, 				20, 			  -15, 			-20, 			0, 			   5, 			 10, 			30,		  25,		25, 			15,				30,					20     };

	const uint16[] JunkPileArtList = 	{ 2116, 2117, 2118, 2252, 2253, 2254, 2255, 2256, 2275, 2276, 2311, 2314, 2315, 8095, 8096, 8098, 8099, 16584, 16585, 16586, 16687, 16590, 16591 };
	const uint16[] JunkLootList = 		{ PID_CRAFT_L_LINT, PID_JUNK, PID_METAL_JUNK1, PID_METAL_JUNK2, PID_METAL_CAN, PID_RUST_METAL_SHEET, PID_WATER_TUBE, PID_IRON_ROD, PID_BOTTLE_GLASS, 
										  PID_EMPTY_JET, PID_MPARTS, PID_NAILS, PID_PART_OF_ROPE, PID_SPIKE_MEH, PID_BOLT, PID_CRAFT_L_RAGS, PID_TUBE, PID_CRAFT_M_BARS, PID_IRON_PROD };

	const uint16[][] OreList = 
	{ 
		{ PID_ORE_DEPOSIT_S, PID_ORE_DEPOSIT_S2, PID_BOULDER, PID_ORE_DEPOSIT_M, PID_ORE_DEPOSIT_L }, 
		{ PID_CUPPER_ORE_S, PID_CUPPER_ORE_M, PID_CUPPER_ORE_L },
		{ PID_LED_ORE_S, PID_LED_ORE_M, PID_LED_ORE_L },
		{ PID_MINERALS_S, PID_MINERALS_M, PID_MINERALS_M },
		{ PID_COAL_S, PID_COAL_M, PID_COAL_M },
		{ PID_GOLD_ORE_S, PID_GOLD_ORE_M, PID_GOLD_ORE_M },
		{ PID_IRON_ORE_S, PID_IRON_ORE_M, PID_IRON_ORE_L },
		{ PID_URANIUM_ORE_S, PID_URANIUM_ORE_M, PID_URANIUM_ORE_L }
	};

	const string[] SkavengingSounds	=	{ "junk1.ogg", "junk2.ogg", "junk3.ogg", "junk4.ogg", "junk5.ogg", "junk6.ogg", "junk7.ogg", "junk8.ogg" };
	const string[] HammerSounds		=	{ "hammer_mine1.ogg", "hammer_mine2.ogg", "hammer_mine3.ogg", "hammer_mine4.ogg" };
	const string[] PickaxeSounds	=	{ "pickaxe_mine1.ogg", "pickaxe_mine2.ogg", "pickaxe_mine3.ogg", "pickaxe_mine4.ogg", "pickaxe_mine5.ogg", "pickaxe_mine6.ogg", "pickaxe_mine7.ogg", "pickaxe_mine8.ogg" };
	const string[] ChoppingSounds	= 	{ "Tree1.ogg", "Tree2.ogg", "Tree3.ogg", "Tree4.ogg" };
	const string[] SkinningSounds	=	{ "Skinning1.ogg", "Skinning2.ogg", "Skinning3.ogg", "Skinning4.ogg", "Skinning5.ogg", "Skinning6.ogg", "Skinning7.ogg", "Skinning8.ogg", "Skinning9.ogg", "Skinning10.ogg", "Skinning11.ogg", "Skinning12.ogg" };
	const string[] StashVariants	=	{ "SOILA.FRM", "SOILB.FRM", "SOILC.FRM", "SOILD.FRM" };

	#ifndef GATHERING
	
		#ifdef __SERVER
			import uint e_TiredenessTimeout( uint[]@ values ) from "gathering";
			import bool Accident( Critter& cr, int skillNum ) from "gathering";
			import bool IsTired( Critter& cr ) from "gathering";
			import void BreakTool( Critter& cr, Item@ tool ) from "gathering";
		#endif // __SERVER

		#ifdef __MAIN_MODULE__
			import bool PrepareChopping( Critter& cr, Item@ tool, Item@ target ) from "chopping";
			import bool TryChopItem( Critter& cr, Item@ tool, Item@ target ) from "chopping";
			import bool PrepareMining( Critter& cr, Item@ tool, Item@ target ) from "mining";
			import bool PrepareScavenging( Critter& cr, Item@ tool, Item@ target ) from "scavenging";
			import bool PrepareSkinning( Critter& cr, Item@ tool, Critter@ target ) from "skinning";
			import bool start_devour( Critter& cr, Critter@ target ) from "skinning";
			import bool CheckRemainsRemoval( Critter& cr, Item@ targetItem ) from "digging";
			import bool TryDigStash( Critter& cr, Item& tool, Item& stash ) from "digging";
		#endif // __MAIN_MODULE__

		#ifdef GENERAL_UNSAFE
			import void TryGetSand( Critter& cr, Item& shovel, int hexX, int hexY ) from "digging";
			import bool start_devour( Critter& cr, Critter@ target ) from "skinning";
		#endif // GENERAL_UNSAFE

		#ifdef GAMEPLAY
			import void OreInit() from "mining";
			import void JunkInit() from "scavenging";
			import void CutTreeManager() from "chopping";
		#endif //GAMEPLAY
		
	#endif // GATHERING
	
#endif	// GATHERING_H