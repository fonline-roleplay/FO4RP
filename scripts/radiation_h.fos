#ifndef RADIATION_H
#define RADIATION_H

	#define RADIATION_STAGES           ( 6 )
	#define RADIATION_STATS            ( 8 )
	#define RADIATION_DURATION         ( 10080 * 60 )
	#define RADIATION_DAMAGE_VALUE     ( 66 )
	#define RADIATION_HIGH_DOSE        ( 66 )
	#define RADIATION_DEAD_DOSE        ( 2000 )
	#define RADIATION_MAX_BACK_DOSE	   ( 1000 )

	const int[] RadiationEffects =
	{
							  1,  100,  200,  400,  600, 1000, /*stages values*/
		ST_STRENGTH,    	  0,    0,    0,    2,    4,    6, /*stats amount*/
		ST_PERCEPTION,    	  0,    0,    1,    0,    3,    5,
		ST_ENDURANCE,         0,    0,    0,    1,    3,    5,
		ST_CHARISMA,    	  0,    0,    0,    0,    3,    5,
		ST_INTELLECT,    	  0,    0,    0,    0,    1,    3,
		ST_AGILITY,    		  0,    0,    1,    2,    5,    6,
		ST_CURRENT_HP,    	  0,    1,    3,    5,   15,   20,
		ST_HEALING_RATE,      0,    0,    0,    5,   10,   10,
	};

	// Table offsets
	#define TABLE_STAGE_VALUE          # (stage)          RadiationEffects[ ( stage ) - 1 ]
	#define TABLE_STAT_INDEX           # (stat)            RadiationEffects[ 6 + ( stat ) * 7 ]
	#define TABLE_STAT_AMOUNT          # ( stat, stage )RadiationEffects[ 6 + ( stat ) * 7 + ( stage ) ]

	#define RADIATION_STRENGTH		Val0
	#define RADIATION_TICK			Val1
	#define RADIATION_DISTANCE		Val2
	#define RADIATION_EVENT			Val3
	#define RADIATION_EPICENTRE		Val4

	#ifndef RADIATION
		import void AffectRadiation( Critter& cr, int value ) from "radiation";
		import void DropRadiation( Critter& cr ) from "radiation";
		import void RadiateHex( Critter& cr, int mapID, int hx, int hy, int rad_strength, int rad_time, int rad_radius, int rad_epicentre=0 ) from "radiation";
	#endif //RADIATION


#endif //RADIATION_H